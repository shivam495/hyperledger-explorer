{"ast":null,"code":"/**\n *    SPDX-License-Identifier: Apache-2.0\n */import{combineReducers}from'redux';import types from'./types';const initialState={};const blockListReducer=(state=initialState,action)=>{switch(action.type){case types.BLOCK_LIST:{return{rows:action.payload.rows,loaded:true,errors:action.error};}default:{return state;}}};const blockListSearchReducer=(state=initialState,action)=>{switch(action.type){case types.BLOCK_LIST_SEARCH:{return{rows:action.payload.rows,loaded:true,errors:action.error};}default:{return state;}}};const chaincodeListReducer=(state=initialState,action)=>{switch(action.type){case types.CHAINCODE_LIST:{return{rows:action.payload.chaincode,loaded:true,errors:action.error};}default:{return state;}}};const channelsReducer=(state=initialState,action)=>{switch(action.type){case types.CHANNELS:{return{rows:action.payload.channels,loaded:true,errors:action.error};}default:{return state;}}};const peerListReducer=(state=initialState,action)=>{switch(action.type){case types.PEER_LIST:{return{rows:action.payload.peers,loaded:true,errors:action.error};}default:{return state;}}};const transactionReducer=(state=initialState,action)=>{switch(action.type){case types.TRANSACTION:{return{transaction:action.payload.row,loaded:true,errors:action.error};}default:{return state;}}};const transactionListReducer=(state=initialState,action)=>{switch(action.type){case types.TRANSACTION_LIST:{return{rows:action.payload.rows,loaded:true,errors:action.error};}default:{return state;}}};const transactionListSearchReducer=(state=initialState,action)=>{switch(action.type){case types.TRANSACTION_LIST_SEARCH:{return{rows:action.payload.rows,loaded:true,errors:action.error};}default:{return state;}}};const reducer=combineReducers({blockList:blockListReducer,chaincodeList:chaincodeListReducer,channels:channelsReducer,peerList:peerListReducer,transaction:transactionReducer,transactionList:transactionListReducer,blockListSearch:blockListSearchReducer,transactionListSearch:transactionListSearchReducer});export default reducer;","map":{"version":3,"sources":["/home/shivam/blockchain-explorer/client/src/state/redux/tables/reducers.js"],"names":["combineReducers","types","initialState","blockListReducer","state","action","type","BLOCK_LIST","rows","payload","loaded","errors","error","blockListSearchReducer","BLOCK_LIST_SEARCH","chaincodeListReducer","CHAINCODE_LIST","chaincode","channelsReducer","CHANNELS","channels","peerListReducer","PEER_LIST","peers","transactionReducer","TRANSACTION","transaction","row","transactionListReducer","TRANSACTION_LIST","transactionListSearchReducer","TRANSACTION_LIST_SEARCH","reducer","blockList","chaincodeList","peerList","transactionList","blockListSearch","transactionListSearch"],"mappings":"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","sourcesContent":["/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport { combineReducers } from 'redux';\nimport types from './types';\n\nconst initialState = {};\n\nconst blockListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.BLOCK_LIST: {\n      return {\n        rows: action.payload.rows,\n        loaded: true,\n        errors: action.error,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst blockListSearchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.BLOCK_LIST_SEARCH: {\n      return {\n        rows: action.payload.rows,\n        loaded: true,\n        errors: action.error,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst chaincodeListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.CHAINCODE_LIST: {\n      return {\n        rows: action.payload.chaincode,\n        loaded: true,\n        errors: action.error,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst channelsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.CHANNELS: {\n      return {\n        rows: action.payload.channels,\n        loaded: true,\n        errors: action.error,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst peerListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.PEER_LIST: {\n      return {\n        rows: action.payload.peers,\n        loaded: true,\n        errors: action.error,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst transactionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.TRANSACTION: {\n      return {\n        transaction: action.payload.row,\n        loaded: true,\n        errors: action.error,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst transactionListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.TRANSACTION_LIST: {\n      return {\n        rows: action.payload.rows,\n        loaded: true,\n        errors: action.error,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst transactionListSearchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.TRANSACTION_LIST_SEARCH: {\n      return {\n        rows: action.payload.rows,\n        loaded: true,\n        errors: action.error,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst reducer = combineReducers({\n  blockList: blockListReducer,\n  chaincodeList: chaincodeListReducer,\n  channels: channelsReducer,\n  peerList: peerListReducer,\n  transaction: transactionReducer,\n  transactionList: transactionListReducer,\n  blockListSearch: blockListSearchReducer,\n  transactionListSearch: transactionListSearchReducer,\n});\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}