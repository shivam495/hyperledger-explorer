{"ast":null,"code":"/* AUTO-GENERATED. DO NOT MODIFY. */\n\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n\n JS Beautifier\n---------------\n\n\n  Written by Einar Lielmanis, <einar@beautifier.io>\n      https://beautifier.io/\n\n  Originally converted to javascript by Vital, <vital76@gmail.com>\n  \"End braces on own line\" added by Chris J. Shull, <chrisjshull@gmail.com>\n  Parsing improvements for brace-less statements by Liam Newman <bitwiseman@beautifier.io>\n\n\n  Usage:\n    js_beautify(js_source_text);\n    js_beautify(js_source_text, options);\n\n  The options are:\n    indent_size (default 4)          - indentation size,\n    indent_char (default space)      - character to indent with,\n    preserve_newlines (default true) - whether existing line breaks should be preserved,\n    max_preserve_newlines (default unlimited) - maximum number of line breaks to be preserved in one chunk,\n\n    jslint_happy (default false) - if true, then jslint-stricter mode is enforced.\n\n            jslint_happy        !jslint_happy\n            ---------------------------------\n            function ()         function()\n\n            switch () {         switch() {\n            case 1:               case 1:\n              break;                break;\n            }                   }\n\n    space_after_anon_function (default false) - should the space before an anonymous function's parens be added, \"function()\" vs \"function ()\",\n          NOTE: This option is overriden by jslint_happy (i.e. if jslint_happy is true, space_after_anon_function is true by design)\n\n    brace_style (default \"collapse\") - \"collapse\" | \"expand\" | \"end-expand\" | \"none\" | any of the former + \",preserve-inline\"\n            put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are.\n            preserve-inline will try to preserve inline blocks of curly braces\n\n    space_before_conditional (default true) - should the space before conditional statement be added, \"if(true)\" vs \"if (true)\",\n\n    unescape_strings (default false) - should printable characters in strings encoded in \\xNN notation be unescaped, \"example\" vs \"\\x65\\x78\\x61\\x6d\\x70\\x6c\\x65\"\n\n    wrap_line_length (default unlimited) - lines should wrap at next opportunity after this number of characters.\n          NOTE: This is not a hard limit. Lines will continue until a point where a newline would\n                be preserved if it were present.\n\n    end_with_newline (default false)  - end output with a newline\n\n\n    e.g\n\n    js_beautify(js_source_text, {\n      'indent_size': 1,\n      'indent_char': '\\t'\n    });\n\n*/\n(function () {\n  /* GENERATED_BUILD_OUTPUT */\n  var legacy_beautify_js =\n  /******/\n  function (modules) {\n    // webpackBootstrap\n\n    /******/\n    // The module cache\n\n    /******/\n    var installedModules = {};\n    /******/\n\n    /******/\n    // The require function\n\n    /******/\n\n    function __webpack_require__(moduleId) {\n      /******/\n\n      /******/\n      // Check if module is in cache\n\n      /******/\n      if (installedModules[moduleId]) {\n        /******/\n        return installedModules[moduleId].exports;\n        /******/\n      }\n      /******/\n      // Create a new module (and put it into the cache)\n\n      /******/\n\n\n      var module = installedModules[moduleId] = {\n        /******/\n        i: moduleId,\n\n        /******/\n        l: false,\n\n        /******/\n        exports: {}\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // Execute the module function\n\n      /******/\n\n      modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n      /******/\n\n      /******/\n      // Flag the module as loaded\n\n      /******/\n\n      module.l = true;\n      /******/\n\n      /******/\n      // Return the exports of the module\n\n      /******/\n\n      return module.exports;\n      /******/\n    }\n    /******/\n\n    /******/\n\n    /******/\n    // expose the modules object (__webpack_modules__)\n\n    /******/\n\n\n    __webpack_require__.m = modules;\n    /******/\n\n    /******/\n    // expose the module cache\n\n    /******/\n\n    __webpack_require__.c = installedModules;\n    /******/\n\n    /******/\n    // define getter function for harmony exports\n\n    /******/\n\n    __webpack_require__.d = function (exports, name, getter) {\n      /******/\n      if (!__webpack_require__.o(exports, name)) {\n        /******/\n        Object.defineProperty(exports, name, {\n          enumerable: true,\n          get: getter\n        });\n        /******/\n      }\n      /******/\n\n    };\n    /******/\n\n    /******/\n    // define __esModule on exports\n\n    /******/\n\n\n    __webpack_require__.r = function (exports) {\n      /******/\n      if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n        /******/\n        Object.defineProperty(exports, Symbol.toStringTag, {\n          value: 'Module'\n        });\n        /******/\n      }\n      /******/\n\n\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n      /******/\n    };\n    /******/\n\n    /******/\n    // create a fake namespace object\n\n    /******/\n    // mode & 1: value is a module id, require it\n\n    /******/\n    // mode & 2: merge all properties of value into the ns\n\n    /******/\n    // mode & 4: return value when already ns object\n\n    /******/\n    // mode & 8|1: behave like require\n\n    /******/\n\n\n    __webpack_require__.t = function (value, mode) {\n      /******/\n      if (mode & 1) value = __webpack_require__(value);\n      /******/\n\n      if (mode & 8) return value;\n      /******/\n\n      if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n      /******/\n\n      var ns = Object.create(null);\n      /******/\n\n      __webpack_require__.r(ns);\n      /******/\n\n\n      Object.defineProperty(ns, 'default', {\n        enumerable: true,\n        value: value\n      });\n      /******/\n\n      if (mode & 2 && typeof value != 'string') for (var key in value) __webpack_require__.d(ns, key, function (key) {\n        return value[key];\n      }.bind(null, key));\n      /******/\n\n      return ns;\n      /******/\n    };\n    /******/\n\n    /******/\n    // getDefaultExport function for compatibility with non-harmony modules\n\n    /******/\n\n\n    __webpack_require__.n = function (module) {\n      /******/\n      var getter = module && module.__esModule ?\n      /******/\n      function getDefault() {\n        return module['default'];\n      } :\n      /******/\n      function getModuleExports() {\n        return module;\n      };\n      /******/\n\n      __webpack_require__.d(getter, 'a', getter);\n      /******/\n\n\n      return getter;\n      /******/\n    };\n    /******/\n\n    /******/\n    // Object.prototype.hasOwnProperty.call\n\n    /******/\n\n\n    __webpack_require__.o = function (object, property) {\n      return Object.prototype.hasOwnProperty.call(object, property);\n    };\n    /******/\n\n    /******/\n    // __webpack_public_path__\n\n    /******/\n\n\n    __webpack_require__.p = \"\";\n    /******/\n\n    /******/\n\n    /******/\n    // Load entry module and return exports\n\n    /******/\n\n    return __webpack_require__(__webpack_require__.s = 0);\n    /******/\n  }(\n  /************************************************************************/\n\n  /******/\n  [\n  /* 0 */\n\n  /***/\n  function (module, exports, __webpack_require__) {\n    \"use strict\";\n    /*jshint node:true */\n\n    /*\n    \n      The MIT License (MIT)\n    \n      Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n    \n      Permission is hereby granted, free of charge, to any person\n      obtaining a copy of this software and associated documentation files\n      (the \"Software\"), to deal in the Software without restriction,\n      including without limitation the rights to use, copy, modify, merge,\n      publish, distribute, sublicense, and/or sell copies of the Software,\n      and to permit persons to whom the Software is furnished to do so,\n      subject to the following conditions:\n    \n      The above copyright notice and this permission notice shall be\n      included in all copies or substantial portions of the Software.\n    \n      THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n      EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n      NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n      BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n      ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n      CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n      SOFTWARE.\n    */\n\n    var Beautifier = __webpack_require__(1).Beautifier,\n        Options = __webpack_require__(5).Options;\n\n    function js_beautify(js_source_text, options) {\n      var beautifier = new Beautifier(js_source_text, options);\n      return beautifier.beautify();\n    }\n\n    module.exports = js_beautify;\n\n    module.exports.defaultOptions = function () {\n      return new Options();\n    };\n    /***/\n\n  },\n  /* 1 */\n\n  /***/\n  function (module, exports, __webpack_require__) {\n    \"use strict\";\n    /*jshint node:true */\n\n    /*\n    \n      The MIT License (MIT)\n    \n      Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n    \n      Permission is hereby granted, free of charge, to any person\n      obtaining a copy of this software and associated documentation files\n      (the \"Software\"), to deal in the Software without restriction,\n      including without limitation the rights to use, copy, modify, merge,\n      publish, distribute, sublicense, and/or sell copies of the Software,\n      and to permit persons to whom the Software is furnished to do so,\n      subject to the following conditions:\n    \n      The above copyright notice and this permission notice shall be\n      included in all copies or substantial portions of the Software.\n    \n      THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n      EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n      NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n      BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n      ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n      CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n      SOFTWARE.\n    */\n\n    var Output = __webpack_require__(2).Output;\n\n    var Token = __webpack_require__(3).Token;\n\n    var acorn = __webpack_require__(4);\n\n    var Options = __webpack_require__(5).Options;\n\n    var Tokenizer = __webpack_require__(7).Tokenizer;\n\n    var line_starters = __webpack_require__(7).line_starters;\n\n    var positionable_operators = __webpack_require__(7).positionable_operators;\n\n    var TOKEN = __webpack_require__(7).TOKEN;\n\n    function in_array(what, arr) {\n      return arr.indexOf(what) !== -1;\n    }\n\n    function ltrim(s) {\n      return s.replace(/^\\s+/g, '');\n    }\n\n    function generateMapFromStrings(list) {\n      var result = {};\n\n      for (var x = 0; x < list.length; x++) {\n        // make the mapped names underscored instead of dash\n        result[list[x].replace(/-/g, '_')] = list[x];\n      }\n\n      return result;\n    }\n\n    function reserved_word(token, word) {\n      return token && token.type === TOKEN.RESERVED && token.text === word;\n    }\n\n    function reserved_array(token, words) {\n      return token && token.type === TOKEN.RESERVED && in_array(token.text, words);\n    } // Unsure of what they mean, but they work. Worth cleaning up in future.\n\n\n    var special_words = ['case', 'return', 'do', 'if', 'throw', 'else', 'await', 'break', 'continue', 'async'];\n    var validPositionValues = ['before-newline', 'after-newline', 'preserve-newline']; // Generate map from array\n\n    var OPERATOR_POSITION = generateMapFromStrings(validPositionValues);\n    var OPERATOR_POSITION_BEFORE_OR_PRESERVE = [OPERATOR_POSITION.before_newline, OPERATOR_POSITION.preserve_newline];\n    var MODE = {\n      BlockStatement: 'BlockStatement',\n      // 'BLOCK'\n      Statement: 'Statement',\n      // 'STATEMENT'\n      ObjectLiteral: 'ObjectLiteral',\n      // 'OBJECT',\n      ArrayLiteral: 'ArrayLiteral',\n      //'[EXPRESSION]',\n      ForInitializer: 'ForInitializer',\n      //'(FOR-EXPRESSION)',\n      Conditional: 'Conditional',\n      //'(COND-EXPRESSION)',\n      Expression: 'Expression' //'(EXPRESSION)'\n\n    };\n\n    function remove_redundant_indentation(output, frame) {\n      // This implementation is effective but has some issues:\n      //     - can cause line wrap to happen too soon due to indent removal\n      //           after wrap points are calculated\n      // These issues are minor compared to ugly indentation.\n      if (frame.multiline_frame || frame.mode === MODE.ForInitializer || frame.mode === MODE.Conditional) {\n        return;\n      } // remove one indent from each line inside this section\n\n\n      output.remove_indent(frame.start_line_index);\n    } // we could use just string.split, but\n    // IE doesn't like returning empty strings\n\n\n    function split_linebreaks(s) {\n      //return s.split(/\\x0d\\x0a|\\x0a/);\n      s = s.replace(acorn.allLineBreaks, '\\n');\n      var out = [],\n          idx = s.indexOf(\"\\n\");\n\n      while (idx !== -1) {\n        out.push(s.substring(0, idx));\n        s = s.substring(idx + 1);\n        idx = s.indexOf(\"\\n\");\n      }\n\n      if (s.length) {\n        out.push(s);\n      }\n\n      return out;\n    }\n\n    function is_array(mode) {\n      return mode === MODE.ArrayLiteral;\n    }\n\n    function is_expression(mode) {\n      return in_array(mode, [MODE.Expression, MODE.ForInitializer, MODE.Conditional]);\n    }\n\n    function all_lines_start_with(lines, c) {\n      for (var i = 0; i < lines.length; i++) {\n        var line = lines[i].trim();\n\n        if (line.charAt(0) !== c) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    function each_line_matches_indent(lines, indent) {\n      var i = 0,\n          len = lines.length,\n          line;\n\n      for (; i < len; i++) {\n        line = lines[i]; // allow empty lines to pass through\n\n        if (line && line.indexOf(indent) !== 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    function Beautifier(source_text, options) {\n      options = options || {};\n      this._source_text = source_text || '';\n      this._output = null;\n      this._tokens = null;\n      this._last_last_text = null;\n      this._flags = null;\n      this._previous_flags = null;\n      this._flag_store = null;\n      this._options = new Options(options);\n    }\n\n    Beautifier.prototype.create_flags = function (flags_base, mode) {\n      var next_indent_level = 0;\n\n      if (flags_base) {\n        next_indent_level = flags_base.indentation_level;\n\n        if (!this._output.just_added_newline() && flags_base.line_indent_level > next_indent_level) {\n          next_indent_level = flags_base.line_indent_level;\n        }\n      }\n\n      var next_flags = {\n        mode: mode,\n        parent: flags_base,\n        last_token: flags_base ? flags_base.last_token : new Token(TOKEN.START_BLOCK, ''),\n        // last token text\n        last_word: flags_base ? flags_base.last_word : '',\n        // last TOKEN.WORD passed\n        declaration_statement: false,\n        declaration_assignment: false,\n        multiline_frame: false,\n        inline_frame: false,\n        if_block: false,\n        else_block: false,\n        do_block: false,\n        do_while: false,\n        import_block: false,\n        in_case_statement: false,\n        // switch(..){ INSIDE HERE }\n        in_case: false,\n        // we're on the exact line with \"case 0:\"\n        case_body: false,\n        // the indented case-action block\n        indentation_level: next_indent_level,\n        alignment: 0,\n        line_indent_level: flags_base ? flags_base.line_indent_level : next_indent_level,\n        start_line_index: this._output.get_line_number(),\n        ternary_depth: 0\n      };\n      return next_flags;\n    };\n\n    Beautifier.prototype._reset = function (source_text) {\n      var baseIndentString = source_text.match(/^[\\t ]*/)[0];\n      this._last_last_text = ''; // pre-last token text\n\n      this._output = new Output(this._options, baseIndentString); // If testing the ignore directive, start with output disable set to true\n\n      this._output.raw = this._options.test_output_raw; // Stack of parsing/formatting states, including MODE.\n      // We tokenize, parse, and output in an almost purely a forward-only stream of token input\n      // and formatted output.  This makes the beautifier less accurate than full parsers\n      // but also far more tolerant of syntax errors.\n      //\n      // For example, the default mode is MODE.BlockStatement. If we see a '{' we push a new frame of type\n      // MODE.BlockStatement on the the stack, even though it could be object literal.  If we later\n      // encounter a \":\", we'll switch to to MODE.ObjectLiteral.  If we then see a \";\",\n      // most full parsers would die, but the beautifier gracefully falls back to\n      // MODE.BlockStatement and continues on.\n\n      this._flag_store = [];\n      this.set_mode(MODE.BlockStatement);\n      var tokenizer = new Tokenizer(source_text, this._options);\n      this._tokens = tokenizer.tokenize();\n      return source_text;\n    };\n\n    Beautifier.prototype.beautify = function () {\n      // if disabled, return the input unchanged.\n      if (this._options.disabled) {\n        return this._source_text;\n      }\n\n      var sweet_code;\n\n      var source_text = this._reset(this._source_text);\n\n      var eol = this._options.eol;\n\n      if (this._options.eol === 'auto') {\n        eol = '\\n';\n\n        if (source_text && acorn.lineBreak.test(source_text || '')) {\n          eol = source_text.match(acorn.lineBreak)[0];\n        }\n      }\n\n      var current_token = this._tokens.next();\n\n      while (current_token) {\n        this.handle_token(current_token);\n        this._last_last_text = this._flags.last_token.text;\n        this._flags.last_token = current_token;\n        current_token = this._tokens.next();\n      }\n\n      sweet_code = this._output.get_code(eol);\n      return sweet_code;\n    };\n\n    Beautifier.prototype.handle_token = function (current_token, preserve_statement_flags) {\n      if (current_token.type === TOKEN.START_EXPR) {\n        this.handle_start_expr(current_token);\n      } else if (current_token.type === TOKEN.END_EXPR) {\n        this.handle_end_expr(current_token);\n      } else if (current_token.type === TOKEN.START_BLOCK) {\n        this.handle_start_block(current_token);\n      } else if (current_token.type === TOKEN.END_BLOCK) {\n        this.handle_end_block(current_token);\n      } else if (current_token.type === TOKEN.WORD) {\n        this.handle_word(current_token);\n      } else if (current_token.type === TOKEN.RESERVED) {\n        this.handle_word(current_token);\n      } else if (current_token.type === TOKEN.SEMICOLON) {\n        this.handle_semicolon(current_token);\n      } else if (current_token.type === TOKEN.STRING) {\n        this.handle_string(current_token);\n      } else if (current_token.type === TOKEN.EQUALS) {\n        this.handle_equals(current_token);\n      } else if (current_token.type === TOKEN.OPERATOR) {\n        this.handle_operator(current_token);\n      } else if (current_token.type === TOKEN.COMMA) {\n        this.handle_comma(current_token);\n      } else if (current_token.type === TOKEN.BLOCK_COMMENT) {\n        this.handle_block_comment(current_token, preserve_statement_flags);\n      } else if (current_token.type === TOKEN.COMMENT) {\n        this.handle_comment(current_token, preserve_statement_flags);\n      } else if (current_token.type === TOKEN.DOT) {\n        this.handle_dot(current_token);\n      } else if (current_token.type === TOKEN.EOF) {\n        this.handle_eof(current_token);\n      } else if (current_token.type === TOKEN.UNKNOWN) {\n        this.handle_unknown(current_token, preserve_statement_flags);\n      } else {\n        this.handle_unknown(current_token, preserve_statement_flags);\n      }\n    };\n\n    Beautifier.prototype.handle_whitespace_and_comments = function (current_token, preserve_statement_flags) {\n      var newlines = current_token.newlines;\n      var keep_whitespace = this._options.keep_array_indentation && is_array(this._flags.mode);\n\n      if (current_token.comments_before) {\n        var comment_token = current_token.comments_before.next();\n\n        while (comment_token) {\n          // The cleanest handling of inline comments is to treat them as though they aren't there.\n          // Just continue formatting and the behavior should be logical.\n          // Also ignore unknown tokens.  Again, this should result in better behavior.\n          this.handle_whitespace_and_comments(comment_token, preserve_statement_flags);\n          this.handle_token(comment_token, preserve_statement_flags);\n          comment_token = current_token.comments_before.next();\n        }\n      }\n\n      if (keep_whitespace) {\n        for (var i = 0; i < newlines; i += 1) {\n          this.print_newline(i > 0, preserve_statement_flags);\n        }\n      } else {\n        if (this._options.max_preserve_newlines && newlines > this._options.max_preserve_newlines) {\n          newlines = this._options.max_preserve_newlines;\n        }\n\n        if (this._options.preserve_newlines) {\n          if (newlines > 1) {\n            this.print_newline(false, preserve_statement_flags);\n\n            for (var j = 1; j < newlines; j += 1) {\n              this.print_newline(true, preserve_statement_flags);\n            }\n          }\n        }\n      }\n    };\n\n    var newline_restricted_tokens = ['async', 'break', 'continue', 'return', 'throw', 'yield'];\n\n    Beautifier.prototype.allow_wrap_or_preserved_newline = function (current_token, force_linewrap) {\n      force_linewrap = force_linewrap === undefined ? false : force_linewrap; // Never wrap the first token on a line\n\n      if (this._output.just_added_newline()) {\n        return;\n      }\n\n      var shouldPreserveOrForce = this._options.preserve_newlines && current_token.newlines || force_linewrap;\n      var operatorLogicApplies = in_array(this._flags.last_token.text, positionable_operators) || in_array(current_token.text, positionable_operators);\n\n      if (operatorLogicApplies) {\n        var shouldPrintOperatorNewline = in_array(this._flags.last_token.text, positionable_operators) && in_array(this._options.operator_position, OPERATOR_POSITION_BEFORE_OR_PRESERVE) || in_array(current_token.text, positionable_operators);\n        shouldPreserveOrForce = shouldPreserveOrForce && shouldPrintOperatorNewline;\n      }\n\n      if (shouldPreserveOrForce) {\n        this.print_newline(false, true);\n      } else if (this._options.wrap_line_length) {\n        if (reserved_array(this._flags.last_token, newline_restricted_tokens)) {\n          // These tokens should never have a newline inserted\n          // between them and the following expression.\n          return;\n        }\n\n        this._output.set_wrap_point();\n      }\n    };\n\n    Beautifier.prototype.print_newline = function (force_newline, preserve_statement_flags) {\n      if (!preserve_statement_flags) {\n        if (this._flags.last_token.text !== ';' && this._flags.last_token.text !== ',' && this._flags.last_token.text !== '=' && (this._flags.last_token.type !== TOKEN.OPERATOR || this._flags.last_token.text === '--' || this._flags.last_token.text === '++')) {\n          var next_token = this._tokens.peek();\n\n          while (this._flags.mode === MODE.Statement && !(this._flags.if_block && reserved_word(next_token, 'else')) && !this._flags.do_block) {\n            this.restore_mode();\n          }\n        }\n      }\n\n      if (this._output.add_new_line(force_newline)) {\n        this._flags.multiline_frame = true;\n      }\n    };\n\n    Beautifier.prototype.print_token_line_indentation = function (current_token) {\n      if (this._output.just_added_newline()) {\n        if (this._options.keep_array_indentation && current_token.newlines && (current_token.text === '[' || is_array(this._flags.mode))) {\n          this._output.current_line.set_indent(-1);\n\n          this._output.current_line.push(current_token.whitespace_before);\n\n          this._output.space_before_token = false;\n        } else if (this._output.set_indent(this._flags.indentation_level, this._flags.alignment)) {\n          this._flags.line_indent_level = this._flags.indentation_level;\n        }\n      }\n    };\n\n    Beautifier.prototype.print_token = function (current_token) {\n      if (this._output.raw) {\n        this._output.add_raw_token(current_token);\n\n        return;\n      }\n\n      if (this._options.comma_first && current_token.previous && current_token.previous.type === TOKEN.COMMA && this._output.just_added_newline()) {\n        if (this._output.previous_line.last() === ',') {\n          var popped = this._output.previous_line.pop(); // if the comma was already at the start of the line,\n          // pull back onto that line and reprint the indentation\n\n\n          if (this._output.previous_line.is_empty()) {\n            this._output.previous_line.push(popped);\n\n            this._output.trim(true);\n\n            this._output.current_line.pop();\n\n            this._output.trim();\n          } // add the comma in front of the next token\n\n\n          this.print_token_line_indentation(current_token);\n\n          this._output.add_token(',');\n\n          this._output.space_before_token = true;\n        }\n      }\n\n      this.print_token_line_indentation(current_token);\n      this._output.non_breaking_space = true;\n\n      this._output.add_token(current_token.text);\n\n      if (this._output.previous_token_wrapped) {\n        this._flags.multiline_frame = true;\n      }\n    };\n\n    Beautifier.prototype.indent = function () {\n      this._flags.indentation_level += 1;\n\n      this._output.set_indent(this._flags.indentation_level, this._flags.alignment);\n    };\n\n    Beautifier.prototype.deindent = function () {\n      if (this._flags.indentation_level > 0 && (!this._flags.parent || this._flags.indentation_level > this._flags.parent.indentation_level)) {\n        this._flags.indentation_level -= 1;\n\n        this._output.set_indent(this._flags.indentation_level, this._flags.alignment);\n      }\n    };\n\n    Beautifier.prototype.set_mode = function (mode) {\n      if (this._flags) {\n        this._flag_store.push(this._flags);\n\n        this._previous_flags = this._flags;\n      } else {\n        this._previous_flags = this.create_flags(null, mode);\n      }\n\n      this._flags = this.create_flags(this._previous_flags, mode);\n\n      this._output.set_indent(this._flags.indentation_level, this._flags.alignment);\n    };\n\n    Beautifier.prototype.restore_mode = function () {\n      if (this._flag_store.length > 0) {\n        this._previous_flags = this._flags;\n        this._flags = this._flag_store.pop();\n\n        if (this._previous_flags.mode === MODE.Statement) {\n          remove_redundant_indentation(this._output, this._previous_flags);\n        }\n\n        this._output.set_indent(this._flags.indentation_level, this._flags.alignment);\n      }\n    };\n\n    Beautifier.prototype.start_of_object_property = function () {\n      return this._flags.parent.mode === MODE.ObjectLiteral && this._flags.mode === MODE.Statement && (this._flags.last_token.text === ':' && this._flags.ternary_depth === 0 || reserved_array(this._flags.last_token, ['get', 'set']));\n    };\n\n    Beautifier.prototype.start_of_statement = function (current_token) {\n      var start = false;\n      start = start || reserved_array(this._flags.last_token, ['var', 'let', 'const']) && current_token.type === TOKEN.WORD;\n      start = start || reserved_word(this._flags.last_token, 'do');\n      start = start || !(this._flags.parent.mode === MODE.ObjectLiteral && this._flags.mode === MODE.Statement) && reserved_array(this._flags.last_token, newline_restricted_tokens) && !current_token.newlines;\n      start = start || reserved_word(this._flags.last_token, 'else') && !(reserved_word(current_token, 'if') && !current_token.comments_before);\n      start = start || this._flags.last_token.type === TOKEN.END_EXPR && (this._previous_flags.mode === MODE.ForInitializer || this._previous_flags.mode === MODE.Conditional);\n      start = start || this._flags.last_token.type === TOKEN.WORD && this._flags.mode === MODE.BlockStatement && !this._flags.in_case && !(current_token.text === '--' || current_token.text === '++') && this._last_last_text !== 'function' && current_token.type !== TOKEN.WORD && current_token.type !== TOKEN.RESERVED;\n      start = start || this._flags.mode === MODE.ObjectLiteral && (this._flags.last_token.text === ':' && this._flags.ternary_depth === 0 || reserved_array(this._flags.last_token, ['get', 'set']));\n\n      if (start) {\n        this.set_mode(MODE.Statement);\n        this.indent();\n        this.handle_whitespace_and_comments(current_token, true); // Issue #276:\n        // If starting a new statement with [if, for, while, do], push to a new line.\n        // if (a) if (b) if(c) d(); else e(); else f();\n\n        if (!this.start_of_object_property()) {\n          this.allow_wrap_or_preserved_newline(current_token, reserved_array(current_token, ['do', 'for', 'if', 'while']));\n        }\n\n        return true;\n      }\n\n      return false;\n    };\n\n    Beautifier.prototype.handle_start_expr = function (current_token) {\n      // The conditional starts the statement if appropriate.\n      if (!this.start_of_statement(current_token)) {\n        this.handle_whitespace_and_comments(current_token);\n      }\n\n      var next_mode = MODE.Expression;\n\n      if (current_token.text === '[') {\n        if (this._flags.last_token.type === TOKEN.WORD || this._flags.last_token.text === ')') {\n          // this is array index specifier, break immediately\n          // a[x], fn()[x]\n          if (reserved_array(this._flags.last_token, line_starters)) {\n            this._output.space_before_token = true;\n          }\n\n          this.print_token(current_token);\n          this.set_mode(next_mode);\n          this.indent();\n\n          if (this._options.space_in_paren) {\n            this._output.space_before_token = true;\n          }\n\n          return;\n        }\n\n        next_mode = MODE.ArrayLiteral;\n\n        if (is_array(this._flags.mode)) {\n          if (this._flags.last_token.text === '[' || this._flags.last_token.text === ',' && (this._last_last_text === ']' || this._last_last_text === '}')) {\n            // ], [ goes to new line\n            // }, [ goes to new line\n            if (!this._options.keep_array_indentation) {\n              this.print_newline();\n            }\n          }\n        }\n\n        if (!in_array(this._flags.last_token.type, [TOKEN.START_EXPR, TOKEN.END_EXPR, TOKEN.WORD, TOKEN.OPERATOR])) {\n          this._output.space_before_token = true;\n        }\n      } else {\n        if (this._flags.last_token.type === TOKEN.RESERVED) {\n          if (this._flags.last_token.text === 'for') {\n            this._output.space_before_token = this._options.space_before_conditional;\n            next_mode = MODE.ForInitializer;\n          } else if (in_array(this._flags.last_token.text, ['if', 'while'])) {\n            this._output.space_before_token = this._options.space_before_conditional;\n            next_mode = MODE.Conditional;\n          } else if (in_array(this._flags.last_word, ['await', 'async'])) {\n            // Should be a space between await and an IIFE, or async and an arrow function\n            this._output.space_before_token = true;\n          } else if (this._flags.last_token.text === 'import' && current_token.whitespace_before === '') {\n            this._output.space_before_token = false;\n          } else if (in_array(this._flags.last_token.text, line_starters) || this._flags.last_token.text === 'catch') {\n            this._output.space_before_token = true;\n          }\n        } else if (this._flags.last_token.type === TOKEN.EQUALS || this._flags.last_token.type === TOKEN.OPERATOR) {\n          // Support of this kind of newline preservation.\n          // a = (b &&\n          //     (c || d));\n          if (!this.start_of_object_property()) {\n            this.allow_wrap_or_preserved_newline(current_token);\n          }\n        } else if (this._flags.last_token.type === TOKEN.WORD) {\n          this._output.space_before_token = false; // function name() vs function name ()\n          // function* name() vs function* name ()\n          // async name() vs async name ()\n          // In ES6, you can also define the method properties of an object\n          // var obj = {a: function() {}}\n          // It can be abbreviated\n          // var obj = {a() {}}\n          // var obj = { a() {}} vs var obj = { a () {}}\n          // var obj = { * a() {}} vs var obj = { * a () {}}\n\n          var peek_back_two = this._tokens.peek(-3);\n\n          if (this._options.space_after_named_function && peek_back_two) {\n            // peek starts at next character so -1 is current token\n            var peek_back_three = this._tokens.peek(-4);\n\n            if (reserved_array(peek_back_two, ['async', 'function']) || peek_back_two.text === '*' && reserved_array(peek_back_three, ['async', 'function'])) {\n              this._output.space_before_token = true;\n            } else if (this._flags.mode === MODE.ObjectLiteral) {\n              if (peek_back_two.text === '{' || peek_back_two.text === ',' || peek_back_two.text === '*' && (peek_back_three.text === '{' || peek_back_three.text === ',')) {\n                this._output.space_before_token = true;\n              }\n            }\n          }\n        } else {\n          // Support preserving wrapped arrow function expressions\n          // a.b('c',\n          //     () => d.e\n          // )\n          this.allow_wrap_or_preserved_newline(current_token);\n        } // function() vs function ()\n        // yield*() vs yield* ()\n        // function*() vs function* ()\n\n\n        if (this._flags.last_token.type === TOKEN.RESERVED && (this._flags.last_word === 'function' || this._flags.last_word === 'typeof') || this._flags.last_token.text === '*' && (in_array(this._last_last_text, ['function', 'yield']) || this._flags.mode === MODE.ObjectLiteral && in_array(this._last_last_text, ['{', ',']))) {\n          this._output.space_before_token = this._options.space_after_anon_function;\n        }\n      }\n\n      if (this._flags.last_token.text === ';' || this._flags.last_token.type === TOKEN.START_BLOCK) {\n        this.print_newline();\n      } else if (this._flags.last_token.type === TOKEN.END_EXPR || this._flags.last_token.type === TOKEN.START_EXPR || this._flags.last_token.type === TOKEN.END_BLOCK || this._flags.last_token.text === '.' || this._flags.last_token.type === TOKEN.COMMA) {\n        // do nothing on (( and )( and ][ and ]( and .(\n        // TODO: Consider whether forcing this is required.  Review failing tests when removed.\n        this.allow_wrap_or_preserved_newline(current_token, current_token.newlines);\n      }\n\n      this.print_token(current_token);\n      this.set_mode(next_mode);\n\n      if (this._options.space_in_paren) {\n        this._output.space_before_token = true;\n      } // In all cases, if we newline while inside an expression it should be indented.\n\n\n      this.indent();\n    };\n\n    Beautifier.prototype.handle_end_expr = function (current_token) {\n      // statements inside expressions are not valid syntax, but...\n      // statements must all be closed when their container closes\n      while (this._flags.mode === MODE.Statement) {\n        this.restore_mode();\n      }\n\n      this.handle_whitespace_and_comments(current_token);\n\n      if (this._flags.multiline_frame) {\n        this.allow_wrap_or_preserved_newline(current_token, current_token.text === ']' && is_array(this._flags.mode) && !this._options.keep_array_indentation);\n      }\n\n      if (this._options.space_in_paren) {\n        if (this._flags.last_token.type === TOKEN.START_EXPR && !this._options.space_in_empty_paren) {\n          // () [] no inner space in empty parens like these, ever, ref #320\n          this._output.trim();\n\n          this._output.space_before_token = false;\n        } else {\n          this._output.space_before_token = true;\n        }\n      }\n\n      this.deindent();\n      this.print_token(current_token);\n      this.restore_mode();\n      remove_redundant_indentation(this._output, this._previous_flags); // do {} while () // no statement required after\n\n      if (this._flags.do_while && this._previous_flags.mode === MODE.Conditional) {\n        this._previous_flags.mode = MODE.Expression;\n        this._flags.do_block = false;\n        this._flags.do_while = false;\n      }\n    };\n\n    Beautifier.prototype.handle_start_block = function (current_token) {\n      this.handle_whitespace_and_comments(current_token); // Check if this is should be treated as a ObjectLiteral\n\n      var next_token = this._tokens.peek();\n\n      var second_token = this._tokens.peek(1);\n\n      if (this._flags.last_word === 'switch' && this._flags.last_token.type === TOKEN.END_EXPR) {\n        this.set_mode(MODE.BlockStatement);\n        this._flags.in_case_statement = true;\n      } else if (this._flags.case_body) {\n        this.set_mode(MODE.BlockStatement);\n      } else if (second_token && (in_array(second_token.text, [':', ',']) && in_array(next_token.type, [TOKEN.STRING, TOKEN.WORD, TOKEN.RESERVED]) || in_array(next_token.text, ['get', 'set', '...']) && in_array(second_token.type, [TOKEN.WORD, TOKEN.RESERVED]))) {\n        // We don't support TypeScript,but we didn't break it for a very long time.\n        // We'll try to keep not breaking it.\n        if (!in_array(this._last_last_text, ['class', 'interface'])) {\n          this.set_mode(MODE.ObjectLiteral);\n        } else {\n          this.set_mode(MODE.BlockStatement);\n        }\n      } else if (this._flags.last_token.type === TOKEN.OPERATOR && this._flags.last_token.text === '=>') {\n        // arrow function: (param1, paramN) => { statements }\n        this.set_mode(MODE.BlockStatement);\n      } else if (in_array(this._flags.last_token.type, [TOKEN.EQUALS, TOKEN.START_EXPR, TOKEN.COMMA, TOKEN.OPERATOR]) || reserved_array(this._flags.last_token, ['return', 'throw', 'import', 'default'])) {\n        // Detecting shorthand function syntax is difficult by scanning forward,\n        //     so check the surrounding context.\n        // If the block is being returned, imported, export default, passed as arg,\n        //     assigned with = or assigned in a nested object, treat as an ObjectLiteral.\n        this.set_mode(MODE.ObjectLiteral);\n      } else {\n        this.set_mode(MODE.BlockStatement);\n      }\n\n      var empty_braces = !next_token.comments_before && next_token.text === '}';\n      var empty_anonymous_function = empty_braces && this._flags.last_word === 'function' && this._flags.last_token.type === TOKEN.END_EXPR;\n\n      if (this._options.brace_preserve_inline) // check for inline, set inline_frame if so\n        {\n          // search forward for a newline wanted inside this block\n          var index = 0;\n          var check_token = null;\n          this._flags.inline_frame = true;\n\n          do {\n            index += 1;\n            check_token = this._tokens.peek(index - 1);\n\n            if (check_token.newlines) {\n              this._flags.inline_frame = false;\n              break;\n            }\n          } while (check_token.type !== TOKEN.EOF && !(check_token.type === TOKEN.END_BLOCK && check_token.opened === current_token));\n        }\n\n      if ((this._options.brace_style === \"expand\" || this._options.brace_style === \"none\" && current_token.newlines) && !this._flags.inline_frame) {\n        if (this._flags.last_token.type !== TOKEN.OPERATOR && (empty_anonymous_function || this._flags.last_token.type === TOKEN.EQUALS || reserved_array(this._flags.last_token, special_words) && this._flags.last_token.text !== 'else')) {\n          this._output.space_before_token = true;\n        } else {\n          this.print_newline(false, true);\n        }\n      } else {\n        // collapse || inline_frame\n        if (is_array(this._previous_flags.mode) && (this._flags.last_token.type === TOKEN.START_EXPR || this._flags.last_token.type === TOKEN.COMMA)) {\n          if (this._flags.last_token.type === TOKEN.COMMA || this._options.space_in_paren) {\n            this._output.space_before_token = true;\n          }\n\n          if (this._flags.last_token.type === TOKEN.COMMA || this._flags.last_token.type === TOKEN.START_EXPR && this._flags.inline_frame) {\n            this.allow_wrap_or_preserved_newline(current_token);\n            this._previous_flags.multiline_frame = this._previous_flags.multiline_frame || this._flags.multiline_frame;\n            this._flags.multiline_frame = false;\n          }\n        }\n\n        if (this._flags.last_token.type !== TOKEN.OPERATOR && this._flags.last_token.type !== TOKEN.START_EXPR) {\n          if (this._flags.last_token.type === TOKEN.START_BLOCK && !this._flags.inline_frame) {\n            this.print_newline();\n          } else {\n            this._output.space_before_token = true;\n          }\n        }\n      }\n\n      this.print_token(current_token);\n      this.indent(); // Except for specific cases, open braces are followed by a new line.\n\n      if (!empty_braces && !(this._options.brace_preserve_inline && this._flags.inline_frame)) {\n        this.print_newline();\n      }\n    };\n\n    Beautifier.prototype.handle_end_block = function (current_token) {\n      // statements must all be closed when their container closes\n      this.handle_whitespace_and_comments(current_token);\n\n      while (this._flags.mode === MODE.Statement) {\n        this.restore_mode();\n      }\n\n      var empty_braces = this._flags.last_token.type === TOKEN.START_BLOCK;\n\n      if (this._flags.inline_frame && !empty_braces) {\n        // try inline_frame (only set if this._options.braces-preserve-inline) first\n        this._output.space_before_token = true;\n      } else if (this._options.brace_style === \"expand\") {\n        if (!empty_braces) {\n          this.print_newline();\n        }\n      } else {\n        // skip {}\n        if (!empty_braces) {\n          if (is_array(this._flags.mode) && this._options.keep_array_indentation) {\n            // we REALLY need a newline here, but newliner would skip that\n            this._options.keep_array_indentation = false;\n            this.print_newline();\n            this._options.keep_array_indentation = true;\n          } else {\n            this.print_newline();\n          }\n        }\n      }\n\n      this.restore_mode();\n      this.print_token(current_token);\n    };\n\n    Beautifier.prototype.handle_word = function (current_token) {\n      if (current_token.type === TOKEN.RESERVED) {\n        if (in_array(current_token.text, ['set', 'get']) && this._flags.mode !== MODE.ObjectLiteral) {\n          current_token.type = TOKEN.WORD;\n        } else if (current_token.text === 'import' && this._tokens.peek().text === '(') {\n          current_token.type = TOKEN.WORD;\n        } else if (in_array(current_token.text, ['as', 'from']) && !this._flags.import_block) {\n          current_token.type = TOKEN.WORD;\n        } else if (this._flags.mode === MODE.ObjectLiteral) {\n          var next_token = this._tokens.peek();\n\n          if (next_token.text === ':') {\n            current_token.type = TOKEN.WORD;\n          }\n        }\n      }\n\n      if (this.start_of_statement(current_token)) {\n        // The conditional starts the statement if appropriate.\n        if (reserved_array(this._flags.last_token, ['var', 'let', 'const']) && current_token.type === TOKEN.WORD) {\n          this._flags.declaration_statement = true;\n        }\n      } else if (current_token.newlines && !is_expression(this._flags.mode) && (this._flags.last_token.type !== TOKEN.OPERATOR || this._flags.last_token.text === '--' || this._flags.last_token.text === '++') && this._flags.last_token.type !== TOKEN.EQUALS && (this._options.preserve_newlines || !reserved_array(this._flags.last_token, ['var', 'let', 'const', 'set', 'get']))) {\n        this.handle_whitespace_and_comments(current_token);\n        this.print_newline();\n      } else {\n        this.handle_whitespace_and_comments(current_token);\n      }\n\n      if (this._flags.do_block && !this._flags.do_while) {\n        if (reserved_word(current_token, 'while')) {\n          // do {} ## while ()\n          this._output.space_before_token = true;\n          this.print_token(current_token);\n          this._output.space_before_token = true;\n          this._flags.do_while = true;\n          return;\n        } else {\n          // do {} should always have while as the next word.\n          // if we don't see the expected while, recover\n          this.print_newline();\n          this._flags.do_block = false;\n        }\n      } // if may be followed by else, or not\n      // Bare/inline ifs are tricky\n      // Need to unwind the modes correctly: if (a) if (b) c(); else d(); else e();\n\n\n      if (this._flags.if_block) {\n        if (!this._flags.else_block && reserved_word(current_token, 'else')) {\n          this._flags.else_block = true;\n        } else {\n          while (this._flags.mode === MODE.Statement) {\n            this.restore_mode();\n          }\n\n          this._flags.if_block = false;\n          this._flags.else_block = false;\n        }\n      }\n\n      if (this._flags.in_case_statement && reserved_array(current_token, ['case', 'default'])) {\n        this.print_newline();\n\n        if (this._flags.last_token.type !== TOKEN.END_BLOCK && (this._flags.case_body || this._options.jslint_happy)) {\n          // switch cases following one another\n          this.deindent();\n        }\n\n        this._flags.case_body = false;\n        this.print_token(current_token);\n        this._flags.in_case = true;\n        return;\n      }\n\n      if (this._flags.last_token.type === TOKEN.COMMA || this._flags.last_token.type === TOKEN.START_EXPR || this._flags.last_token.type === TOKEN.EQUALS || this._flags.last_token.type === TOKEN.OPERATOR) {\n        if (!this.start_of_object_property()) {\n          this.allow_wrap_or_preserved_newline(current_token);\n        }\n      }\n\n      if (reserved_word(current_token, 'function')) {\n        if (in_array(this._flags.last_token.text, ['}', ';']) || this._output.just_added_newline() && !(in_array(this._flags.last_token.text, ['(', '[', '{', ':', '=', ',']) || this._flags.last_token.type === TOKEN.OPERATOR)) {\n          // make sure there is a nice clean space of at least one blank line\n          // before a new function definition\n          if (!this._output.just_added_blankline() && !current_token.comments_before) {\n            this.print_newline();\n            this.print_newline(true);\n          }\n        }\n\n        if (this._flags.last_token.type === TOKEN.RESERVED || this._flags.last_token.type === TOKEN.WORD) {\n          if (reserved_array(this._flags.last_token, ['get', 'set', 'new', 'export']) || reserved_array(this._flags.last_token, newline_restricted_tokens)) {\n            this._output.space_before_token = true;\n          } else if (reserved_word(this._flags.last_token, 'default') && this._last_last_text === 'export') {\n            this._output.space_before_token = true;\n          } else if (this._flags.last_token.text === 'declare') {\n            // accomodates Typescript declare function formatting\n            this._output.space_before_token = true;\n          } else {\n            this.print_newline();\n          }\n        } else if (this._flags.last_token.type === TOKEN.OPERATOR || this._flags.last_token.text === '=') {\n          // foo = function\n          this._output.space_before_token = true;\n        } else if (!this._flags.multiline_frame && (is_expression(this._flags.mode) || is_array(this._flags.mode))) {// (function\n        } else {\n          this.print_newline();\n        }\n\n        this.print_token(current_token);\n        this._flags.last_word = current_token.text;\n        return;\n      }\n\n      var prefix = 'NONE';\n\n      if (this._flags.last_token.type === TOKEN.END_BLOCK) {\n        if (this._previous_flags.inline_frame) {\n          prefix = 'SPACE';\n        } else if (!reserved_array(current_token, ['else', 'catch', 'finally', 'from'])) {\n          prefix = 'NEWLINE';\n        } else {\n          if (this._options.brace_style === \"expand\" || this._options.brace_style === \"end-expand\" || this._options.brace_style === \"none\" && current_token.newlines) {\n            prefix = 'NEWLINE';\n          } else {\n            prefix = 'SPACE';\n            this._output.space_before_token = true;\n          }\n        }\n      } else if (this._flags.last_token.type === TOKEN.SEMICOLON && this._flags.mode === MODE.BlockStatement) {\n        // TODO: Should this be for STATEMENT as well?\n        prefix = 'NEWLINE';\n      } else if (this._flags.last_token.type === TOKEN.SEMICOLON && is_expression(this._flags.mode)) {\n        prefix = 'SPACE';\n      } else if (this._flags.last_token.type === TOKEN.STRING) {\n        prefix = 'NEWLINE';\n      } else if (this._flags.last_token.type === TOKEN.RESERVED || this._flags.last_token.type === TOKEN.WORD || this._flags.last_token.text === '*' && (in_array(this._last_last_text, ['function', 'yield']) || this._flags.mode === MODE.ObjectLiteral && in_array(this._last_last_text, ['{', ',']))) {\n        prefix = 'SPACE';\n      } else if (this._flags.last_token.type === TOKEN.START_BLOCK) {\n        if (this._flags.inline_frame) {\n          prefix = 'SPACE';\n        } else {\n          prefix = 'NEWLINE';\n        }\n      } else if (this._flags.last_token.type === TOKEN.END_EXPR) {\n        this._output.space_before_token = true;\n        prefix = 'NEWLINE';\n      }\n\n      if (reserved_array(current_token, line_starters) && this._flags.last_token.text !== ')') {\n        if (this._flags.inline_frame || this._flags.last_token.text === 'else' || this._flags.last_token.text === 'export') {\n          prefix = 'SPACE';\n        } else {\n          prefix = 'NEWLINE';\n        }\n      }\n\n      if (reserved_array(current_token, ['else', 'catch', 'finally'])) {\n        if ((!(this._flags.last_token.type === TOKEN.END_BLOCK && this._previous_flags.mode === MODE.BlockStatement) || this._options.brace_style === \"expand\" || this._options.brace_style === \"end-expand\" || this._options.brace_style === \"none\" && current_token.newlines) && !this._flags.inline_frame) {\n          this.print_newline();\n        } else {\n          this._output.trim(true);\n\n          var line = this._output.current_line; // If we trimmed and there's something other than a close block before us\n          // put a newline back in.  Handles '} // comment' scenario.\n\n          if (line.last() !== '}') {\n            this.print_newline();\n          }\n\n          this._output.space_before_token = true;\n        }\n      } else if (prefix === 'NEWLINE') {\n        if (reserved_array(this._flags.last_token, special_words)) {\n          // no newline between 'return nnn'\n          this._output.space_before_token = true;\n        } else if (this._flags.last_token.text === 'declare' && reserved_array(current_token, ['var', 'let', 'const'])) {\n          // accomodates Typescript declare formatting\n          this._output.space_before_token = true;\n        } else if (this._flags.last_token.type !== TOKEN.END_EXPR) {\n          if ((this._flags.last_token.type !== TOKEN.START_EXPR || !reserved_array(current_token, ['var', 'let', 'const'])) && this._flags.last_token.text !== ':') {\n            // no need to force newline on 'var': for (var x = 0...)\n            if (reserved_word(current_token, 'if') && reserved_word(current_token.previous, 'else')) {\n              // no newline for } else if {\n              this._output.space_before_token = true;\n            } else {\n              this.print_newline();\n            }\n          }\n        } else if (reserved_array(current_token, line_starters) && this._flags.last_token.text !== ')') {\n          this.print_newline();\n        }\n      } else if (this._flags.multiline_frame && is_array(this._flags.mode) && this._flags.last_token.text === ',' && this._last_last_text === '}') {\n        this.print_newline(); // }, in lists get a newline treatment\n      } else if (prefix === 'SPACE') {\n        this._output.space_before_token = true;\n      }\n\n      if (current_token.previous && (current_token.previous.type === TOKEN.WORD || current_token.previous.type === TOKEN.RESERVED)) {\n        this._output.space_before_token = true;\n      }\n\n      this.print_token(current_token);\n      this._flags.last_word = current_token.text;\n\n      if (current_token.type === TOKEN.RESERVED) {\n        if (current_token.text === 'do') {\n          this._flags.do_block = true;\n        } else if (current_token.text === 'if') {\n          this._flags.if_block = true;\n        } else if (current_token.text === 'import') {\n          this._flags.import_block = true;\n        } else if (this._flags.import_block && reserved_word(current_token, 'from')) {\n          this._flags.import_block = false;\n        }\n      }\n    };\n\n    Beautifier.prototype.handle_semicolon = function (current_token) {\n      if (this.start_of_statement(current_token)) {\n        // The conditional starts the statement if appropriate.\n        // Semicolon can be the start (and end) of a statement\n        this._output.space_before_token = false;\n      } else {\n        this.handle_whitespace_and_comments(current_token);\n      }\n\n      var next_token = this._tokens.peek();\n\n      while (this._flags.mode === MODE.Statement && !(this._flags.if_block && reserved_word(next_token, 'else')) && !this._flags.do_block) {\n        this.restore_mode();\n      } // hacky but effective for the moment\n\n\n      if (this._flags.import_block) {\n        this._flags.import_block = false;\n      }\n\n      this.print_token(current_token);\n    };\n\n    Beautifier.prototype.handle_string = function (current_token) {\n      if (this.start_of_statement(current_token)) {\n        // The conditional starts the statement if appropriate.\n        // One difference - strings want at least a space before\n        this._output.space_before_token = true;\n      } else {\n        this.handle_whitespace_and_comments(current_token);\n\n        if (this._flags.last_token.type === TOKEN.RESERVED || this._flags.last_token.type === TOKEN.WORD || this._flags.inline_frame) {\n          this._output.space_before_token = true;\n        } else if (this._flags.last_token.type === TOKEN.COMMA || this._flags.last_token.type === TOKEN.START_EXPR || this._flags.last_token.type === TOKEN.EQUALS || this._flags.last_token.type === TOKEN.OPERATOR) {\n          if (!this.start_of_object_property()) {\n            this.allow_wrap_or_preserved_newline(current_token);\n          }\n        } else {\n          this.print_newline();\n        }\n      }\n\n      this.print_token(current_token);\n    };\n\n    Beautifier.prototype.handle_equals = function (current_token) {\n      if (this.start_of_statement(current_token)) {// The conditional starts the statement if appropriate.\n      } else {\n        this.handle_whitespace_and_comments(current_token);\n      }\n\n      if (this._flags.declaration_statement) {\n        // just got an '=' in a var-line, different formatting/line-breaking, etc will now be done\n        this._flags.declaration_assignment = true;\n      }\n\n      this._output.space_before_token = true;\n      this.print_token(current_token);\n      this._output.space_before_token = true;\n    };\n\n    Beautifier.prototype.handle_comma = function (current_token) {\n      this.handle_whitespace_and_comments(current_token, true);\n      this.print_token(current_token);\n      this._output.space_before_token = true;\n\n      if (this._flags.declaration_statement) {\n        if (is_expression(this._flags.parent.mode)) {\n          // do not break on comma, for(var a = 1, b = 2)\n          this._flags.declaration_assignment = false;\n        }\n\n        if (this._flags.declaration_assignment) {\n          this._flags.declaration_assignment = false;\n          this.print_newline(false, true);\n        } else if (this._options.comma_first) {\n          // for comma-first, we want to allow a newline before the comma\n          // to turn into a newline after the comma, which we will fixup later\n          this.allow_wrap_or_preserved_newline(current_token);\n        }\n      } else if (this._flags.mode === MODE.ObjectLiteral || this._flags.mode === MODE.Statement && this._flags.parent.mode === MODE.ObjectLiteral) {\n        if (this._flags.mode === MODE.Statement) {\n          this.restore_mode();\n        }\n\n        if (!this._flags.inline_frame) {\n          this.print_newline();\n        }\n      } else if (this._options.comma_first) {\n        // EXPR or DO_BLOCK\n        // for comma-first, we want to allow a newline before the comma\n        // to turn into a newline after the comma, which we will fixup later\n        this.allow_wrap_or_preserved_newline(current_token);\n      }\n    };\n\n    Beautifier.prototype.handle_operator = function (current_token) {\n      var isGeneratorAsterisk = current_token.text === '*' && (reserved_array(this._flags.last_token, ['function', 'yield']) || in_array(this._flags.last_token.type, [TOKEN.START_BLOCK, TOKEN.COMMA, TOKEN.END_BLOCK, TOKEN.SEMICOLON]));\n      var isUnary = in_array(current_token.text, ['-', '+']) && (in_array(this._flags.last_token.type, [TOKEN.START_BLOCK, TOKEN.START_EXPR, TOKEN.EQUALS, TOKEN.OPERATOR]) || in_array(this._flags.last_token.text, line_starters) || this._flags.last_token.text === ',');\n\n      if (this.start_of_statement(current_token)) {// The conditional starts the statement if appropriate.\n      } else {\n        var preserve_statement_flags = !isGeneratorAsterisk;\n        this.handle_whitespace_and_comments(current_token, preserve_statement_flags);\n      }\n\n      if (reserved_array(this._flags.last_token, special_words)) {\n        // \"return\" had a special handling in TK_WORD. Now we need to return the favor\n        this._output.space_before_token = true;\n        this.print_token(current_token);\n        return;\n      } // hack for actionscript's import .*;\n\n\n      if (current_token.text === '*' && this._flags.last_token.type === TOKEN.DOT) {\n        this.print_token(current_token);\n        return;\n      }\n\n      if (current_token.text === '::') {\n        // no spaces around exotic namespacing syntax operator\n        this.print_token(current_token);\n        return;\n      } // Allow line wrapping between operators when operator_position is\n      //   set to before or preserve\n\n\n      if (this._flags.last_token.type === TOKEN.OPERATOR && in_array(this._options.operator_position, OPERATOR_POSITION_BEFORE_OR_PRESERVE)) {\n        this.allow_wrap_or_preserved_newline(current_token);\n      }\n\n      if (current_token.text === ':' && this._flags.in_case) {\n        this.print_token(current_token);\n        this._flags.in_case = false;\n        this._flags.case_body = true;\n\n        if (this._tokens.peek().type !== TOKEN.START_BLOCK) {\n          this.indent();\n          this.print_newline();\n        } else {\n          this._output.space_before_token = true;\n        }\n\n        return;\n      }\n\n      var space_before = true;\n      var space_after = true;\n      var in_ternary = false;\n\n      if (current_token.text === ':') {\n        if (this._flags.ternary_depth === 0) {\n          // Colon is invalid javascript outside of ternary and object, but do our best to guess what was meant.\n          space_before = false;\n        } else {\n          this._flags.ternary_depth -= 1;\n          in_ternary = true;\n        }\n      } else if (current_token.text === '?') {\n        this._flags.ternary_depth += 1;\n      } // let's handle the operator_position option prior to any conflicting logic\n\n\n      if (!isUnary && !isGeneratorAsterisk && this._options.preserve_newlines && in_array(current_token.text, positionable_operators)) {\n        var isColon = current_token.text === ':';\n        var isTernaryColon = isColon && in_ternary;\n        var isOtherColon = isColon && !in_ternary;\n\n        switch (this._options.operator_position) {\n          case OPERATOR_POSITION.before_newline:\n            // if the current token is : and it's not a ternary statement then we set space_before to false\n            this._output.space_before_token = !isOtherColon;\n            this.print_token(current_token);\n\n            if (!isColon || isTernaryColon) {\n              this.allow_wrap_or_preserved_newline(current_token);\n            }\n\n            this._output.space_before_token = true;\n            return;\n\n          case OPERATOR_POSITION.after_newline:\n            // if the current token is anything but colon, or (via deduction) it's a colon and in a ternary statement,\n            //   then print a newline.\n            this._output.space_before_token = true;\n\n            if (!isColon || isTernaryColon) {\n              if (this._tokens.peek().newlines) {\n                this.print_newline(false, true);\n              } else {\n                this.allow_wrap_or_preserved_newline(current_token);\n              }\n            } else {\n              this._output.space_before_token = false;\n            }\n\n            this.print_token(current_token);\n            this._output.space_before_token = true;\n            return;\n\n          case OPERATOR_POSITION.preserve_newline:\n            if (!isOtherColon) {\n              this.allow_wrap_or_preserved_newline(current_token);\n            } // if we just added a newline, or the current token is : and it's not a ternary statement,\n            //   then we set space_before to false\n\n\n            space_before = !(this._output.just_added_newline() || isOtherColon);\n            this._output.space_before_token = space_before;\n            this.print_token(current_token);\n            this._output.space_before_token = true;\n            return;\n        }\n      }\n\n      if (isGeneratorAsterisk) {\n        this.allow_wrap_or_preserved_newline(current_token);\n        space_before = false;\n\n        var next_token = this._tokens.peek();\n\n        space_after = next_token && in_array(next_token.type, [TOKEN.WORD, TOKEN.RESERVED]);\n      } else if (current_token.text === '...') {\n        this.allow_wrap_or_preserved_newline(current_token);\n        space_before = this._flags.last_token.type === TOKEN.START_BLOCK;\n        space_after = false;\n      } else if (in_array(current_token.text, ['--', '++', '!', '~']) || isUnary) {\n        // unary operators (and binary +/- pretending to be unary) special cases\n        if (this._flags.last_token.type === TOKEN.COMMA || this._flags.last_token.type === TOKEN.START_EXPR) {\n          this.allow_wrap_or_preserved_newline(current_token);\n        }\n\n        space_before = false;\n        space_after = false; // http://www.ecma-international.org/ecma-262/5.1/#sec-7.9.1\n        // if there is a newline between -- or ++ and anything else we should preserve it.\n\n        if (current_token.newlines && (current_token.text === '--' || current_token.text === '++')) {\n          this.print_newline(false, true);\n        }\n\n        if (this._flags.last_token.text === ';' && is_expression(this._flags.mode)) {\n          // for (;; ++i)\n          //        ^^^\n          space_before = true;\n        }\n\n        if (this._flags.last_token.type === TOKEN.RESERVED) {\n          space_before = true;\n        } else if (this._flags.last_token.type === TOKEN.END_EXPR) {\n          space_before = !(this._flags.last_token.text === ']' && (current_token.text === '--' || current_token.text === '++'));\n        } else if (this._flags.last_token.type === TOKEN.OPERATOR) {\n          // a++ + ++b;\n          // a - -b\n          space_before = in_array(current_token.text, ['--', '-', '++', '+']) && in_array(this._flags.last_token.text, ['--', '-', '++', '+']); // + and - are not unary when preceeded by -- or ++ operator\n          // a-- + b\n          // a * +b\n          // a - -b\n\n          if (in_array(current_token.text, ['+', '-']) && in_array(this._flags.last_token.text, ['--', '++'])) {\n            space_after = true;\n          }\n        }\n\n        if ((this._flags.mode === MODE.BlockStatement && !this._flags.inline_frame || this._flags.mode === MODE.Statement) && (this._flags.last_token.text === '{' || this._flags.last_token.text === ';')) {\n          // { foo; --i }\n          // foo(); --bar;\n          this.print_newline();\n        }\n      }\n\n      this._output.space_before_token = this._output.space_before_token || space_before;\n      this.print_token(current_token);\n      this._output.space_before_token = space_after;\n    };\n\n    Beautifier.prototype.handle_block_comment = function (current_token, preserve_statement_flags) {\n      if (this._output.raw) {\n        this._output.add_raw_token(current_token);\n\n        if (current_token.directives && current_token.directives.preserve === 'end') {\n          // If we're testing the raw output behavior, do not allow a directive to turn it off.\n          this._output.raw = this._options.test_output_raw;\n        }\n\n        return;\n      }\n\n      if (current_token.directives) {\n        this.print_newline(false, preserve_statement_flags);\n        this.print_token(current_token);\n\n        if (current_token.directives.preserve === 'start') {\n          this._output.raw = true;\n        }\n\n        this.print_newline(false, true);\n        return;\n      } // inline block\n\n\n      if (!acorn.newline.test(current_token.text) && !current_token.newlines) {\n        this._output.space_before_token = true;\n        this.print_token(current_token);\n        this._output.space_before_token = true;\n        return;\n      } else {\n        this.print_block_commment(current_token, preserve_statement_flags);\n      }\n    };\n\n    Beautifier.prototype.print_block_commment = function (current_token, preserve_statement_flags) {\n      var lines = split_linebreaks(current_token.text);\n      var j; // iterator for this case\n\n      var javadoc = false;\n      var starless = false;\n      var lastIndent = current_token.whitespace_before;\n      var lastIndentLength = lastIndent.length; // block comment starts with a new line\n\n      this.print_newline(false, preserve_statement_flags); // first line always indented\n\n      this.print_token_line_indentation(current_token);\n\n      this._output.add_token(lines[0]);\n\n      this.print_newline(false, preserve_statement_flags);\n\n      if (lines.length > 1) {\n        lines = lines.slice(1);\n        javadoc = all_lines_start_with(lines, '*');\n        starless = each_line_matches_indent(lines, lastIndent);\n\n        if (javadoc) {\n          this._flags.alignment = 1;\n        }\n\n        for (j = 0; j < lines.length; j++) {\n          if (javadoc) {\n            // javadoc: reformat and re-indent\n            this.print_token_line_indentation(current_token);\n\n            this._output.add_token(ltrim(lines[j]));\n          } else if (starless && lines[j]) {\n            // starless: re-indent non-empty content, avoiding trim\n            this.print_token_line_indentation(current_token);\n\n            this._output.add_token(lines[j].substring(lastIndentLength));\n          } else {\n            // normal comments output raw\n            this._output.current_line.set_indent(-1);\n\n            this._output.add_token(lines[j]);\n          } // for comments on their own line or  more than one line, make sure there's a new line after\n\n\n          this.print_newline(false, preserve_statement_flags);\n        }\n\n        this._flags.alignment = 0;\n      }\n    };\n\n    Beautifier.prototype.handle_comment = function (current_token, preserve_statement_flags) {\n      if (current_token.newlines) {\n        this.print_newline(false, preserve_statement_flags);\n      } else {\n        this._output.trim(true);\n      }\n\n      this._output.space_before_token = true;\n      this.print_token(current_token);\n      this.print_newline(false, preserve_statement_flags);\n    };\n\n    Beautifier.prototype.handle_dot = function (current_token) {\n      if (this.start_of_statement(current_token)) {// The conditional starts the statement if appropriate.\n      } else {\n        this.handle_whitespace_and_comments(current_token, true);\n      }\n\n      if (reserved_array(this._flags.last_token, special_words)) {\n        this._output.space_before_token = false;\n      } else {\n        // allow preserved newlines before dots in general\n        // force newlines on dots after close paren when break_chained - for bar().baz()\n        this.allow_wrap_or_preserved_newline(current_token, this._flags.last_token.text === ')' && this._options.break_chained_methods);\n      } // Only unindent chained method dot if this dot starts a new line.\n      // Otherwise the automatic extra indentation removal will handle the over indent\n\n\n      if (this._options.unindent_chained_methods && this._output.just_added_newline()) {\n        this.deindent();\n      }\n\n      this.print_token(current_token);\n    };\n\n    Beautifier.prototype.handle_unknown = function (current_token, preserve_statement_flags) {\n      this.print_token(current_token);\n\n      if (current_token.text[current_token.text.length - 1] === '\\n') {\n        this.print_newline(false, preserve_statement_flags);\n      }\n    };\n\n    Beautifier.prototype.handle_eof = function (current_token) {\n      // Unwind any open statements\n      while (this._flags.mode === MODE.Statement) {\n        this.restore_mode();\n      }\n\n      this.handle_whitespace_and_comments(current_token);\n    };\n\n    module.exports.Beautifier = Beautifier;\n    /***/\n  },\n  /* 2 */\n\n  /***/\n  function (module, exports, __webpack_require__) {\n    \"use strict\";\n    /*jshint node:true */\n\n    /*\n      The MIT License (MIT)\n    \n      Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n    \n      Permission is hereby granted, free of charge, to any person\n      obtaining a copy of this software and associated documentation files\n      (the \"Software\"), to deal in the Software without restriction,\n      including without limitation the rights to use, copy, modify, merge,\n      publish, distribute, sublicense, and/or sell copies of the Software,\n      and to permit persons to whom the Software is furnished to do so,\n      subject to the following conditions:\n    \n      The above copyright notice and this permission notice shall be\n      included in all copies or substantial portions of the Software.\n    \n      THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n      EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n      NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n      BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n      ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n      CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n      SOFTWARE.\n    */\n\n    function OutputLine(parent) {\n      this.__parent = parent;\n      this.__character_count = 0; // use indent_count as a marker for this.__lines that have preserved indentation\n\n      this.__indent_count = -1;\n      this.__alignment_count = 0;\n      this.__wrap_point_index = 0;\n      this.__wrap_point_character_count = 0;\n      this.__wrap_point_indent_count = -1;\n      this.__wrap_point_alignment_count = 0;\n      this.__items = [];\n    }\n\n    OutputLine.prototype.clone_empty = function () {\n      var line = new OutputLine(this.__parent);\n      line.set_indent(this.__indent_count, this.__alignment_count);\n      return line;\n    };\n\n    OutputLine.prototype.item = function (index) {\n      if (index < 0) {\n        return this.__items[this.__items.length + index];\n      } else {\n        return this.__items[index];\n      }\n    };\n\n    OutputLine.prototype.has_match = function (pattern) {\n      for (var lastCheckedOutput = this.__items.length - 1; lastCheckedOutput >= 0; lastCheckedOutput--) {\n        if (this.__items[lastCheckedOutput].match(pattern)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    OutputLine.prototype.set_indent = function (indent, alignment) {\n      if (this.is_empty()) {\n        this.__indent_count = indent || 0;\n        this.__alignment_count = alignment || 0;\n        this.__character_count = this.__parent.get_indent_size(this.__indent_count, this.__alignment_count);\n      }\n    };\n\n    OutputLine.prototype._set_wrap_point = function () {\n      if (this.__parent.wrap_line_length) {\n        this.__wrap_point_index = this.__items.length;\n        this.__wrap_point_character_count = this.__character_count;\n        this.__wrap_point_indent_count = this.__parent.next_line.__indent_count;\n        this.__wrap_point_alignment_count = this.__parent.next_line.__alignment_count;\n      }\n    };\n\n    OutputLine.prototype._should_wrap = function () {\n      return this.__wrap_point_index && this.__character_count > this.__parent.wrap_line_length && this.__wrap_point_character_count > this.__parent.next_line.__character_count;\n    };\n\n    OutputLine.prototype._allow_wrap = function () {\n      if (this._should_wrap()) {\n        this.__parent.add_new_line();\n\n        var next = this.__parent.current_line;\n        next.set_indent(this.__wrap_point_indent_count, this.__wrap_point_alignment_count);\n        next.__items = this.__items.slice(this.__wrap_point_index);\n        this.__items = this.__items.slice(0, this.__wrap_point_index);\n        next.__character_count += this.__character_count - this.__wrap_point_character_count;\n        this.__character_count = this.__wrap_point_character_count;\n\n        if (next.__items[0] === \" \") {\n          next.__items.splice(0, 1);\n\n          next.__character_count -= 1;\n        }\n\n        return true;\n      }\n\n      return false;\n    };\n\n    OutputLine.prototype.is_empty = function () {\n      return this.__items.length === 0;\n    };\n\n    OutputLine.prototype.last = function () {\n      if (!this.is_empty()) {\n        return this.__items[this.__items.length - 1];\n      } else {\n        return null;\n      }\n    };\n\n    OutputLine.prototype.push = function (item) {\n      this.__items.push(item);\n\n      var last_newline_index = item.lastIndexOf('\\n');\n\n      if (last_newline_index !== -1) {\n        this.__character_count = item.length - last_newline_index;\n      } else {\n        this.__character_count += item.length;\n      }\n    };\n\n    OutputLine.prototype.pop = function () {\n      var item = null;\n\n      if (!this.is_empty()) {\n        item = this.__items.pop();\n        this.__character_count -= item.length;\n      }\n\n      return item;\n    };\n\n    OutputLine.prototype._remove_indent = function () {\n      if (this.__indent_count > 0) {\n        this.__indent_count -= 1;\n        this.__character_count -= this.__parent.indent_size;\n      }\n    };\n\n    OutputLine.prototype._remove_wrap_indent = function () {\n      if (this.__wrap_point_indent_count > 0) {\n        this.__wrap_point_indent_count -= 1;\n      }\n    };\n\n    OutputLine.prototype.trim = function () {\n      while (this.last() === ' ') {\n        this.__items.pop();\n\n        this.__character_count -= 1;\n      }\n    };\n\n    OutputLine.prototype.toString = function () {\n      var result = '';\n\n      if (this.is_empty()) {\n        if (this.__parent.indent_empty_lines) {\n          result = this.__parent.get_indent_string(this.__indent_count);\n        }\n      } else {\n        result = this.__parent.get_indent_string(this.__indent_count, this.__alignment_count);\n        result += this.__items.join('');\n      }\n\n      return result;\n    };\n\n    function IndentStringCache(options, baseIndentString) {\n      this.__cache = [''];\n      this.__indent_size = options.indent_size;\n      this.__indent_string = options.indent_char;\n\n      if (!options.indent_with_tabs) {\n        this.__indent_string = new Array(options.indent_size + 1).join(options.indent_char);\n      } // Set to null to continue support for auto detection of base indent\n\n\n      baseIndentString = baseIndentString || '';\n\n      if (options.indent_level > 0) {\n        baseIndentString = new Array(options.indent_level + 1).join(this.__indent_string);\n      }\n\n      this.__base_string = baseIndentString;\n      this.__base_string_length = baseIndentString.length;\n    }\n\n    IndentStringCache.prototype.get_indent_size = function (indent, column) {\n      var result = this.__base_string_length;\n      column = column || 0;\n\n      if (indent < 0) {\n        result = 0;\n      }\n\n      result += indent * this.__indent_size;\n      result += column;\n      return result;\n    };\n\n    IndentStringCache.prototype.get_indent_string = function (indent_level, column) {\n      var result = this.__base_string;\n      column = column || 0;\n\n      if (indent_level < 0) {\n        indent_level = 0;\n        result = '';\n      }\n\n      column += indent_level * this.__indent_size;\n\n      this.__ensure_cache(column);\n\n      result += this.__cache[column];\n      return result;\n    };\n\n    IndentStringCache.prototype.__ensure_cache = function (column) {\n      while (column >= this.__cache.length) {\n        this.__add_column();\n      }\n    };\n\n    IndentStringCache.prototype.__add_column = function () {\n      var column = this.__cache.length;\n      var indent = 0;\n      var result = '';\n\n      if (this.__indent_size && column >= this.__indent_size) {\n        indent = Math.floor(column / this.__indent_size);\n        column -= indent * this.__indent_size;\n        result = new Array(indent + 1).join(this.__indent_string);\n      }\n\n      if (column) {\n        result += new Array(column + 1).join(' ');\n      }\n\n      this.__cache.push(result);\n    };\n\n    function Output(options, baseIndentString) {\n      this.__indent_cache = new IndentStringCache(options, baseIndentString);\n      this.raw = false;\n      this._end_with_newline = options.end_with_newline;\n      this.indent_size = options.indent_size;\n      this.wrap_line_length = options.wrap_line_length;\n      this.indent_empty_lines = options.indent_empty_lines;\n      this.__lines = [];\n      this.previous_line = null;\n      this.current_line = null;\n      this.next_line = new OutputLine(this);\n      this.space_before_token = false;\n      this.non_breaking_space = false;\n      this.previous_token_wrapped = false; // initialize\n\n      this.__add_outputline();\n    }\n\n    Output.prototype.__add_outputline = function () {\n      this.previous_line = this.current_line;\n      this.current_line = this.next_line.clone_empty();\n\n      this.__lines.push(this.current_line);\n    };\n\n    Output.prototype.get_line_number = function () {\n      return this.__lines.length;\n    };\n\n    Output.prototype.get_indent_string = function (indent, column) {\n      return this.__indent_cache.get_indent_string(indent, column);\n    };\n\n    Output.prototype.get_indent_size = function (indent, column) {\n      return this.__indent_cache.get_indent_size(indent, column);\n    };\n\n    Output.prototype.is_empty = function () {\n      return !this.previous_line && this.current_line.is_empty();\n    };\n\n    Output.prototype.add_new_line = function (force_newline) {\n      // never newline at the start of file\n      // otherwise, newline only if we didn't just add one or we're forced\n      if (this.is_empty() || !force_newline && this.just_added_newline()) {\n        return false;\n      } // if raw output is enabled, don't print additional newlines,\n      // but still return True as though you had\n\n\n      if (!this.raw) {\n        this.__add_outputline();\n      }\n\n      return true;\n    };\n\n    Output.prototype.get_code = function (eol) {\n      this.trim(true); // handle some edge cases where the last tokens\n      // has text that ends with newline(s)\n\n      var last_item = this.current_line.pop();\n\n      if (last_item) {\n        if (last_item[last_item.length - 1] === '\\n') {\n          last_item = last_item.replace(/\\n+$/g, '');\n        }\n\n        this.current_line.push(last_item);\n      }\n\n      if (this._end_with_newline) {\n        this.__add_outputline();\n      }\n\n      var sweet_code = this.__lines.join('\\n');\n\n      if (eol !== '\\n') {\n        sweet_code = sweet_code.replace(/[\\n]/g, eol);\n      }\n\n      return sweet_code;\n    };\n\n    Output.prototype.set_wrap_point = function () {\n      this.current_line._set_wrap_point();\n    };\n\n    Output.prototype.set_indent = function (indent, alignment) {\n      indent = indent || 0;\n      alignment = alignment || 0; // Next line stores alignment values\n\n      this.next_line.set_indent(indent, alignment); // Never indent your first output indent at the start of the file\n\n      if (this.__lines.length > 1) {\n        this.current_line.set_indent(indent, alignment);\n        return true;\n      }\n\n      this.current_line.set_indent();\n      return false;\n    };\n\n    Output.prototype.add_raw_token = function (token) {\n      for (var x = 0; x < token.newlines; x++) {\n        this.__add_outputline();\n      }\n\n      this.current_line.set_indent(-1);\n      this.current_line.push(token.whitespace_before);\n      this.current_line.push(token.text);\n      this.space_before_token = false;\n      this.non_breaking_space = false;\n      this.previous_token_wrapped = false;\n    };\n\n    Output.prototype.add_token = function (printable_token) {\n      this.__add_space_before_token();\n\n      this.current_line.push(printable_token);\n      this.space_before_token = false;\n      this.non_breaking_space = false;\n      this.previous_token_wrapped = this.current_line._allow_wrap();\n    };\n\n    Output.prototype.__add_space_before_token = function () {\n      if (this.space_before_token && !this.just_added_newline()) {\n        if (!this.non_breaking_space) {\n          this.set_wrap_point();\n        }\n\n        this.current_line.push(' ');\n      }\n    };\n\n    Output.prototype.remove_indent = function (index) {\n      var output_length = this.__lines.length;\n\n      while (index < output_length) {\n        this.__lines[index]._remove_indent();\n\n        index++;\n      }\n\n      this.current_line._remove_wrap_indent();\n    };\n\n    Output.prototype.trim = function (eat_newlines) {\n      eat_newlines = eat_newlines === undefined ? false : eat_newlines;\n      this.current_line.trim();\n\n      while (eat_newlines && this.__lines.length > 1 && this.current_line.is_empty()) {\n        this.__lines.pop();\n\n        this.current_line = this.__lines[this.__lines.length - 1];\n        this.current_line.trim();\n      }\n\n      this.previous_line = this.__lines.length > 1 ? this.__lines[this.__lines.length - 2] : null;\n    };\n\n    Output.prototype.just_added_newline = function () {\n      return this.current_line.is_empty();\n    };\n\n    Output.prototype.just_added_blankline = function () {\n      return this.is_empty() || this.current_line.is_empty() && this.previous_line.is_empty();\n    };\n\n    Output.prototype.ensure_empty_line_above = function (starts_with, ends_with) {\n      var index = this.__lines.length - 2;\n\n      while (index >= 0) {\n        var potentialEmptyLine = this.__lines[index];\n\n        if (potentialEmptyLine.is_empty()) {\n          break;\n        } else if (potentialEmptyLine.item(0).indexOf(starts_with) !== 0 && potentialEmptyLine.item(-1) !== ends_with) {\n          this.__lines.splice(index + 1, 0, new OutputLine(this));\n\n          this.previous_line = this.__lines[this.__lines.length - 2];\n          break;\n        }\n\n        index--;\n      }\n    };\n\n    module.exports.Output = Output;\n    /***/\n  },\n  /* 3 */\n\n  /***/\n  function (module, exports, __webpack_require__) {\n    \"use strict\";\n    /*jshint node:true */\n\n    /*\n    \n      The MIT License (MIT)\n    \n      Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n    \n      Permission is hereby granted, free of charge, to any person\n      obtaining a copy of this software and associated documentation files\n      (the \"Software\"), to deal in the Software without restriction,\n      including without limitation the rights to use, copy, modify, merge,\n      publish, distribute, sublicense, and/or sell copies of the Software,\n      and to permit persons to whom the Software is furnished to do so,\n      subject to the following conditions:\n    \n      The above copyright notice and this permission notice shall be\n      included in all copies or substantial portions of the Software.\n    \n      THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n      EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n      NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n      BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n      ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n      CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n      SOFTWARE.\n    */\n\n    function Token(type, text, newlines, whitespace_before) {\n      this.type = type;\n      this.text = text; // comments_before are\n      // comments that have a new line before them\n      // and may or may not have a newline after\n      // this is a set of comments before\n\n      this.comments_before = null;\n      /* inline comment*/\n      // this.comments_after =  new TokenStream(); // no new line before and newline after\n\n      this.newlines = newlines || 0;\n      this.whitespace_before = whitespace_before || '';\n      this.parent = null;\n      this.next = null;\n      this.previous = null;\n      this.opened = null;\n      this.closed = null;\n      this.directives = null;\n    }\n\n    module.exports.Token = Token;\n    /***/\n  },\n  /* 4 */\n\n  /***/\n  function (module, exports, __webpack_require__) {\n    \"use strict\";\n    /* jshint node: true, curly: false */\n    // Parts of this section of code is taken from acorn.\n    //\n    // Acorn was written by Marijn Haverbeke and released under an MIT\n    // license. The Unicode regexps (for identifiers and whitespace) were\n    // taken from [Esprima](http://esprima.org) by Ariya Hidayat.\n    //\n    // Git repositories for Acorn are available at\n    //\n    //     http://marijnhaverbeke.nl/git/acorn\n    //     https://github.com/marijnh/acorn.git\n    // ## Character categories\n    // acorn used char codes to squeeze the last bit of performance out\n    // Beautifier is okay without that, so we're using regex\n    // permit # (23), $ (36), and @ (64). @ is used in ES7 decorators.\n    // 65 through 91 are uppercase letters.\n    // permit _ (95).\n    // 97 through 123 are lowercase letters.\n\n    var baseASCIIidentifierStartChars = \"\\\\x23\\\\x24\\\\x40\\\\x41-\\\\x5a\\\\x5f\\\\x61-\\\\x7a\"; // inside an identifier @ is not allowed but 0-9 are.\n\n    var baseASCIIidentifierChars = \"\\\\x24\\\\x30-\\\\x39\\\\x41-\\\\x5a\\\\x5f\\\\x61-\\\\x7a\"; // Big ugly regular expressions that match characters in the\n    // whitespace, identifier, and identifier-start categories. These\n    // are only applied when a character is found to actually have a\n    // code point above 128.\n\n    var nonASCIIidentifierStartChars = \"\\\\xaa\\\\xb5\\\\xba\\\\xc0-\\\\xd6\\\\xd8-\\\\xf6\\\\xf8-\\\\u02c1\\\\u02c6-\\\\u02d1\\\\u02e0-\\\\u02e4\\\\u02ec\\\\u02ee\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037a-\\\\u037d\\\\u0386\\\\u0388-\\\\u038a\\\\u038c\\\\u038e-\\\\u03a1\\\\u03a3-\\\\u03f5\\\\u03f7-\\\\u0481\\\\u048a-\\\\u0527\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f2\\\\u0620-\\\\u064a\\\\u066e\\\\u066f\\\\u0671-\\\\u06d3\\\\u06d5\\\\u06e5\\\\u06e6\\\\u06ee\\\\u06ef\\\\u06fa-\\\\u06fc\\\\u06ff\\\\u0710\\\\u0712-\\\\u072f\\\\u074d-\\\\u07a5\\\\u07b1\\\\u07ca-\\\\u07ea\\\\u07f4\\\\u07f5\\\\u07fa\\\\u0800-\\\\u0815\\\\u081a\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u08a0\\\\u08a2-\\\\u08ac\\\\u0904-\\\\u0939\\\\u093d\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0977\\\\u0979-\\\\u097f\\\\u0985-\\\\u098c\\\\u098f\\\\u0990\\\\u0993-\\\\u09a8\\\\u09aa-\\\\u09b0\\\\u09b2\\\\u09b6-\\\\u09b9\\\\u09bd\\\\u09ce\\\\u09dc\\\\u09dd\\\\u09df-\\\\u09e1\\\\u09f0\\\\u09f1\\\\u0a05-\\\\u0a0a\\\\u0a0f\\\\u0a10\\\\u0a13-\\\\u0a28\\\\u0a2a-\\\\u0a30\\\\u0a32\\\\u0a33\\\\u0a35\\\\u0a36\\\\u0a38\\\\u0a39\\\\u0a59-\\\\u0a5c\\\\u0a5e\\\\u0a72-\\\\u0a74\\\\u0a85-\\\\u0a8d\\\\u0a8f-\\\\u0a91\\\\u0a93-\\\\u0aa8\\\\u0aaa-\\\\u0ab0\\\\u0ab2\\\\u0ab3\\\\u0ab5-\\\\u0ab9\\\\u0abd\\\\u0ad0\\\\u0ae0\\\\u0ae1\\\\u0b05-\\\\u0b0c\\\\u0b0f\\\\u0b10\\\\u0b13-\\\\u0b28\\\\u0b2a-\\\\u0b30\\\\u0b32\\\\u0b33\\\\u0b35-\\\\u0b39\\\\u0b3d\\\\u0b5c\\\\u0b5d\\\\u0b5f-\\\\u0b61\\\\u0b71\\\\u0b83\\\\u0b85-\\\\u0b8a\\\\u0b8e-\\\\u0b90\\\\u0b92-\\\\u0b95\\\\u0b99\\\\u0b9a\\\\u0b9c\\\\u0b9e\\\\u0b9f\\\\u0ba3\\\\u0ba4\\\\u0ba8-\\\\u0baa\\\\u0bae-\\\\u0bb9\\\\u0bd0\\\\u0c05-\\\\u0c0c\\\\u0c0e-\\\\u0c10\\\\u0c12-\\\\u0c28\\\\u0c2a-\\\\u0c33\\\\u0c35-\\\\u0c39\\\\u0c3d\\\\u0c58\\\\u0c59\\\\u0c60\\\\u0c61\\\\u0c85-\\\\u0c8c\\\\u0c8e-\\\\u0c90\\\\u0c92-\\\\u0ca8\\\\u0caa-\\\\u0cb3\\\\u0cb5-\\\\u0cb9\\\\u0cbd\\\\u0cde\\\\u0ce0\\\\u0ce1\\\\u0cf1\\\\u0cf2\\\\u0d05-\\\\u0d0c\\\\u0d0e-\\\\u0d10\\\\u0d12-\\\\u0d3a\\\\u0d3d\\\\u0d4e\\\\u0d60\\\\u0d61\\\\u0d7a-\\\\u0d7f\\\\u0d85-\\\\u0d96\\\\u0d9a-\\\\u0db1\\\\u0db3-\\\\u0dbb\\\\u0dbd\\\\u0dc0-\\\\u0dc6\\\\u0e01-\\\\u0e30\\\\u0e32\\\\u0e33\\\\u0e40-\\\\u0e46\\\\u0e81\\\\u0e82\\\\u0e84\\\\u0e87\\\\u0e88\\\\u0e8a\\\\u0e8d\\\\u0e94-\\\\u0e97\\\\u0e99-\\\\u0e9f\\\\u0ea1-\\\\u0ea3\\\\u0ea5\\\\u0ea7\\\\u0eaa\\\\u0eab\\\\u0ead-\\\\u0eb0\\\\u0eb2\\\\u0eb3\\\\u0ebd\\\\u0ec0-\\\\u0ec4\\\\u0ec6\\\\u0edc-\\\\u0edf\\\\u0f00\\\\u0f40-\\\\u0f47\\\\u0f49-\\\\u0f6c\\\\u0f88-\\\\u0f8c\\\\u1000-\\\\u102a\\\\u103f\\\\u1050-\\\\u1055\\\\u105a-\\\\u105d\\\\u1061\\\\u1065\\\\u1066\\\\u106e-\\\\u1070\\\\u1075-\\\\u1081\\\\u108e\\\\u10a0-\\\\u10c5\\\\u10c7\\\\u10cd\\\\u10d0-\\\\u10fa\\\\u10fc-\\\\u1248\\\\u124a-\\\\u124d\\\\u1250-\\\\u1256\\\\u1258\\\\u125a-\\\\u125d\\\\u1260-\\\\u1288\\\\u128a-\\\\u128d\\\\u1290-\\\\u12b0\\\\u12b2-\\\\u12b5\\\\u12b8-\\\\u12be\\\\u12c0\\\\u12c2-\\\\u12c5\\\\u12c8-\\\\u12d6\\\\u12d8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135a\\\\u1380-\\\\u138f\\\\u13a0-\\\\u13f4\\\\u1401-\\\\u166c\\\\u166f-\\\\u167f\\\\u1681-\\\\u169a\\\\u16a0-\\\\u16ea\\\\u16ee-\\\\u16f0\\\\u1700-\\\\u170c\\\\u170e-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176c\\\\u176e-\\\\u1770\\\\u1780-\\\\u17b3\\\\u17d7\\\\u17dc\\\\u1820-\\\\u1877\\\\u1880-\\\\u18a8\\\\u18aa\\\\u18b0-\\\\u18f5\\\\u1900-\\\\u191c\\\\u1950-\\\\u196d\\\\u1970-\\\\u1974\\\\u1980-\\\\u19ab\\\\u19c1-\\\\u19c7\\\\u1a00-\\\\u1a16\\\\u1a20-\\\\u1a54\\\\u1aa7\\\\u1b05-\\\\u1b33\\\\u1b45-\\\\u1b4b\\\\u1b83-\\\\u1ba0\\\\u1bae\\\\u1baf\\\\u1bba-\\\\u1be5\\\\u1c00-\\\\u1c23\\\\u1c4d-\\\\u1c4f\\\\u1c5a-\\\\u1c7d\\\\u1ce9-\\\\u1cec\\\\u1cee-\\\\u1cf1\\\\u1cf5\\\\u1cf6\\\\u1d00-\\\\u1dbf\\\\u1e00-\\\\u1f15\\\\u1f18-\\\\u1f1d\\\\u1f20-\\\\u1f45\\\\u1f48-\\\\u1f4d\\\\u1f50-\\\\u1f57\\\\u1f59\\\\u1f5b\\\\u1f5d\\\\u1f5f-\\\\u1f7d\\\\u1f80-\\\\u1fb4\\\\u1fb6-\\\\u1fbc\\\\u1fbe\\\\u1fc2-\\\\u1fc4\\\\u1fc6-\\\\u1fcc\\\\u1fd0-\\\\u1fd3\\\\u1fd6-\\\\u1fdb\\\\u1fe0-\\\\u1fec\\\\u1ff2-\\\\u1ff4\\\\u1ff6-\\\\u1ffc\\\\u2071\\\\u207f\\\\u2090-\\\\u209c\\\\u2102\\\\u2107\\\\u210a-\\\\u2113\\\\u2115\\\\u2119-\\\\u211d\\\\u2124\\\\u2126\\\\u2128\\\\u212a-\\\\u212d\\\\u212f-\\\\u2139\\\\u213c-\\\\u213f\\\\u2145-\\\\u2149\\\\u214e\\\\u2160-\\\\u2188\\\\u2c00-\\\\u2c2e\\\\u2c30-\\\\u2c5e\\\\u2c60-\\\\u2ce4\\\\u2ceb-\\\\u2cee\\\\u2cf2\\\\u2cf3\\\\u2d00-\\\\u2d25\\\\u2d27\\\\u2d2d\\\\u2d30-\\\\u2d67\\\\u2d6f\\\\u2d80-\\\\u2d96\\\\u2da0-\\\\u2da6\\\\u2da8-\\\\u2dae\\\\u2db0-\\\\u2db6\\\\u2db8-\\\\u2dbe\\\\u2dc0-\\\\u2dc6\\\\u2dc8-\\\\u2dce\\\\u2dd0-\\\\u2dd6\\\\u2dd8-\\\\u2dde\\\\u2e2f\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3031-\\\\u3035\\\\u3038-\\\\u303c\\\\u3041-\\\\u3096\\\\u309d-\\\\u309f\\\\u30a1-\\\\u30fa\\\\u30fc-\\\\u30ff\\\\u3105-\\\\u312d\\\\u3131-\\\\u318e\\\\u31a0-\\\\u31ba\\\\u31f0-\\\\u31ff\\\\u3400-\\\\u4db5\\\\u4e00-\\\\u9fcc\\\\ua000-\\\\ua48c\\\\ua4d0-\\\\ua4fd\\\\ua500-\\\\ua60c\\\\ua610-\\\\ua61f\\\\ua62a\\\\ua62b\\\\ua640-\\\\ua66e\\\\ua67f-\\\\ua697\\\\ua6a0-\\\\ua6ef\\\\ua717-\\\\ua71f\\\\ua722-\\\\ua788\\\\ua78b-\\\\ua78e\\\\ua790-\\\\ua793\\\\ua7a0-\\\\ua7aa\\\\ua7f8-\\\\ua801\\\\ua803-\\\\ua805\\\\ua807-\\\\ua80a\\\\ua80c-\\\\ua822\\\\ua840-\\\\ua873\\\\ua882-\\\\ua8b3\\\\ua8f2-\\\\ua8f7\\\\ua8fb\\\\ua90a-\\\\ua925\\\\ua930-\\\\ua946\\\\ua960-\\\\ua97c\\\\ua984-\\\\ua9b2\\\\ua9cf\\\\uaa00-\\\\uaa28\\\\uaa40-\\\\uaa42\\\\uaa44-\\\\uaa4b\\\\uaa60-\\\\uaa76\\\\uaa7a\\\\uaa80-\\\\uaaaf\\\\uaab1\\\\uaab5\\\\uaab6\\\\uaab9-\\\\uaabd\\\\uaac0\\\\uaac2\\\\uaadb-\\\\uaadd\\\\uaae0-\\\\uaaea\\\\uaaf2-\\\\uaaf4\\\\uab01-\\\\uab06\\\\uab09-\\\\uab0e\\\\uab11-\\\\uab16\\\\uab20-\\\\uab26\\\\uab28-\\\\uab2e\\\\uabc0-\\\\uabe2\\\\uac00-\\\\ud7a3\\\\ud7b0-\\\\ud7c6\\\\ud7cb-\\\\ud7fb\\\\uf900-\\\\ufa6d\\\\ufa70-\\\\ufad9\\\\ufb00-\\\\ufb06\\\\ufb13-\\\\ufb17\\\\ufb1d\\\\ufb1f-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40\\\\ufb41\\\\ufb43\\\\ufb44\\\\ufb46-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc\\\\uff21-\\\\uff3a\\\\uff41-\\\\uff5a\\\\uff66-\\\\uffbe\\\\uffc2-\\\\uffc7\\\\uffca-\\\\uffcf\\\\uffd2-\\\\uffd7\\\\uffda-\\\\uffdc\";\n    var nonASCIIidentifierChars = \"\\\\u0300-\\\\u036f\\\\u0483-\\\\u0487\\\\u0591-\\\\u05bd\\\\u05bf\\\\u05c1\\\\u05c2\\\\u05c4\\\\u05c5\\\\u05c7\\\\u0610-\\\\u061a\\\\u0620-\\\\u0649\\\\u0672-\\\\u06d3\\\\u06e7-\\\\u06e8\\\\u06fb-\\\\u06fc\\\\u0730-\\\\u074a\\\\u0800-\\\\u0814\\\\u081b-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082d\\\\u0840-\\\\u0857\\\\u08e4-\\\\u08fe\\\\u0900-\\\\u0903\\\\u093a-\\\\u093c\\\\u093e-\\\\u094f\\\\u0951-\\\\u0957\\\\u0962-\\\\u0963\\\\u0966-\\\\u096f\\\\u0981-\\\\u0983\\\\u09bc\\\\u09be-\\\\u09c4\\\\u09c7\\\\u09c8\\\\u09d7\\\\u09df-\\\\u09e0\\\\u0a01-\\\\u0a03\\\\u0a3c\\\\u0a3e-\\\\u0a42\\\\u0a47\\\\u0a48\\\\u0a4b-\\\\u0a4d\\\\u0a51\\\\u0a66-\\\\u0a71\\\\u0a75\\\\u0a81-\\\\u0a83\\\\u0abc\\\\u0abe-\\\\u0ac5\\\\u0ac7-\\\\u0ac9\\\\u0acb-\\\\u0acd\\\\u0ae2-\\\\u0ae3\\\\u0ae6-\\\\u0aef\\\\u0b01-\\\\u0b03\\\\u0b3c\\\\u0b3e-\\\\u0b44\\\\u0b47\\\\u0b48\\\\u0b4b-\\\\u0b4d\\\\u0b56\\\\u0b57\\\\u0b5f-\\\\u0b60\\\\u0b66-\\\\u0b6f\\\\u0b82\\\\u0bbe-\\\\u0bc2\\\\u0bc6-\\\\u0bc8\\\\u0bca-\\\\u0bcd\\\\u0bd7\\\\u0be6-\\\\u0bef\\\\u0c01-\\\\u0c03\\\\u0c46-\\\\u0c48\\\\u0c4a-\\\\u0c4d\\\\u0c55\\\\u0c56\\\\u0c62-\\\\u0c63\\\\u0c66-\\\\u0c6f\\\\u0c82\\\\u0c83\\\\u0cbc\\\\u0cbe-\\\\u0cc4\\\\u0cc6-\\\\u0cc8\\\\u0cca-\\\\u0ccd\\\\u0cd5\\\\u0cd6\\\\u0ce2-\\\\u0ce3\\\\u0ce6-\\\\u0cef\\\\u0d02\\\\u0d03\\\\u0d46-\\\\u0d48\\\\u0d57\\\\u0d62-\\\\u0d63\\\\u0d66-\\\\u0d6f\\\\u0d82\\\\u0d83\\\\u0dca\\\\u0dcf-\\\\u0dd4\\\\u0dd6\\\\u0dd8-\\\\u0ddf\\\\u0df2\\\\u0df3\\\\u0e34-\\\\u0e3a\\\\u0e40-\\\\u0e45\\\\u0e50-\\\\u0e59\\\\u0eb4-\\\\u0eb9\\\\u0ec8-\\\\u0ecd\\\\u0ed0-\\\\u0ed9\\\\u0f18\\\\u0f19\\\\u0f20-\\\\u0f29\\\\u0f35\\\\u0f37\\\\u0f39\\\\u0f41-\\\\u0f47\\\\u0f71-\\\\u0f84\\\\u0f86-\\\\u0f87\\\\u0f8d-\\\\u0f97\\\\u0f99-\\\\u0fbc\\\\u0fc6\\\\u1000-\\\\u1029\\\\u1040-\\\\u1049\\\\u1067-\\\\u106d\\\\u1071-\\\\u1074\\\\u1082-\\\\u108d\\\\u108f-\\\\u109d\\\\u135d-\\\\u135f\\\\u170e-\\\\u1710\\\\u1720-\\\\u1730\\\\u1740-\\\\u1750\\\\u1772\\\\u1773\\\\u1780-\\\\u17b2\\\\u17dd\\\\u17e0-\\\\u17e9\\\\u180b-\\\\u180d\\\\u1810-\\\\u1819\\\\u1920-\\\\u192b\\\\u1930-\\\\u193b\\\\u1951-\\\\u196d\\\\u19b0-\\\\u19c0\\\\u19c8-\\\\u19c9\\\\u19d0-\\\\u19d9\\\\u1a00-\\\\u1a15\\\\u1a20-\\\\u1a53\\\\u1a60-\\\\u1a7c\\\\u1a7f-\\\\u1a89\\\\u1a90-\\\\u1a99\\\\u1b46-\\\\u1b4b\\\\u1b50-\\\\u1b59\\\\u1b6b-\\\\u1b73\\\\u1bb0-\\\\u1bb9\\\\u1be6-\\\\u1bf3\\\\u1c00-\\\\u1c22\\\\u1c40-\\\\u1c49\\\\u1c5b-\\\\u1c7d\\\\u1cd0-\\\\u1cd2\\\\u1d00-\\\\u1dbe\\\\u1e01-\\\\u1f15\\\\u200c\\\\u200d\\\\u203f\\\\u2040\\\\u2054\\\\u20d0-\\\\u20dc\\\\u20e1\\\\u20e5-\\\\u20f0\\\\u2d81-\\\\u2d96\\\\u2de0-\\\\u2dff\\\\u3021-\\\\u3028\\\\u3099\\\\u309a\\\\ua640-\\\\ua66d\\\\ua674-\\\\ua67d\\\\ua69f\\\\ua6f0-\\\\ua6f1\\\\ua7f8-\\\\ua800\\\\ua806\\\\ua80b\\\\ua823-\\\\ua827\\\\ua880-\\\\ua881\\\\ua8b4-\\\\ua8c4\\\\ua8d0-\\\\ua8d9\\\\ua8f3-\\\\ua8f7\\\\ua900-\\\\ua909\\\\ua926-\\\\ua92d\\\\ua930-\\\\ua945\\\\ua980-\\\\ua983\\\\ua9b3-\\\\ua9c0\\\\uaa00-\\\\uaa27\\\\uaa40-\\\\uaa41\\\\uaa4c-\\\\uaa4d\\\\uaa50-\\\\uaa59\\\\uaa7b\\\\uaae0-\\\\uaae9\\\\uaaf2-\\\\uaaf3\\\\uabc0-\\\\uabe1\\\\uabec\\\\uabed\\\\uabf0-\\\\uabf9\\\\ufb20-\\\\ufb28\\\\ufe00-\\\\ufe0f\\\\ufe20-\\\\ufe26\\\\ufe33\\\\ufe34\\\\ufe4d-\\\\ufe4f\\\\uff10-\\\\uff19\\\\uff3f\"; //var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n    //var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n    var identifierStart = \"(?:\\\\\\\\u[0-9a-fA-F]{4}|[\" + baseASCIIidentifierStartChars + nonASCIIidentifierStartChars + \"])\";\n    var identifierChars = \"(?:\\\\\\\\u[0-9a-fA-F]{4}|[\" + baseASCIIidentifierChars + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"])*\";\n    exports.identifier = new RegExp(identifierStart + identifierChars, 'g');\n    exports.identifierStart = new RegExp(identifierStart);\n    exports.identifierMatch = new RegExp(\"(?:\\\\\\\\u[0-9a-fA-F]{4}|[\" + baseASCIIidentifierChars + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"])+\");\n    var nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/; // jshint ignore:line\n    // Whether a single character denotes a newline.\n\n    exports.newline = /[\\n\\r\\u2028\\u2029]/; // Matches a whole line break (where CRLF is considered a single\n    // line break). Used to count lines.\n    // in javascript, these two differ\n    // in python they are the same, different methods are called on them\n\n    exports.lineBreak = new RegExp('\\r\\n|' + exports.newline.source);\n    exports.allLineBreaks = new RegExp(exports.lineBreak.source, 'g');\n    /***/\n  },\n  /* 5 */\n\n  /***/\n  function (module, exports, __webpack_require__) {\n    \"use strict\";\n    /*jshint node:true */\n\n    /*\n    \n      The MIT License (MIT)\n    \n      Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n    \n      Permission is hereby granted, free of charge, to any person\n      obtaining a copy of this software and associated documentation files\n      (the \"Software\"), to deal in the Software without restriction,\n      including without limitation the rights to use, copy, modify, merge,\n      publish, distribute, sublicense, and/or sell copies of the Software,\n      and to permit persons to whom the Software is furnished to do so,\n      subject to the following conditions:\n    \n      The above copyright notice and this permission notice shall be\n      included in all copies or substantial portions of the Software.\n    \n      THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n      EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n      NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n      BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n      ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n      CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n      SOFTWARE.\n    */\n\n    var BaseOptions = __webpack_require__(6).Options;\n\n    var validPositionValues = ['before-newline', 'after-newline', 'preserve-newline'];\n\n    function Options(options) {\n      BaseOptions.call(this, options, 'js'); // compatibility, re\n\n      var raw_brace_style = this.raw_options.brace_style || null;\n\n      if (raw_brace_style === \"expand-strict\") {\n        //graceful handling of deprecated option\n        this.raw_options.brace_style = \"expand\";\n      } else if (raw_brace_style === \"collapse-preserve-inline\") {\n        //graceful handling of deprecated option\n        this.raw_options.brace_style = \"collapse,preserve-inline\";\n      } else if (this.raw_options.braces_on_own_line !== undefined) {\n        //graceful handling of deprecated option\n        this.raw_options.brace_style = this.raw_options.braces_on_own_line ? \"expand\" : \"collapse\"; // } else if (!raw_brace_style) { //Nothing exists to set it\n        //   raw_brace_style = \"collapse\";\n      } //preserve-inline in delimited string will trigger brace_preserve_inline, everything\n      //else is considered a brace_style and the last one only will have an effect\n\n\n      var brace_style_split = this._get_selection_list('brace_style', ['collapse', 'expand', 'end-expand', 'none', 'preserve-inline']);\n\n      this.brace_preserve_inline = false; //Defaults in case one or other was not specified in meta-option\n\n      this.brace_style = \"collapse\";\n\n      for (var bs = 0; bs < brace_style_split.length; bs++) {\n        if (brace_style_split[bs] === \"preserve-inline\") {\n          this.brace_preserve_inline = true;\n        } else {\n          this.brace_style = brace_style_split[bs];\n        }\n      }\n\n      this.unindent_chained_methods = this._get_boolean('unindent_chained_methods');\n      this.break_chained_methods = this._get_boolean('break_chained_methods');\n      this.space_in_paren = this._get_boolean('space_in_paren');\n      this.space_in_empty_paren = this._get_boolean('space_in_empty_paren');\n      this.jslint_happy = this._get_boolean('jslint_happy');\n      this.space_after_anon_function = this._get_boolean('space_after_anon_function');\n      this.space_after_named_function = this._get_boolean('space_after_named_function');\n      this.keep_array_indentation = this._get_boolean('keep_array_indentation');\n      this.space_before_conditional = this._get_boolean('space_before_conditional', true);\n      this.unescape_strings = this._get_boolean('unescape_strings');\n      this.e4x = this._get_boolean('e4x');\n      this.comma_first = this._get_boolean('comma_first');\n      this.operator_position = this._get_selection('operator_position', validPositionValues); // For testing of beautify preserve:start directive\n\n      this.test_output_raw = this._get_boolean('test_output_raw'); // force this._options.space_after_anon_function to true if this._options.jslint_happy\n\n      if (this.jslint_happy) {\n        this.space_after_anon_function = true;\n      }\n    }\n\n    Options.prototype = new BaseOptions();\n    module.exports.Options = Options;\n    /***/\n  },\n  /* 6 */\n\n  /***/\n  function (module, exports, __webpack_require__) {\n    \"use strict\";\n    /*jshint node:true */\n\n    /*\n    \n      The MIT License (MIT)\n    \n      Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n    \n      Permission is hereby granted, free of charge, to any person\n      obtaining a copy of this software and associated documentation files\n      (the \"Software\"), to deal in the Software without restriction,\n      including without limitation the rights to use, copy, modify, merge,\n      publish, distribute, sublicense, and/or sell copies of the Software,\n      and to permit persons to whom the Software is furnished to do so,\n      subject to the following conditions:\n    \n      The above copyright notice and this permission notice shall be\n      included in all copies or substantial portions of the Software.\n    \n      THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n      EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n      NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n      BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n      ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n      CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n      SOFTWARE.\n    */\n\n    function Options(options, merge_child_field) {\n      this.raw_options = _mergeOpts(options, merge_child_field); // Support passing the source text back with no change\n\n      this.disabled = this._get_boolean('disabled');\n      this.eol = this._get_characters('eol', 'auto');\n      this.end_with_newline = this._get_boolean('end_with_newline');\n      this.indent_size = this._get_number('indent_size', 4);\n      this.indent_char = this._get_characters('indent_char', ' ');\n      this.indent_level = this._get_number('indent_level');\n      this.preserve_newlines = this._get_boolean('preserve_newlines', true);\n      this.max_preserve_newlines = this._get_number('max_preserve_newlines', 32786);\n\n      if (!this.preserve_newlines) {\n        this.max_preserve_newlines = 0;\n      }\n\n      this.indent_with_tabs = this._get_boolean('indent_with_tabs', this.indent_char === '\\t');\n\n      if (this.indent_with_tabs) {\n        this.indent_char = '\\t'; // indent_size behavior changed after 1.8.6\n        // It used to be that indent_size would be\n        // set to 1 for indent_with_tabs. That is no longer needed and\n        // actually doesn't make sense - why not use spaces? Further,\n        // that might produce unexpected behavior - tabs being used\n        // for single-column alignment. So, when indent_with_tabs is true\n        // and indent_size is 1, reset indent_size to 4.\n\n        if (this.indent_size === 1) {\n          this.indent_size = 4;\n        }\n      } // Backwards compat with 1.3.x\n\n\n      this.wrap_line_length = this._get_number('wrap_line_length', this._get_number('max_char'));\n      this.indent_empty_lines = this._get_boolean('indent_empty_lines'); // valid templating languages ['django', 'erb', 'handlebars', 'php']\n      // For now, 'auto' = all off for javascript, all on for html (and inline javascript).\n      // other values ignored\n\n      this.templating = this._get_selection_list('templating', ['auto', 'none', 'django', 'erb', 'handlebars', 'php'], ['auto']);\n    }\n\n    Options.prototype._get_array = function (name, default_value) {\n      var option_value = this.raw_options[name];\n      var result = default_value || [];\n\n      if (typeof option_value === 'object') {\n        if (option_value !== null && typeof option_value.concat === 'function') {\n          result = option_value.concat();\n        }\n      } else if (typeof option_value === 'string') {\n        result = option_value.split(/[^a-zA-Z0-9_\\/\\-]+/);\n      }\n\n      return result;\n    };\n\n    Options.prototype._get_boolean = function (name, default_value) {\n      var option_value = this.raw_options[name];\n      var result = option_value === undefined ? !!default_value : !!option_value;\n      return result;\n    };\n\n    Options.prototype._get_characters = function (name, default_value) {\n      var option_value = this.raw_options[name];\n      var result = default_value || '';\n\n      if (typeof option_value === 'string') {\n        result = option_value.replace(/\\\\r/, '\\r').replace(/\\\\n/, '\\n').replace(/\\\\t/, '\\t');\n      }\n\n      return result;\n    };\n\n    Options.prototype._get_number = function (name, default_value) {\n      var option_value = this.raw_options[name];\n      default_value = parseInt(default_value, 10);\n\n      if (isNaN(default_value)) {\n        default_value = 0;\n      }\n\n      var result = parseInt(option_value, 10);\n\n      if (isNaN(result)) {\n        result = default_value;\n      }\n\n      return result;\n    };\n\n    Options.prototype._get_selection = function (name, selection_list, default_value) {\n      var result = this._get_selection_list(name, selection_list, default_value);\n\n      if (result.length !== 1) {\n        throw new Error(\"Invalid Option Value: The option '\" + name + \"' can only be one of the following values:\\n\" + selection_list + \"\\nYou passed in: '\" + this.raw_options[name] + \"'\");\n      }\n\n      return result[0];\n    };\n\n    Options.prototype._get_selection_list = function (name, selection_list, default_value) {\n      if (!selection_list || selection_list.length === 0) {\n        throw new Error(\"Selection list cannot be empty.\");\n      }\n\n      default_value = default_value || [selection_list[0]];\n\n      if (!this._is_valid_selection(default_value, selection_list)) {\n        throw new Error(\"Invalid Default Value!\");\n      }\n\n      var result = this._get_array(name, default_value);\n\n      if (!this._is_valid_selection(result, selection_list)) {\n        throw new Error(\"Invalid Option Value: The option '\" + name + \"' can contain only the following values:\\n\" + selection_list + \"\\nYou passed in: '\" + this.raw_options[name] + \"'\");\n      }\n\n      return result;\n    };\n\n    Options.prototype._is_valid_selection = function (result, selection_list) {\n      return result.length && selection_list.length && !result.some(function (item) {\n        return selection_list.indexOf(item) === -1;\n      });\n    }; // merges child options up with the parent options object\n    // Example: obj = {a: 1, b: {a: 2}}\n    //          mergeOpts(obj, 'b')\n    //\n    //          Returns: {a: 2}\n\n\n    function _mergeOpts(allOptions, childFieldName) {\n      var finalOpts = {};\n      allOptions = _normalizeOpts(allOptions);\n      var name;\n\n      for (name in allOptions) {\n        if (name !== childFieldName) {\n          finalOpts[name] = allOptions[name];\n        }\n      } //merge in the per type settings for the childFieldName\n\n\n      if (childFieldName && allOptions[childFieldName]) {\n        for (name in allOptions[childFieldName]) {\n          finalOpts[name] = allOptions[childFieldName][name];\n        }\n      }\n\n      return finalOpts;\n    }\n\n    function _normalizeOpts(options) {\n      var convertedOpts = {};\n      var key;\n\n      for (key in options) {\n        var newKey = key.replace(/-/g, \"_\");\n        convertedOpts[newKey] = options[key];\n      }\n\n      return convertedOpts;\n    }\n\n    module.exports.Options = Options;\n    module.exports.normalizeOpts = _normalizeOpts;\n    module.exports.mergeOpts = _mergeOpts;\n    /***/\n  },\n  /* 7 */\n\n  /***/\n  function (module, exports, __webpack_require__) {\n    \"use strict\";\n    /*jshint node:true */\n\n    /*\n    \n      The MIT License (MIT)\n    \n      Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n    \n      Permission is hereby granted, free of charge, to any person\n      obtaining a copy of this software and associated documentation files\n      (the \"Software\"), to deal in the Software without restriction,\n      including without limitation the rights to use, copy, modify, merge,\n      publish, distribute, sublicense, and/or sell copies of the Software,\n      and to permit persons to whom the Software is furnished to do so,\n      subject to the following conditions:\n    \n      The above copyright notice and this permission notice shall be\n      included in all copies or substantial portions of the Software.\n    \n      THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n      EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n      NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n      BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n      ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n      CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n      SOFTWARE.\n    */\n\n    var InputScanner = __webpack_require__(8).InputScanner;\n\n    var BaseTokenizer = __webpack_require__(9).Tokenizer;\n\n    var BASETOKEN = __webpack_require__(9).TOKEN;\n\n    var Directives = __webpack_require__(13).Directives;\n\n    var acorn = __webpack_require__(4);\n\n    var Pattern = __webpack_require__(12).Pattern;\n\n    var TemplatablePattern = __webpack_require__(14).TemplatablePattern;\n\n    function in_array(what, arr) {\n      return arr.indexOf(what) !== -1;\n    }\n\n    var TOKEN = {\n      START_EXPR: 'TK_START_EXPR',\n      END_EXPR: 'TK_END_EXPR',\n      START_BLOCK: 'TK_START_BLOCK',\n      END_BLOCK: 'TK_END_BLOCK',\n      WORD: 'TK_WORD',\n      RESERVED: 'TK_RESERVED',\n      SEMICOLON: 'TK_SEMICOLON',\n      STRING: 'TK_STRING',\n      EQUALS: 'TK_EQUALS',\n      OPERATOR: 'TK_OPERATOR',\n      COMMA: 'TK_COMMA',\n      BLOCK_COMMENT: 'TK_BLOCK_COMMENT',\n      COMMENT: 'TK_COMMENT',\n      DOT: 'TK_DOT',\n      UNKNOWN: 'TK_UNKNOWN',\n      START: BASETOKEN.START,\n      RAW: BASETOKEN.RAW,\n      EOF: BASETOKEN.EOF\n    };\n    var directives_core = new Directives(/\\/\\*/, /\\*\\//);\n    var number_pattern = /0[xX][0123456789abcdefABCDEF]*|0[oO][01234567]*|0[bB][01]*|\\d+n|(?:\\.\\d+|\\d+\\.?\\d*)(?:[eE][+-]?\\d+)?/;\n    var digit = /[0-9]/; // Dot \".\" must be distinguished from \"...\" and decimal\n\n    var dot_pattern = /[^\\d\\.]/;\n    var positionable_operators = (\">>> === !== \" + \"<< && >= ** != == <= >> || |> \" + \"< / - + > : & % ? ^ | *\").split(' '); // IMPORTANT: this must be sorted longest to shortest or tokenizing many not work.\n    // Also, you must update possitionable operators separately from punct\n\n    var punct = \">>>= \" + \"... >>= <<= === >>> !== **= \" + \"=> ^= :: /= << <= == && -= >= >> != -- += ** || ++ %= &= *= |= |> \" + \"= ! ? > < : / ^ - + * & % ~ |\";\n    punct = punct.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, \"\\\\$&\"); // ?. but not if followed by a number \n\n    punct = '\\\\?\\\\.(?!\\\\d) ' + punct;\n    punct = punct.replace(/ /g, '|');\n    var punct_pattern = new RegExp(punct); // words which should always start on new line.\n\n    var line_starters = 'continue,try,throw,return,var,let,const,if,switch,case,default,for,while,break,function,import,export'.split(',');\n    var reserved_words = line_starters.concat(['do', 'in', 'of', 'else', 'get', 'set', 'new', 'catch', 'finally', 'typeof', 'yield', 'async', 'await', 'from', 'as']);\n    var reserved_word_pattern = new RegExp('^(?:' + reserved_words.join('|') + ')$'); // var template_pattern = /(?:(?:<\\?php|<\\?=)[\\s\\S]*?\\?>)|(?:<%[\\s\\S]*?%>)/g;\n\n    var in_html_comment;\n\n    var Tokenizer = function Tokenizer(input_string, options) {\n      BaseTokenizer.call(this, input_string, options);\n      this._patterns.whitespace = this._patterns.whitespace.matching(/\\u00A0\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff/.source, /\\u2028\\u2029/.source);\n      var pattern_reader = new Pattern(this._input);\n      var templatable = new TemplatablePattern(this._input).read_options(this._options);\n      this.__patterns = {\n        template: templatable,\n        identifier: templatable.starting_with(acorn.identifier).matching(acorn.identifierMatch),\n        number: pattern_reader.matching(number_pattern),\n        punct: pattern_reader.matching(punct_pattern),\n        // comment ends just before nearest linefeed or end of file\n        comment: pattern_reader.starting_with(/\\/\\//).until(/[\\n\\r\\u2028\\u2029]/),\n        //  /* ... */ comment ends with nearest */ or end of file\n        block_comment: pattern_reader.starting_with(/\\/\\*/).until_after(/\\*\\//),\n        html_comment_start: pattern_reader.matching(/<!--/),\n        html_comment_end: pattern_reader.matching(/-->/),\n        include: pattern_reader.starting_with(/#include/).until_after(acorn.lineBreak),\n        shebang: pattern_reader.starting_with(/#!/).until_after(acorn.lineBreak),\n        xml: pattern_reader.matching(/[\\s\\S]*?<(\\/?)([-a-zA-Z:0-9_.]+|{[\\s\\S]+?}|!\\[CDATA\\[[\\s\\S]*?\\]\\])(\\s+{[\\s\\S]+?}|\\s+[-a-zA-Z:0-9_.]+|\\s+[-a-zA-Z:0-9_.]+\\s*=\\s*('[^']*'|\"[^\"]*\"|{[\\s\\S]+?}))*\\s*(\\/?)\\s*>/),\n        single_quote: templatable.until(/['\\\\\\n\\r\\u2028\\u2029]/),\n        double_quote: templatable.until(/[\"\\\\\\n\\r\\u2028\\u2029]/),\n        template_text: templatable.until(/[`\\\\$]/),\n        template_expression: templatable.until(/[`}\\\\]/)\n      };\n    };\n\n    Tokenizer.prototype = new BaseTokenizer();\n\n    Tokenizer.prototype._is_comment = function (current_token) {\n      return current_token.type === TOKEN.COMMENT || current_token.type === TOKEN.BLOCK_COMMENT || current_token.type === TOKEN.UNKNOWN;\n    };\n\n    Tokenizer.prototype._is_opening = function (current_token) {\n      return current_token.type === TOKEN.START_BLOCK || current_token.type === TOKEN.START_EXPR;\n    };\n\n    Tokenizer.prototype._is_closing = function (current_token, open_token) {\n      return (current_token.type === TOKEN.END_BLOCK || current_token.type === TOKEN.END_EXPR) && open_token && (current_token.text === ']' && open_token.text === '[' || current_token.text === ')' && open_token.text === '(' || current_token.text === '}' && open_token.text === '{');\n    };\n\n    Tokenizer.prototype._reset = function () {\n      in_html_comment = false;\n    };\n\n    Tokenizer.prototype._get_next_token = function (previous_token, open_token) {\n      // jshint unused:false\n      var token = null;\n\n      this._readWhitespace();\n\n      var c = this._input.peek();\n\n      if (c === null) {\n        return this._create_token(TOKEN.EOF, '');\n      }\n\n      token = token || this._read_non_javascript(c);\n      token = token || this._read_string(c);\n      token = token || this._read_word(previous_token);\n      token = token || this._read_singles(c);\n      token = token || this._read_comment(c);\n      token = token || this._read_regexp(c, previous_token);\n      token = token || this._read_xml(c, previous_token);\n      token = token || this._read_punctuation();\n      token = token || this._create_token(TOKEN.UNKNOWN, this._input.next());\n      return token;\n    };\n\n    Tokenizer.prototype._read_word = function (previous_token) {\n      var resulting_string;\n      resulting_string = this.__patterns.identifier.read();\n\n      if (resulting_string !== '') {\n        resulting_string = resulting_string.replace(acorn.allLineBreaks, '\\n');\n\n        if (!(previous_token.type === TOKEN.DOT || previous_token.type === TOKEN.RESERVED && (previous_token.text === 'set' || previous_token.text === 'get')) && reserved_word_pattern.test(resulting_string)) {\n          if (resulting_string === 'in' || resulting_string === 'of') {\n            // hack for 'in' and 'of' operators\n            return this._create_token(TOKEN.OPERATOR, resulting_string);\n          }\n\n          return this._create_token(TOKEN.RESERVED, resulting_string);\n        }\n\n        return this._create_token(TOKEN.WORD, resulting_string);\n      }\n\n      resulting_string = this.__patterns.number.read();\n\n      if (resulting_string !== '') {\n        return this._create_token(TOKEN.WORD, resulting_string);\n      }\n    };\n\n    Tokenizer.prototype._read_singles = function (c) {\n      var token = null;\n\n      if (c === '(' || c === '[') {\n        token = this._create_token(TOKEN.START_EXPR, c);\n      } else if (c === ')' || c === ']') {\n        token = this._create_token(TOKEN.END_EXPR, c);\n      } else if (c === '{') {\n        token = this._create_token(TOKEN.START_BLOCK, c);\n      } else if (c === '}') {\n        token = this._create_token(TOKEN.END_BLOCK, c);\n      } else if (c === ';') {\n        token = this._create_token(TOKEN.SEMICOLON, c);\n      } else if (c === '.' && dot_pattern.test(this._input.peek(1))) {\n        token = this._create_token(TOKEN.DOT, c);\n      } else if (c === ',') {\n        token = this._create_token(TOKEN.COMMA, c);\n      }\n\n      if (token) {\n        this._input.next();\n      }\n\n      return token;\n    };\n\n    Tokenizer.prototype._read_punctuation = function () {\n      var resulting_string = this.__patterns.punct.read();\n\n      if (resulting_string !== '') {\n        if (resulting_string === '=') {\n          return this._create_token(TOKEN.EQUALS, resulting_string);\n        } else if (resulting_string === '?.') {\n          return this._create_token(TOKEN.DOT, resulting_string);\n        } else {\n          return this._create_token(TOKEN.OPERATOR, resulting_string);\n        }\n      }\n    };\n\n    Tokenizer.prototype._read_non_javascript = function (c) {\n      var resulting_string = '';\n\n      if (c === '#') {\n        if (this._is_first_token()) {\n          resulting_string = this.__patterns.shebang.read();\n\n          if (resulting_string) {\n            return this._create_token(TOKEN.UNKNOWN, resulting_string.trim() + '\\n');\n          }\n        } // handles extendscript #includes\n\n\n        resulting_string = this.__patterns.include.read();\n\n        if (resulting_string) {\n          return this._create_token(TOKEN.UNKNOWN, resulting_string.trim() + '\\n');\n        }\n\n        c = this._input.next(); // Spidermonkey-specific sharp variables for circular references. Considered obsolete.\n\n        var sharp = '#';\n\n        if (this._input.hasNext() && this._input.testChar(digit)) {\n          do {\n            c = this._input.next();\n            sharp += c;\n          } while (this._input.hasNext() && c !== '#' && c !== '=');\n\n          if (c === '#') {//\n          } else if (this._input.peek() === '[' && this._input.peek(1) === ']') {\n            sharp += '[]';\n\n            this._input.next();\n\n            this._input.next();\n          } else if (this._input.peek() === '{' && this._input.peek(1) === '}') {\n            sharp += '{}';\n\n            this._input.next();\n\n            this._input.next();\n          }\n\n          return this._create_token(TOKEN.WORD, sharp);\n        }\n\n        this._input.back();\n      } else if (c === '<' && this._is_first_token()) {\n        resulting_string = this.__patterns.html_comment_start.read();\n\n        if (resulting_string) {\n          while (this._input.hasNext() && !this._input.testChar(acorn.newline)) {\n            resulting_string += this._input.next();\n          }\n\n          in_html_comment = true;\n          return this._create_token(TOKEN.COMMENT, resulting_string);\n        }\n      } else if (in_html_comment && c === '-') {\n        resulting_string = this.__patterns.html_comment_end.read();\n\n        if (resulting_string) {\n          in_html_comment = false;\n          return this._create_token(TOKEN.COMMENT, resulting_string);\n        }\n      }\n\n      return null;\n    };\n\n    Tokenizer.prototype._read_comment = function (c) {\n      var token = null;\n\n      if (c === '/') {\n        var comment = '';\n\n        if (this._input.peek(1) === '*') {\n          // peek for comment /* ... */\n          comment = this.__patterns.block_comment.read();\n          var directives = directives_core.get_directives(comment);\n\n          if (directives && directives.ignore === 'start') {\n            comment += directives_core.readIgnored(this._input);\n          }\n\n          comment = comment.replace(acorn.allLineBreaks, '\\n');\n          token = this._create_token(TOKEN.BLOCK_COMMENT, comment);\n          token.directives = directives;\n        } else if (this._input.peek(1) === '/') {\n          // peek for comment // ...\n          comment = this.__patterns.comment.read();\n          token = this._create_token(TOKEN.COMMENT, comment);\n        }\n      }\n\n      return token;\n    };\n\n    Tokenizer.prototype._read_string = function (c) {\n      if (c === '`' || c === \"'\" || c === '\"') {\n        var resulting_string = this._input.next();\n\n        this.has_char_escapes = false;\n\n        if (c === '`') {\n          resulting_string += this._read_string_recursive('`', true, '${');\n        } else {\n          resulting_string += this._read_string_recursive(c);\n        }\n\n        if (this.has_char_escapes && this._options.unescape_strings) {\n          resulting_string = unescape_string(resulting_string);\n        }\n\n        if (this._input.peek() === c) {\n          resulting_string += this._input.next();\n        }\n\n        resulting_string = resulting_string.replace(acorn.allLineBreaks, '\\n');\n        return this._create_token(TOKEN.STRING, resulting_string);\n      }\n\n      return null;\n    };\n\n    Tokenizer.prototype._allow_regexp_or_xml = function (previous_token) {\n      // regex and xml can only appear in specific locations during parsing\n      return previous_token.type === TOKEN.RESERVED && in_array(previous_token.text, ['return', 'case', 'throw', 'else', 'do', 'typeof', 'yield']) || previous_token.type === TOKEN.END_EXPR && previous_token.text === ')' && previous_token.opened.previous.type === TOKEN.RESERVED && in_array(previous_token.opened.previous.text, ['if', 'while', 'for']) || in_array(previous_token.type, [TOKEN.COMMENT, TOKEN.START_EXPR, TOKEN.START_BLOCK, TOKEN.START, TOKEN.END_BLOCK, TOKEN.OPERATOR, TOKEN.EQUALS, TOKEN.EOF, TOKEN.SEMICOLON, TOKEN.COMMA]);\n    };\n\n    Tokenizer.prototype._read_regexp = function (c, previous_token) {\n      if (c === '/' && this._allow_regexp_or_xml(previous_token)) {\n        // handle regexp\n        //\n        var resulting_string = this._input.next();\n\n        var esc = false;\n        var in_char_class = false;\n\n        while (this._input.hasNext() && (esc || in_char_class || this._input.peek() !== c) && !this._input.testChar(acorn.newline)) {\n          resulting_string += this._input.peek();\n\n          if (!esc) {\n            esc = this._input.peek() === '\\\\';\n\n            if (this._input.peek() === '[') {\n              in_char_class = true;\n            } else if (this._input.peek() === ']') {\n              in_char_class = false;\n            }\n          } else {\n            esc = false;\n          }\n\n          this._input.next();\n        }\n\n        if (this._input.peek() === c) {\n          resulting_string += this._input.next(); // regexps may have modifiers /regexp/MOD , so fetch those, too\n          // Only [gim] are valid, but if the user puts in garbage, do what we can to take it.\n\n          resulting_string += this._input.read(acorn.identifier);\n        }\n\n        return this._create_token(TOKEN.STRING, resulting_string);\n      }\n\n      return null;\n    };\n\n    Tokenizer.prototype._read_xml = function (c, previous_token) {\n      if (this._options.e4x && c === \"<\" && this._allow_regexp_or_xml(previous_token)) {\n        var xmlStr = '';\n\n        var match = this.__patterns.xml.read_match(); // handle e4x xml literals\n        //\n\n\n        if (match) {\n          // Trim root tag to attempt to\n          var rootTag = match[2].replace(/^{\\s+/, '{').replace(/\\s+}$/, '}');\n          var isCurlyRoot = rootTag.indexOf('{') === 0;\n          var depth = 0;\n\n          while (match) {\n            var isEndTag = !!match[1];\n            var tagName = match[2];\n            var isSingletonTag = !!match[match.length - 1] || tagName.slice(0, 8) === \"![CDATA[\";\n\n            if (!isSingletonTag && (tagName === rootTag || isCurlyRoot && tagName.replace(/^{\\s+/, '{').replace(/\\s+}$/, '}'))) {\n              if (isEndTag) {\n                --depth;\n              } else {\n                ++depth;\n              }\n            }\n\n            xmlStr += match[0];\n\n            if (depth <= 0) {\n              break;\n            }\n\n            match = this.__patterns.xml.read_match();\n          } // if we didn't close correctly, keep unformatted.\n\n\n          if (!match) {\n            xmlStr += this._input.match(/[\\s\\S]*/g)[0];\n          }\n\n          xmlStr = xmlStr.replace(acorn.allLineBreaks, '\\n');\n          return this._create_token(TOKEN.STRING, xmlStr);\n        }\n      }\n\n      return null;\n    };\n\n    function unescape_string(s) {\n      // You think that a regex would work for this\n      // return s.replace(/\\\\x([0-9a-f]{2})/gi, function(match, val) {\n      //         return String.fromCharCode(parseInt(val, 16));\n      //     })\n      // However, dealing with '\\xff', '\\\\xff', '\\\\\\xff' makes this more fun.\n      var out = '',\n          escaped = 0;\n      var input_scan = new InputScanner(s);\n      var matched = null;\n\n      while (input_scan.hasNext()) {\n        // Keep any whitespace, non-slash characters\n        // also keep slash pairs.\n        matched = input_scan.match(/([\\s]|[^\\\\]|\\\\\\\\)+/g);\n\n        if (matched) {\n          out += matched[0];\n        }\n\n        if (input_scan.peek() === '\\\\') {\n          input_scan.next();\n\n          if (input_scan.peek() === 'x') {\n            matched = input_scan.match(/x([0-9A-Fa-f]{2})/g);\n          } else if (input_scan.peek() === 'u') {\n            matched = input_scan.match(/u([0-9A-Fa-f]{4})/g);\n          } else {\n            out += '\\\\';\n\n            if (input_scan.hasNext()) {\n              out += input_scan.next();\n            }\n\n            continue;\n          } // If there's some error decoding, return the original string\n\n\n          if (!matched) {\n            return s;\n          }\n\n          escaped = parseInt(matched[1], 16);\n\n          if (escaped > 0x7e && escaped <= 0xff && matched[0].indexOf('x') === 0) {\n            // we bail out on \\x7f..\\xff,\n            // leaving whole string escaped,\n            // as it's probably completely binary\n            return s;\n          } else if (escaped >= 0x00 && escaped < 0x20) {\n            // leave 0x00...0x1f escaped\n            out += '\\\\' + matched[0];\n            continue;\n          } else if (escaped === 0x22 || escaped === 0x27 || escaped === 0x5c) {\n            // single-quote, apostrophe, backslash - escape these\n            out += '\\\\' + String.fromCharCode(escaped);\n          } else {\n            out += String.fromCharCode(escaped);\n          }\n        }\n      }\n\n      return out;\n    } // handle string\n    //\n\n\n    Tokenizer.prototype._read_string_recursive = function (delimiter, allow_unescaped_newlines, start_sub) {\n      var current_char;\n      var pattern;\n\n      if (delimiter === '\\'') {\n        pattern = this.__patterns.single_quote;\n      } else if (delimiter === '\"') {\n        pattern = this.__patterns.double_quote;\n      } else if (delimiter === '`') {\n        pattern = this.__patterns.template_text;\n      } else if (delimiter === '}') {\n        pattern = this.__patterns.template_expression;\n      }\n\n      var resulting_string = pattern.read();\n      var next = '';\n\n      while (this._input.hasNext()) {\n        next = this._input.next();\n\n        if (next === delimiter || !allow_unescaped_newlines && acorn.newline.test(next)) {\n          this._input.back();\n\n          break;\n        } else if (next === '\\\\' && this._input.hasNext()) {\n          current_char = this._input.peek();\n\n          if (current_char === 'x' || current_char === 'u') {\n            this.has_char_escapes = true;\n          } else if (current_char === '\\r' && this._input.peek(1) === '\\n') {\n            this._input.next();\n          }\n\n          next += this._input.next();\n        } else if (start_sub) {\n          if (start_sub === '${' && next === '$' && this._input.peek() === '{') {\n            next += this._input.next();\n          }\n\n          if (start_sub === next) {\n            if (delimiter === '`') {\n              next += this._read_string_recursive('}', allow_unescaped_newlines, '`');\n            } else {\n              next += this._read_string_recursive('`', allow_unescaped_newlines, '${');\n            }\n\n            if (this._input.hasNext()) {\n              next += this._input.next();\n            }\n          }\n        }\n\n        next += pattern.read();\n        resulting_string += next;\n      }\n\n      return resulting_string;\n    };\n\n    module.exports.Tokenizer = Tokenizer;\n    module.exports.TOKEN = TOKEN;\n    module.exports.positionable_operators = positionable_operators.slice();\n    module.exports.line_starters = line_starters.slice();\n    /***/\n  },\n  /* 8 */\n\n  /***/\n  function (module, exports, __webpack_require__) {\n    \"use strict\";\n    /*jshint node:true */\n\n    /*\n    \n      The MIT License (MIT)\n    \n      Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n    \n      Permission is hereby granted, free of charge, to any person\n      obtaining a copy of this software and associated documentation files\n      (the \"Software\"), to deal in the Software without restriction,\n      including without limitation the rights to use, copy, modify, merge,\n      publish, distribute, sublicense, and/or sell copies of the Software,\n      and to permit persons to whom the Software is furnished to do so,\n      subject to the following conditions:\n    \n      The above copyright notice and this permission notice shall be\n      included in all copies or substantial portions of the Software.\n    \n      THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n      EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n      NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n      BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n      ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n      CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n      SOFTWARE.\n    */\n\n    var regexp_has_sticky = RegExp.prototype.hasOwnProperty('sticky');\n\n    function InputScanner(input_string) {\n      this.__input = input_string || '';\n      this.__input_length = this.__input.length;\n      this.__position = 0;\n    }\n\n    InputScanner.prototype.restart = function () {\n      this.__position = 0;\n    };\n\n    InputScanner.prototype.back = function () {\n      if (this.__position > 0) {\n        this.__position -= 1;\n      }\n    };\n\n    InputScanner.prototype.hasNext = function () {\n      return this.__position < this.__input_length;\n    };\n\n    InputScanner.prototype.next = function () {\n      var val = null;\n\n      if (this.hasNext()) {\n        val = this.__input.charAt(this.__position);\n        this.__position += 1;\n      }\n\n      return val;\n    };\n\n    InputScanner.prototype.peek = function (index) {\n      var val = null;\n      index = index || 0;\n      index += this.__position;\n\n      if (index >= 0 && index < this.__input_length) {\n        val = this.__input.charAt(index);\n      }\n\n      return val;\n    }; // This is a JavaScript only helper function (not in python)\n    // Javascript doesn't have a match method\n    // and not all implementation support \"sticky\" flag.\n    // If they do not support sticky then both this.match() and this.test() method\n    // must get the match and check the index of the match.\n    // If sticky is supported and set, this method will use it.\n    // Otherwise it will check that global is set, and fall back to the slower method.\n\n\n    InputScanner.prototype.__match = function (pattern, index) {\n      pattern.lastIndex = index;\n      var pattern_match = pattern.exec(this.__input);\n\n      if (pattern_match && !(regexp_has_sticky && pattern.sticky)) {\n        if (pattern_match.index !== index) {\n          pattern_match = null;\n        }\n      }\n\n      return pattern_match;\n    };\n\n    InputScanner.prototype.test = function (pattern, index) {\n      index = index || 0;\n      index += this.__position;\n\n      if (index >= 0 && index < this.__input_length) {\n        return !!this.__match(pattern, index);\n      } else {\n        return false;\n      }\n    };\n\n    InputScanner.prototype.testChar = function (pattern, index) {\n      // test one character regex match\n      var val = this.peek(index);\n      pattern.lastIndex = 0;\n      return val !== null && pattern.test(val);\n    };\n\n    InputScanner.prototype.match = function (pattern) {\n      var pattern_match = this.__match(pattern, this.__position);\n\n      if (pattern_match) {\n        this.__position += pattern_match[0].length;\n      } else {\n        pattern_match = null;\n      }\n\n      return pattern_match;\n    };\n\n    InputScanner.prototype.read = function (starting_pattern, until_pattern, until_after) {\n      var val = '';\n      var match;\n\n      if (starting_pattern) {\n        match = this.match(starting_pattern);\n\n        if (match) {\n          val += match[0];\n        }\n      }\n\n      if (until_pattern && (match || !starting_pattern)) {\n        val += this.readUntil(until_pattern, until_after);\n      }\n\n      return val;\n    };\n\n    InputScanner.prototype.readUntil = function (pattern, until_after) {\n      var val = '';\n      var match_index = this.__position;\n      pattern.lastIndex = this.__position;\n      var pattern_match = pattern.exec(this.__input);\n\n      if (pattern_match) {\n        match_index = pattern_match.index;\n\n        if (until_after) {\n          match_index += pattern_match[0].length;\n        }\n      } else {\n        match_index = this.__input_length;\n      }\n\n      val = this.__input.substring(this.__position, match_index);\n      this.__position = match_index;\n      return val;\n    };\n\n    InputScanner.prototype.readUntilAfter = function (pattern) {\n      return this.readUntil(pattern, true);\n    };\n\n    InputScanner.prototype.get_regexp = function (pattern, match_from) {\n      var result = null;\n      var flags = 'g';\n\n      if (match_from && regexp_has_sticky) {\n        flags = 'y';\n      } // strings are converted to regexp\n\n\n      if (typeof pattern === \"string\" && pattern !== '') {\n        // result = new RegExp(pattern.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), flags);\n        result = new RegExp(pattern, flags);\n      } else if (pattern) {\n        result = new RegExp(pattern.source, flags);\n      }\n\n      return result;\n    };\n\n    InputScanner.prototype.get_literal_regexp = function (literal_string) {\n      return RegExp(literal_string.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'));\n    };\n    /* css beautifier legacy helpers */\n\n\n    InputScanner.prototype.peekUntilAfter = function (pattern) {\n      var start = this.__position;\n      var val = this.readUntilAfter(pattern);\n      this.__position = start;\n      return val;\n    };\n\n    InputScanner.prototype.lookBack = function (testVal) {\n      var start = this.__position - 1;\n      return start >= testVal.length && this.__input.substring(start - testVal.length, start).toLowerCase() === testVal;\n    };\n\n    module.exports.InputScanner = InputScanner;\n    /***/\n  },\n  /* 9 */\n\n  /***/\n  function (module, exports, __webpack_require__) {\n    \"use strict\";\n    /*jshint node:true */\n\n    /*\n    \n      The MIT License (MIT)\n    \n      Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n    \n      Permission is hereby granted, free of charge, to any person\n      obtaining a copy of this software and associated documentation files\n      (the \"Software\"), to deal in the Software without restriction,\n      including without limitation the rights to use, copy, modify, merge,\n      publish, distribute, sublicense, and/or sell copies of the Software,\n      and to permit persons to whom the Software is furnished to do so,\n      subject to the following conditions:\n    \n      The above copyright notice and this permission notice shall be\n      included in all copies or substantial portions of the Software.\n    \n      THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n      EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n      NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n      BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n      ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n      CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n      SOFTWARE.\n    */\n\n    var InputScanner = __webpack_require__(8).InputScanner;\n\n    var Token = __webpack_require__(3).Token;\n\n    var TokenStream = __webpack_require__(10).TokenStream;\n\n    var WhitespacePattern = __webpack_require__(11).WhitespacePattern;\n\n    var TOKEN = {\n      START: 'TK_START',\n      RAW: 'TK_RAW',\n      EOF: 'TK_EOF'\n    };\n\n    var Tokenizer = function Tokenizer(input_string, options) {\n      this._input = new InputScanner(input_string);\n      this._options = options || {};\n      this.__tokens = null;\n      this._patterns = {};\n      this._patterns.whitespace = new WhitespacePattern(this._input);\n    };\n\n    Tokenizer.prototype.tokenize = function () {\n      this._input.restart();\n\n      this.__tokens = new TokenStream();\n\n      this._reset();\n\n      var current;\n      var previous = new Token(TOKEN.START, '');\n      var open_token = null;\n      var open_stack = [];\n      var comments = new TokenStream();\n\n      while (previous.type !== TOKEN.EOF) {\n        current = this._get_next_token(previous, open_token);\n\n        while (this._is_comment(current)) {\n          comments.add(current);\n          current = this._get_next_token(previous, open_token);\n        }\n\n        if (!comments.isEmpty()) {\n          current.comments_before = comments;\n          comments = new TokenStream();\n        }\n\n        current.parent = open_token;\n\n        if (this._is_opening(current)) {\n          open_stack.push(open_token);\n          open_token = current;\n        } else if (open_token && this._is_closing(current, open_token)) {\n          current.opened = open_token;\n          open_token.closed = current;\n          open_token = open_stack.pop();\n          current.parent = open_token;\n        }\n\n        current.previous = previous;\n        previous.next = current;\n\n        this.__tokens.add(current);\n\n        previous = current;\n      }\n\n      return this.__tokens;\n    };\n\n    Tokenizer.prototype._is_first_token = function () {\n      return this.__tokens.isEmpty();\n    };\n\n    Tokenizer.prototype._reset = function () {};\n\n    Tokenizer.prototype._get_next_token = function (previous_token, open_token) {\n      // jshint unused:false\n      this._readWhitespace();\n\n      var resulting_string = this._input.read(/.+/g);\n\n      if (resulting_string) {\n        return this._create_token(TOKEN.RAW, resulting_string);\n      } else {\n        return this._create_token(TOKEN.EOF, '');\n      }\n    };\n\n    Tokenizer.prototype._is_comment = function (current_token) {\n      // jshint unused:false\n      return false;\n    };\n\n    Tokenizer.prototype._is_opening = function (current_token) {\n      // jshint unused:false\n      return false;\n    };\n\n    Tokenizer.prototype._is_closing = function (current_token, open_token) {\n      // jshint unused:false\n      return false;\n    };\n\n    Tokenizer.prototype._create_token = function (type, text) {\n      var token = new Token(type, text, this._patterns.whitespace.newline_count, this._patterns.whitespace.whitespace_before_token);\n      return token;\n    };\n\n    Tokenizer.prototype._readWhitespace = function () {\n      return this._patterns.whitespace.read();\n    };\n\n    module.exports.Tokenizer = Tokenizer;\n    module.exports.TOKEN = TOKEN;\n    /***/\n  },\n  /* 10 */\n\n  /***/\n  function (module, exports, __webpack_require__) {\n    \"use strict\";\n    /*jshint node:true */\n\n    /*\n    \n      The MIT License (MIT)\n    \n      Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n    \n      Permission is hereby granted, free of charge, to any person\n      obtaining a copy of this software and associated documentation files\n      (the \"Software\"), to deal in the Software without restriction,\n      including without limitation the rights to use, copy, modify, merge,\n      publish, distribute, sublicense, and/or sell copies of the Software,\n      and to permit persons to whom the Software is furnished to do so,\n      subject to the following conditions:\n    \n      The above copyright notice and this permission notice shall be\n      included in all copies or substantial portions of the Software.\n    \n      THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n      EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n      NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n      BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n      ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n      CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n      SOFTWARE.\n    */\n\n    function TokenStream(parent_token) {\n      // private\n      this.__tokens = [];\n      this.__tokens_length = this.__tokens.length;\n      this.__position = 0;\n      this.__parent_token = parent_token;\n    }\n\n    TokenStream.prototype.restart = function () {\n      this.__position = 0;\n    };\n\n    TokenStream.prototype.isEmpty = function () {\n      return this.__tokens_length === 0;\n    };\n\n    TokenStream.prototype.hasNext = function () {\n      return this.__position < this.__tokens_length;\n    };\n\n    TokenStream.prototype.next = function () {\n      var val = null;\n\n      if (this.hasNext()) {\n        val = this.__tokens[this.__position];\n        this.__position += 1;\n      }\n\n      return val;\n    };\n\n    TokenStream.prototype.peek = function (index) {\n      var val = null;\n      index = index || 0;\n      index += this.__position;\n\n      if (index >= 0 && index < this.__tokens_length) {\n        val = this.__tokens[index];\n      }\n\n      return val;\n    };\n\n    TokenStream.prototype.add = function (token) {\n      if (this.__parent_token) {\n        token.parent = this.__parent_token;\n      }\n\n      this.__tokens.push(token);\n\n      this.__tokens_length += 1;\n    };\n\n    module.exports.TokenStream = TokenStream;\n    /***/\n  },\n  /* 11 */\n\n  /***/\n  function (module, exports, __webpack_require__) {\n    \"use strict\";\n    /*jshint node:true */\n\n    /*\n    \n      The MIT License (MIT)\n    \n      Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n    \n      Permission is hereby granted, free of charge, to any person\n      obtaining a copy of this software and associated documentation files\n      (the \"Software\"), to deal in the Software without restriction,\n      including without limitation the rights to use, copy, modify, merge,\n      publish, distribute, sublicense, and/or sell copies of the Software,\n      and to permit persons to whom the Software is furnished to do so,\n      subject to the following conditions:\n    \n      The above copyright notice and this permission notice shall be\n      included in all copies or substantial portions of the Software.\n    \n      THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n      EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n      NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n      BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n      ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n      CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n      SOFTWARE.\n    */\n\n    var Pattern = __webpack_require__(12).Pattern;\n\n    function WhitespacePattern(input_scanner, parent) {\n      Pattern.call(this, input_scanner, parent);\n\n      if (parent) {\n        this._line_regexp = this._input.get_regexp(parent._line_regexp);\n      } else {\n        this.__set_whitespace_patterns('', '');\n      }\n\n      this.newline_count = 0;\n      this.whitespace_before_token = '';\n    }\n\n    WhitespacePattern.prototype = new Pattern();\n\n    WhitespacePattern.prototype.__set_whitespace_patterns = function (whitespace_chars, newline_chars) {\n      whitespace_chars += '\\\\t ';\n      newline_chars += '\\\\n\\\\r';\n      this._match_pattern = this._input.get_regexp('[' + whitespace_chars + newline_chars + ']+', true);\n      this._newline_regexp = this._input.get_regexp('\\\\r\\\\n|[' + newline_chars + ']');\n    };\n\n    WhitespacePattern.prototype.read = function () {\n      this.newline_count = 0;\n      this.whitespace_before_token = '';\n\n      var resulting_string = this._input.read(this._match_pattern);\n\n      if (resulting_string === ' ') {\n        this.whitespace_before_token = ' ';\n      } else if (resulting_string) {\n        var matches = this.__split(this._newline_regexp, resulting_string);\n\n        this.newline_count = matches.length - 1;\n        this.whitespace_before_token = matches[this.newline_count];\n      }\n\n      return resulting_string;\n    };\n\n    WhitespacePattern.prototype.matching = function (whitespace_chars, newline_chars) {\n      var result = this._create();\n\n      result.__set_whitespace_patterns(whitespace_chars, newline_chars);\n\n      result._update();\n\n      return result;\n    };\n\n    WhitespacePattern.prototype._create = function () {\n      return new WhitespacePattern(this._input, this);\n    };\n\n    WhitespacePattern.prototype.__split = function (regexp, input_string) {\n      regexp.lastIndex = 0;\n      var start_index = 0;\n      var result = [];\n      var next_match = regexp.exec(input_string);\n\n      while (next_match) {\n        result.push(input_string.substring(start_index, next_match.index));\n        start_index = next_match.index + next_match[0].length;\n        next_match = regexp.exec(input_string);\n      }\n\n      if (start_index < input_string.length) {\n        result.push(input_string.substring(start_index, input_string.length));\n      } else {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    module.exports.WhitespacePattern = WhitespacePattern;\n    /***/\n  },\n  /* 12 */\n\n  /***/\n  function (module, exports, __webpack_require__) {\n    \"use strict\";\n    /*jshint node:true */\n\n    /*\n    \n      The MIT License (MIT)\n    \n      Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n    \n      Permission is hereby granted, free of charge, to any person\n      obtaining a copy of this software and associated documentation files\n      (the \"Software\"), to deal in the Software without restriction,\n      including without limitation the rights to use, copy, modify, merge,\n      publish, distribute, sublicense, and/or sell copies of the Software,\n      and to permit persons to whom the Software is furnished to do so,\n      subject to the following conditions:\n    \n      The above copyright notice and this permission notice shall be\n      included in all copies or substantial portions of the Software.\n    \n      THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n      EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n      NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n      BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n      ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n      CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n      SOFTWARE.\n    */\n\n    function Pattern(input_scanner, parent) {\n      this._input = input_scanner;\n      this._starting_pattern = null;\n      this._match_pattern = null;\n      this._until_pattern = null;\n      this._until_after = false;\n\n      if (parent) {\n        this._starting_pattern = this._input.get_regexp(parent._starting_pattern, true);\n        this._match_pattern = this._input.get_regexp(parent._match_pattern, true);\n        this._until_pattern = this._input.get_regexp(parent._until_pattern);\n        this._until_after = parent._until_after;\n      }\n    }\n\n    Pattern.prototype.read = function () {\n      var result = this._input.read(this._starting_pattern);\n\n      if (!this._starting_pattern || result) {\n        result += this._input.read(this._match_pattern, this._until_pattern, this._until_after);\n      }\n\n      return result;\n    };\n\n    Pattern.prototype.read_match = function () {\n      return this._input.match(this._match_pattern);\n    };\n\n    Pattern.prototype.until_after = function (pattern) {\n      var result = this._create();\n\n      result._until_after = true;\n      result._until_pattern = this._input.get_regexp(pattern);\n\n      result._update();\n\n      return result;\n    };\n\n    Pattern.prototype.until = function (pattern) {\n      var result = this._create();\n\n      result._until_after = false;\n      result._until_pattern = this._input.get_regexp(pattern);\n\n      result._update();\n\n      return result;\n    };\n\n    Pattern.prototype.starting_with = function (pattern) {\n      var result = this._create();\n\n      result._starting_pattern = this._input.get_regexp(pattern, true);\n\n      result._update();\n\n      return result;\n    };\n\n    Pattern.prototype.matching = function (pattern) {\n      var result = this._create();\n\n      result._match_pattern = this._input.get_regexp(pattern, true);\n\n      result._update();\n\n      return result;\n    };\n\n    Pattern.prototype._create = function () {\n      return new Pattern(this._input, this);\n    };\n\n    Pattern.prototype._update = function () {};\n\n    module.exports.Pattern = Pattern;\n    /***/\n  },\n  /* 13 */\n\n  /***/\n  function (module, exports, __webpack_require__) {\n    \"use strict\";\n    /*jshint node:true */\n\n    /*\n    \n      The MIT License (MIT)\n    \n      Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n    \n      Permission is hereby granted, free of charge, to any person\n      obtaining a copy of this software and associated documentation files\n      (the \"Software\"), to deal in the Software without restriction,\n      including without limitation the rights to use, copy, modify, merge,\n      publish, distribute, sublicense, and/or sell copies of the Software,\n      and to permit persons to whom the Software is furnished to do so,\n      subject to the following conditions:\n    \n      The above copyright notice and this permission notice shall be\n      included in all copies or substantial portions of the Software.\n    \n      THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n      EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n      NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n      BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n      ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n      CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n      SOFTWARE.\n    */\n\n    function Directives(start_block_pattern, end_block_pattern) {\n      start_block_pattern = typeof start_block_pattern === 'string' ? start_block_pattern : start_block_pattern.source;\n      end_block_pattern = typeof end_block_pattern === 'string' ? end_block_pattern : end_block_pattern.source;\n      this.__directives_block_pattern = new RegExp(start_block_pattern + / beautify( \\w+[:]\\w+)+ /.source + end_block_pattern, 'g');\n      this.__directive_pattern = / (\\w+)[:](\\w+)/g;\n      this.__directives_end_ignore_pattern = new RegExp(start_block_pattern + /\\sbeautify\\signore:end\\s/.source + end_block_pattern, 'g');\n    }\n\n    Directives.prototype.get_directives = function (text) {\n      if (!text.match(this.__directives_block_pattern)) {\n        return null;\n      }\n\n      var directives = {};\n      this.__directive_pattern.lastIndex = 0;\n\n      var directive_match = this.__directive_pattern.exec(text);\n\n      while (directive_match) {\n        directives[directive_match[1]] = directive_match[2];\n        directive_match = this.__directive_pattern.exec(text);\n      }\n\n      return directives;\n    };\n\n    Directives.prototype.readIgnored = function (input) {\n      return input.readUntilAfter(this.__directives_end_ignore_pattern);\n    };\n\n    module.exports.Directives = Directives;\n    /***/\n  },\n  /* 14 */\n\n  /***/\n  function (module, exports, __webpack_require__) {\n    \"use strict\";\n    /*jshint node:true */\n\n    /*\n    \n      The MIT License (MIT)\n    \n      Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n    \n      Permission is hereby granted, free of charge, to any person\n      obtaining a copy of this software and associated documentation files\n      (the \"Software\"), to deal in the Software without restriction,\n      including without limitation the rights to use, copy, modify, merge,\n      publish, distribute, sublicense, and/or sell copies of the Software,\n      and to permit persons to whom the Software is furnished to do so,\n      subject to the following conditions:\n    \n      The above copyright notice and this permission notice shall be\n      included in all copies or substantial portions of the Software.\n    \n      THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n      EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n      NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n      BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n      ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n      CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n      SOFTWARE.\n    */\n\n    var Pattern = __webpack_require__(12).Pattern;\n\n    var template_names = {\n      django: false,\n      erb: false,\n      handlebars: false,\n      php: false\n    }; // This lets templates appear anywhere we would do a readUntil\n    // The cost is higher but it is pay to play.\n\n    function TemplatablePattern(input_scanner, parent) {\n      Pattern.call(this, input_scanner, parent);\n      this.__template_pattern = null;\n      this._disabled = Object.assign({}, template_names);\n      this._excluded = Object.assign({}, template_names);\n\n      if (parent) {\n        this.__template_pattern = this._input.get_regexp(parent.__template_pattern);\n        this._excluded = Object.assign(this._excluded, parent._excluded);\n        this._disabled = Object.assign(this._disabled, parent._disabled);\n      }\n\n      var pattern = new Pattern(input_scanner);\n      this.__patterns = {\n        handlebars_comment: pattern.starting_with(/{{!--/).until_after(/--}}/),\n        handlebars_unescaped: pattern.starting_with(/{{{/).until_after(/}}}/),\n        handlebars: pattern.starting_with(/{{/).until_after(/}}/),\n        php: pattern.starting_with(/<\\?(?:[=]|php)/).until_after(/\\?>/),\n        erb: pattern.starting_with(/<%[^%]/).until_after(/[^%]%>/),\n        // django coflicts with handlebars a bit.\n        django: pattern.starting_with(/{%/).until_after(/%}/),\n        django_value: pattern.starting_with(/{{/).until_after(/}}/),\n        django_comment: pattern.starting_with(/{#/).until_after(/#}/)\n      };\n    }\n\n    TemplatablePattern.prototype = new Pattern();\n\n    TemplatablePattern.prototype._create = function () {\n      return new TemplatablePattern(this._input, this);\n    };\n\n    TemplatablePattern.prototype._update = function () {\n      this.__set_templated_pattern();\n    };\n\n    TemplatablePattern.prototype.disable = function (language) {\n      var result = this._create();\n\n      result._disabled[language] = true;\n\n      result._update();\n\n      return result;\n    };\n\n    TemplatablePattern.prototype.read_options = function (options) {\n      var result = this._create();\n\n      for (var language in template_names) {\n        result._disabled[language] = options.templating.indexOf(language) === -1;\n      }\n\n      result._update();\n\n      return result;\n    };\n\n    TemplatablePattern.prototype.exclude = function (language) {\n      var result = this._create();\n\n      result._excluded[language] = true;\n\n      result._update();\n\n      return result;\n    };\n\n    TemplatablePattern.prototype.read = function () {\n      var result = '';\n\n      if (this._match_pattern) {\n        result = this._input.read(this._starting_pattern);\n      } else {\n        result = this._input.read(this._starting_pattern, this.__template_pattern);\n      }\n\n      var next = this._read_template();\n\n      while (next) {\n        if (this._match_pattern) {\n          next += this._input.read(this._match_pattern);\n        } else {\n          next += this._input.readUntil(this.__template_pattern);\n        }\n\n        result += next;\n        next = this._read_template();\n      }\n\n      if (this._until_after) {\n        result += this._input.readUntilAfter(this._until_pattern);\n      }\n\n      return result;\n    };\n\n    TemplatablePattern.prototype.__set_templated_pattern = function () {\n      var items = [];\n\n      if (!this._disabled.php) {\n        items.push(this.__patterns.php._starting_pattern.source);\n      }\n\n      if (!this._disabled.handlebars) {\n        items.push(this.__patterns.handlebars._starting_pattern.source);\n      }\n\n      if (!this._disabled.erb) {\n        items.push(this.__patterns.erb._starting_pattern.source);\n      }\n\n      if (!this._disabled.django) {\n        items.push(this.__patterns.django._starting_pattern.source);\n        items.push(this.__patterns.django_value._starting_pattern.source);\n        items.push(this.__patterns.django_comment._starting_pattern.source);\n      }\n\n      if (this._until_pattern) {\n        items.push(this._until_pattern.source);\n      }\n\n      this.__template_pattern = this._input.get_regexp('(?:' + items.join('|') + ')');\n    };\n\n    TemplatablePattern.prototype._read_template = function () {\n      var resulting_string = '';\n\n      var c = this._input.peek();\n\n      if (c === '<') {\n        var peek1 = this._input.peek(1); //if we're in a comment, do something special\n        // We treat all comments as literals, even more than preformatted tags\n        // we just look for the appropriate close tag\n\n\n        if (!this._disabled.php && !this._excluded.php && peek1 === '?') {\n          resulting_string = resulting_string || this.__patterns.php.read();\n        }\n\n        if (!this._disabled.erb && !this._excluded.erb && peek1 === '%') {\n          resulting_string = resulting_string || this.__patterns.erb.read();\n        }\n      } else if (c === '{') {\n        if (!this._disabled.handlebars && !this._excluded.handlebars) {\n          resulting_string = resulting_string || this.__patterns.handlebars_comment.read();\n          resulting_string = resulting_string || this.__patterns.handlebars_unescaped.read();\n          resulting_string = resulting_string || this.__patterns.handlebars.read();\n        }\n\n        if (!this._disabled.django) {\n          // django coflicts with handlebars a bit.\n          if (!this._excluded.django && !this._excluded.handlebars) {\n            resulting_string = resulting_string || this.__patterns.django_value.read();\n          }\n\n          if (!this._excluded.django) {\n            resulting_string = resulting_string || this.__patterns.django_comment.read();\n            resulting_string = resulting_string || this.__patterns.django.read();\n          }\n        }\n      }\n\n      return resulting_string;\n    };\n\n    module.exports.TemplatablePattern = TemplatablePattern;\n    /***/\n  }\n  /******/\n  ]);\n\n  var js_beautify = legacy_beautify_js;\n  /* Footer */\n\n  if (typeof define === \"function\" && define.amd) {\n    // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n    define([], function () {\n      return {\n        js_beautify: js_beautify\n      };\n    });\n  } else if (typeof exports !== \"undefined\") {\n    // Add support for CommonJS. Just put this file somewhere on your require.paths\n    // and you will be able to `var js_beautify = require(\"beautify\").js_beautify`.\n    exports.js_beautify = js_beautify;\n  } else if (typeof window !== \"undefined\") {\n    // If we're running a web page and don't have either of the above, add our one global\n    window.js_beautify = js_beautify;\n  } else if (typeof global !== \"undefined\") {\n    // If we don't even have window, try global.\n    global.js_beautify = js_beautify;\n  }\n})();","map":{"version":3,"sources":["/home/shivam/blockchain-explorer/client/node_modules/js-beautify/js/lib/beautify.js"],"names":["legacy_beautify_js","modules","installedModules","__webpack_require__","moduleId","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","Beautifier","Options","js_beautify","js_source_text","options","beautifier","beautify","defaultOptions","Output","Token","acorn","Tokenizer","line_starters","positionable_operators","TOKEN","in_array","what","arr","indexOf","ltrim","replace","generateMapFromStrings","list","result","x","length","reserved_word","token","word","type","RESERVED","text","reserved_array","words","special_words","validPositionValues","OPERATOR_POSITION","OPERATOR_POSITION_BEFORE_OR_PRESERVE","before_newline","preserve_newline","MODE","BlockStatement","Statement","ObjectLiteral","ArrayLiteral","ForInitializer","Conditional","Expression","remove_redundant_indentation","output","frame","multiline_frame","remove_indent","start_line_index","split_linebreaks","allLineBreaks","out","idx","push","substring","is_array","is_expression","all_lines_start_with","lines","line","trim","charAt","each_line_matches_indent","indent","len","source_text","_source_text","_output","_tokens","_last_last_text","_flags","_previous_flags","_flag_store","_options","create_flags","flags_base","next_indent_level","indentation_level","just_added_newline","line_indent_level","next_flags","parent","last_token","START_BLOCK","last_word","declaration_statement","declaration_assignment","inline_frame","if_block","else_block","do_block","do_while","import_block","in_case_statement","in_case","case_body","alignment","get_line_number","ternary_depth","_reset","baseIndentString","match","raw","test_output_raw","set_mode","tokenizer","tokenize","disabled","sweet_code","eol","lineBreak","test","current_token","next","handle_token","get_code","preserve_statement_flags","START_EXPR","handle_start_expr","END_EXPR","handle_end_expr","handle_start_block","END_BLOCK","handle_end_block","WORD","handle_word","SEMICOLON","handle_semicolon","STRING","handle_string","EQUALS","handle_equals","OPERATOR","handle_operator","COMMA","handle_comma","BLOCK_COMMENT","handle_block_comment","COMMENT","handle_comment","DOT","handle_dot","EOF","handle_eof","UNKNOWN","handle_unknown","handle_whitespace_and_comments","newlines","keep_whitespace","keep_array_indentation","comments_before","comment_token","print_newline","max_preserve_newlines","preserve_newlines","j","newline_restricted_tokens","allow_wrap_or_preserved_newline","force_linewrap","undefined","shouldPreserveOrForce","operatorLogicApplies","shouldPrintOperatorNewline","operator_position","wrap_line_length","set_wrap_point","force_newline","next_token","peek","restore_mode","add_new_line","print_token_line_indentation","current_line","set_indent","whitespace_before","space_before_token","print_token","add_raw_token","comma_first","previous","previous_line","last","popped","pop","is_empty","add_token","non_breaking_space","previous_token_wrapped","deindent","start_of_object_property","start_of_statement","start","next_mode","space_in_paren","space_before_conditional","peek_back_two","space_after_named_function","peek_back_three","space_after_anon_function","space_in_empty_paren","second_token","empty_braces","empty_anonymous_function","brace_preserve_inline","index","check_token","opened","brace_style","jslint_happy","just_added_blankline","prefix","isGeneratorAsterisk","isUnary","space_before","space_after","in_ternary","isColon","isTernaryColon","isOtherColon","after_newline","directives","preserve","newline","print_block_commment","javadoc","starless","lastIndent","lastIndentLength","slice","break_chained_methods","unindent_chained_methods","OutputLine","__parent","__character_count","__indent_count","__alignment_count","__wrap_point_index","__wrap_point_character_count","__wrap_point_indent_count","__wrap_point_alignment_count","__items","clone_empty","item","has_match","pattern","lastCheckedOutput","get_indent_size","_set_wrap_point","next_line","_should_wrap","_allow_wrap","splice","last_newline_index","lastIndexOf","_remove_indent","indent_size","_remove_wrap_indent","toString","indent_empty_lines","get_indent_string","join","IndentStringCache","__cache","__indent_size","__indent_string","indent_char","indent_with_tabs","Array","indent_level","__base_string","__base_string_length","column","__ensure_cache","__add_column","Math","floor","__indent_cache","_end_with_newline","end_with_newline","__lines","__add_outputline","last_item","printable_token","__add_space_before_token","output_length","eat_newlines","ensure_empty_line_above","starts_with","ends_with","potentialEmptyLine","closed","baseASCIIidentifierStartChars","baseASCIIidentifierChars","nonASCIIidentifierStartChars","nonASCIIidentifierChars","identifierStart","identifierChars","identifier","RegExp","identifierMatch","nonASCIIwhitespace","source","BaseOptions","raw_brace_style","raw_options","braces_on_own_line","brace_style_split","_get_selection_list","bs","_get_boolean","unescape_strings","e4x","_get_selection","merge_child_field","_mergeOpts","_get_characters","_get_number","templating","_get_array","default_value","option_value","concat","split","parseInt","isNaN","selection_list","Error","_is_valid_selection","some","allOptions","childFieldName","finalOpts","_normalizeOpts","convertedOpts","newKey","normalizeOpts","mergeOpts","InputScanner","BaseTokenizer","BASETOKEN","Directives","Pattern","TemplatablePattern","START","RAW","directives_core","number_pattern","digit","dot_pattern","punct","punct_pattern","reserved_words","reserved_word_pattern","in_html_comment","input_string","_patterns","whitespace","matching","pattern_reader","_input","templatable","read_options","__patterns","template","starting_with","number","comment","until","block_comment","until_after","html_comment_start","html_comment_end","include","shebang","xml","single_quote","double_quote","template_text","template_expression","_is_comment","_is_opening","_is_closing","open_token","_get_next_token","previous_token","_readWhitespace","_create_token","_read_non_javascript","_read_string","_read_word","_read_singles","_read_comment","_read_regexp","_read_xml","_read_punctuation","resulting_string","read","_is_first_token","sharp","hasNext","testChar","back","get_directives","ignore","readIgnored","has_char_escapes","_read_string_recursive","unescape_string","_allow_regexp_or_xml","esc","in_char_class","xmlStr","read_match","rootTag","isCurlyRoot","depth","isEndTag","tagName","isSingletonTag","escaped","input_scan","matched","String","fromCharCode","delimiter","allow_unescaped_newlines","start_sub","current_char","regexp_has_sticky","__input","__input_length","__position","restart","val","__match","lastIndex","pattern_match","exec","sticky","starting_pattern","until_pattern","readUntil","match_index","readUntilAfter","get_regexp","match_from","flags","get_literal_regexp","literal_string","peekUntilAfter","lookBack","testVal","toLowerCase","TokenStream","WhitespacePattern","__tokens","current","open_stack","comments","add","isEmpty","newline_count","whitespace_before_token","parent_token","__tokens_length","__parent_token","input_scanner","_line_regexp","__set_whitespace_patterns","whitespace_chars","newline_chars","_match_pattern","_newline_regexp","matches","__split","_create","_update","regexp","start_index","next_match","_starting_pattern","_until_pattern","_until_after","start_block_pattern","end_block_pattern","__directives_block_pattern","__directive_pattern","__directives_end_ignore_pattern","directive_match","input","template_names","django","erb","handlebars","php","__template_pattern","_disabled","assign","_excluded","handlebars_comment","handlebars_unescaped","django_value","django_comment","__set_templated_pattern","disable","language","exclude","_read_template","items","peek1","define","amd","window","global"],"mappings":"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","sourcesContent":["/* AUTO-GENERATED. DO NOT MODIFY. */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n\n JS Beautifier\n---------------\n\n\n  Written by Einar Lielmanis, <einar@beautifier.io>\n      https://beautifier.io/\n\n  Originally converted to javascript by Vital, <vital76@gmail.com>\n  \"End braces on own line\" added by Chris J. Shull, <chrisjshull@gmail.com>\n  Parsing improvements for brace-less statements by Liam Newman <bitwiseman@beautifier.io>\n\n\n  Usage:\n    js_beautify(js_source_text);\n    js_beautify(js_source_text, options);\n\n  The options are:\n    indent_size (default 4)          - indentation size,\n    indent_char (default space)      - character to indent with,\n    preserve_newlines (default true) - whether existing line breaks should be preserved,\n    max_preserve_newlines (default unlimited) - maximum number of line breaks to be preserved in one chunk,\n\n    jslint_happy (default false) - if true, then jslint-stricter mode is enforced.\n\n            jslint_happy        !jslint_happy\n            ---------------------------------\n            function ()         function()\n\n            switch () {         switch() {\n            case 1:               case 1:\n              break;                break;\n            }                   }\n\n    space_after_anon_function (default false) - should the space before an anonymous function's parens be added, \"function()\" vs \"function ()\",\n          NOTE: This option is overriden by jslint_happy (i.e. if jslint_happy is true, space_after_anon_function is true by design)\n\n    brace_style (default \"collapse\") - \"collapse\" | \"expand\" | \"end-expand\" | \"none\" | any of the former + \",preserve-inline\"\n            put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are.\n            preserve-inline will try to preserve inline blocks of curly braces\n\n    space_before_conditional (default true) - should the space before conditional statement be added, \"if(true)\" vs \"if (true)\",\n\n    unescape_strings (default false) - should printable characters in strings encoded in \\xNN notation be unescaped, \"example\" vs \"\\x65\\x78\\x61\\x6d\\x70\\x6c\\x65\"\n\n    wrap_line_length (default unlimited) - lines should wrap at next opportunity after this number of characters.\n          NOTE: This is not a hard limit. Lines will continue until a point where a newline would\n                be preserved if it were present.\n\n    end_with_newline (default false)  - end output with a newline\n\n\n    e.g\n\n    js_beautify(js_source_text, {\n      'indent_size': 1,\n      'indent_char': '\\t'\n    });\n\n*/\n\n(function() {\n\n/* GENERATED_BUILD_OUTPUT */\nvar legacy_beautify_js =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nvar Beautifier = __webpack_require__(1).Beautifier,\n  Options = __webpack_require__(5).Options;\n\nfunction js_beautify(js_source_text, options) {\n  var beautifier = new Beautifier(js_source_text, options);\n  return beautifier.beautify();\n}\n\nmodule.exports = js_beautify;\nmodule.exports.defaultOptions = function() {\n  return new Options();\n};\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nvar Output = __webpack_require__(2).Output;\nvar Token = __webpack_require__(3).Token;\nvar acorn = __webpack_require__(4);\nvar Options = __webpack_require__(5).Options;\nvar Tokenizer = __webpack_require__(7).Tokenizer;\nvar line_starters = __webpack_require__(7).line_starters;\nvar positionable_operators = __webpack_require__(7).positionable_operators;\nvar TOKEN = __webpack_require__(7).TOKEN;\n\n\nfunction in_array(what, arr) {\n  return arr.indexOf(what) !== -1;\n}\n\nfunction ltrim(s) {\n  return s.replace(/^\\s+/g, '');\n}\n\nfunction generateMapFromStrings(list) {\n  var result = {};\n  for (var x = 0; x < list.length; x++) {\n    // make the mapped names underscored instead of dash\n    result[list[x].replace(/-/g, '_')] = list[x];\n  }\n  return result;\n}\n\nfunction reserved_word(token, word) {\n  return token && token.type === TOKEN.RESERVED && token.text === word;\n}\n\nfunction reserved_array(token, words) {\n  return token && token.type === TOKEN.RESERVED && in_array(token.text, words);\n}\n// Unsure of what they mean, but they work. Worth cleaning up in future.\nvar special_words = ['case', 'return', 'do', 'if', 'throw', 'else', 'await', 'break', 'continue', 'async'];\n\nvar validPositionValues = ['before-newline', 'after-newline', 'preserve-newline'];\n\n// Generate map from array\nvar OPERATOR_POSITION = generateMapFromStrings(validPositionValues);\n\nvar OPERATOR_POSITION_BEFORE_OR_PRESERVE = [OPERATOR_POSITION.before_newline, OPERATOR_POSITION.preserve_newline];\n\nvar MODE = {\n  BlockStatement: 'BlockStatement', // 'BLOCK'\n  Statement: 'Statement', // 'STATEMENT'\n  ObjectLiteral: 'ObjectLiteral', // 'OBJECT',\n  ArrayLiteral: 'ArrayLiteral', //'[EXPRESSION]',\n  ForInitializer: 'ForInitializer', //'(FOR-EXPRESSION)',\n  Conditional: 'Conditional', //'(COND-EXPRESSION)',\n  Expression: 'Expression' //'(EXPRESSION)'\n};\n\nfunction remove_redundant_indentation(output, frame) {\n  // This implementation is effective but has some issues:\n  //     - can cause line wrap to happen too soon due to indent removal\n  //           after wrap points are calculated\n  // These issues are minor compared to ugly indentation.\n\n  if (frame.multiline_frame ||\n    frame.mode === MODE.ForInitializer ||\n    frame.mode === MODE.Conditional) {\n    return;\n  }\n\n  // remove one indent from each line inside this section\n  output.remove_indent(frame.start_line_index);\n}\n\n// we could use just string.split, but\n// IE doesn't like returning empty strings\nfunction split_linebreaks(s) {\n  //return s.split(/\\x0d\\x0a|\\x0a/);\n\n  s = s.replace(acorn.allLineBreaks, '\\n');\n  var out = [],\n    idx = s.indexOf(\"\\n\");\n  while (idx !== -1) {\n    out.push(s.substring(0, idx));\n    s = s.substring(idx + 1);\n    idx = s.indexOf(\"\\n\");\n  }\n  if (s.length) {\n    out.push(s);\n  }\n  return out;\n}\n\nfunction is_array(mode) {\n  return mode === MODE.ArrayLiteral;\n}\n\nfunction is_expression(mode) {\n  return in_array(mode, [MODE.Expression, MODE.ForInitializer, MODE.Conditional]);\n}\n\nfunction all_lines_start_with(lines, c) {\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i].trim();\n    if (line.charAt(0) !== c) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction each_line_matches_indent(lines, indent) {\n  var i = 0,\n    len = lines.length,\n    line;\n  for (; i < len; i++) {\n    line = lines[i];\n    // allow empty lines to pass through\n    if (line && line.indexOf(indent) !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\nfunction Beautifier(source_text, options) {\n  options = options || {};\n  this._source_text = source_text || '';\n\n  this._output = null;\n  this._tokens = null;\n  this._last_last_text = null;\n  this._flags = null;\n  this._previous_flags = null;\n\n  this._flag_store = null;\n  this._options = new Options(options);\n}\n\nBeautifier.prototype.create_flags = function(flags_base, mode) {\n  var next_indent_level = 0;\n  if (flags_base) {\n    next_indent_level = flags_base.indentation_level;\n    if (!this._output.just_added_newline() &&\n      flags_base.line_indent_level > next_indent_level) {\n      next_indent_level = flags_base.line_indent_level;\n    }\n  }\n\n  var next_flags = {\n    mode: mode,\n    parent: flags_base,\n    last_token: flags_base ? flags_base.last_token : new Token(TOKEN.START_BLOCK, ''), // last token text\n    last_word: flags_base ? flags_base.last_word : '', // last TOKEN.WORD passed\n    declaration_statement: false,\n    declaration_assignment: false,\n    multiline_frame: false,\n    inline_frame: false,\n    if_block: false,\n    else_block: false,\n    do_block: false,\n    do_while: false,\n    import_block: false,\n    in_case_statement: false, // switch(..){ INSIDE HERE }\n    in_case: false, // we're on the exact line with \"case 0:\"\n    case_body: false, // the indented case-action block\n    indentation_level: next_indent_level,\n    alignment: 0,\n    line_indent_level: flags_base ? flags_base.line_indent_level : next_indent_level,\n    start_line_index: this._output.get_line_number(),\n    ternary_depth: 0\n  };\n  return next_flags;\n};\n\nBeautifier.prototype._reset = function(source_text) {\n  var baseIndentString = source_text.match(/^[\\t ]*/)[0];\n\n  this._last_last_text = ''; // pre-last token text\n  this._output = new Output(this._options, baseIndentString);\n\n  // If testing the ignore directive, start with output disable set to true\n  this._output.raw = this._options.test_output_raw;\n\n\n  // Stack of parsing/formatting states, including MODE.\n  // We tokenize, parse, and output in an almost purely a forward-only stream of token input\n  // and formatted output.  This makes the beautifier less accurate than full parsers\n  // but also far more tolerant of syntax errors.\n  //\n  // For example, the default mode is MODE.BlockStatement. If we see a '{' we push a new frame of type\n  // MODE.BlockStatement on the the stack, even though it could be object literal.  If we later\n  // encounter a \":\", we'll switch to to MODE.ObjectLiteral.  If we then see a \";\",\n  // most full parsers would die, but the beautifier gracefully falls back to\n  // MODE.BlockStatement and continues on.\n  this._flag_store = [];\n  this.set_mode(MODE.BlockStatement);\n  var tokenizer = new Tokenizer(source_text, this._options);\n  this._tokens = tokenizer.tokenize();\n  return source_text;\n};\n\nBeautifier.prototype.beautify = function() {\n  // if disabled, return the input unchanged.\n  if (this._options.disabled) {\n    return this._source_text;\n  }\n\n  var sweet_code;\n  var source_text = this._reset(this._source_text);\n\n  var eol = this._options.eol;\n  if (this._options.eol === 'auto') {\n    eol = '\\n';\n    if (source_text && acorn.lineBreak.test(source_text || '')) {\n      eol = source_text.match(acorn.lineBreak)[0];\n    }\n  }\n\n  var current_token = this._tokens.next();\n  while (current_token) {\n    this.handle_token(current_token);\n\n    this._last_last_text = this._flags.last_token.text;\n    this._flags.last_token = current_token;\n\n    current_token = this._tokens.next();\n  }\n\n  sweet_code = this._output.get_code(eol);\n\n  return sweet_code;\n};\n\nBeautifier.prototype.handle_token = function(current_token, preserve_statement_flags) {\n  if (current_token.type === TOKEN.START_EXPR) {\n    this.handle_start_expr(current_token);\n  } else if (current_token.type === TOKEN.END_EXPR) {\n    this.handle_end_expr(current_token);\n  } else if (current_token.type === TOKEN.START_BLOCK) {\n    this.handle_start_block(current_token);\n  } else if (current_token.type === TOKEN.END_BLOCK) {\n    this.handle_end_block(current_token);\n  } else if (current_token.type === TOKEN.WORD) {\n    this.handle_word(current_token);\n  } else if (current_token.type === TOKEN.RESERVED) {\n    this.handle_word(current_token);\n  } else if (current_token.type === TOKEN.SEMICOLON) {\n    this.handle_semicolon(current_token);\n  } else if (current_token.type === TOKEN.STRING) {\n    this.handle_string(current_token);\n  } else if (current_token.type === TOKEN.EQUALS) {\n    this.handle_equals(current_token);\n  } else if (current_token.type === TOKEN.OPERATOR) {\n    this.handle_operator(current_token);\n  } else if (current_token.type === TOKEN.COMMA) {\n    this.handle_comma(current_token);\n  } else if (current_token.type === TOKEN.BLOCK_COMMENT) {\n    this.handle_block_comment(current_token, preserve_statement_flags);\n  } else if (current_token.type === TOKEN.COMMENT) {\n    this.handle_comment(current_token, preserve_statement_flags);\n  } else if (current_token.type === TOKEN.DOT) {\n    this.handle_dot(current_token);\n  } else if (current_token.type === TOKEN.EOF) {\n    this.handle_eof(current_token);\n  } else if (current_token.type === TOKEN.UNKNOWN) {\n    this.handle_unknown(current_token, preserve_statement_flags);\n  } else {\n    this.handle_unknown(current_token, preserve_statement_flags);\n  }\n};\n\nBeautifier.prototype.handle_whitespace_and_comments = function(current_token, preserve_statement_flags) {\n  var newlines = current_token.newlines;\n  var keep_whitespace = this._options.keep_array_indentation && is_array(this._flags.mode);\n\n  if (current_token.comments_before) {\n    var comment_token = current_token.comments_before.next();\n    while (comment_token) {\n      // The cleanest handling of inline comments is to treat them as though they aren't there.\n      // Just continue formatting and the behavior should be logical.\n      // Also ignore unknown tokens.  Again, this should result in better behavior.\n      this.handle_whitespace_and_comments(comment_token, preserve_statement_flags);\n      this.handle_token(comment_token, preserve_statement_flags);\n      comment_token = current_token.comments_before.next();\n    }\n  }\n\n  if (keep_whitespace) {\n    for (var i = 0; i < newlines; i += 1) {\n      this.print_newline(i > 0, preserve_statement_flags);\n    }\n  } else {\n    if (this._options.max_preserve_newlines && newlines > this._options.max_preserve_newlines) {\n      newlines = this._options.max_preserve_newlines;\n    }\n\n    if (this._options.preserve_newlines) {\n      if (newlines > 1) {\n        this.print_newline(false, preserve_statement_flags);\n        for (var j = 1; j < newlines; j += 1) {\n          this.print_newline(true, preserve_statement_flags);\n        }\n      }\n    }\n  }\n\n};\n\nvar newline_restricted_tokens = ['async', 'break', 'continue', 'return', 'throw', 'yield'];\n\nBeautifier.prototype.allow_wrap_or_preserved_newline = function(current_token, force_linewrap) {\n  force_linewrap = (force_linewrap === undefined) ? false : force_linewrap;\n\n  // Never wrap the first token on a line\n  if (this._output.just_added_newline()) {\n    return;\n  }\n\n  var shouldPreserveOrForce = (this._options.preserve_newlines && current_token.newlines) || force_linewrap;\n  var operatorLogicApplies = in_array(this._flags.last_token.text, positionable_operators) ||\n    in_array(current_token.text, positionable_operators);\n\n  if (operatorLogicApplies) {\n    var shouldPrintOperatorNewline = (\n        in_array(this._flags.last_token.text, positionable_operators) &&\n        in_array(this._options.operator_position, OPERATOR_POSITION_BEFORE_OR_PRESERVE)\n      ) ||\n      in_array(current_token.text, positionable_operators);\n    shouldPreserveOrForce = shouldPreserveOrForce && shouldPrintOperatorNewline;\n  }\n\n  if (shouldPreserveOrForce) {\n    this.print_newline(false, true);\n  } else if (this._options.wrap_line_length) {\n    if (reserved_array(this._flags.last_token, newline_restricted_tokens)) {\n      // These tokens should never have a newline inserted\n      // between them and the following expression.\n      return;\n    }\n    this._output.set_wrap_point();\n  }\n};\n\nBeautifier.prototype.print_newline = function(force_newline, preserve_statement_flags) {\n  if (!preserve_statement_flags) {\n    if (this._flags.last_token.text !== ';' && this._flags.last_token.text !== ',' && this._flags.last_token.text !== '=' && (this._flags.last_token.type !== TOKEN.OPERATOR || this._flags.last_token.text === '--' || this._flags.last_token.text === '++')) {\n      var next_token = this._tokens.peek();\n      while (this._flags.mode === MODE.Statement &&\n        !(this._flags.if_block && reserved_word(next_token, 'else')) &&\n        !this._flags.do_block) {\n        this.restore_mode();\n      }\n    }\n  }\n\n  if (this._output.add_new_line(force_newline)) {\n    this._flags.multiline_frame = true;\n  }\n};\n\nBeautifier.prototype.print_token_line_indentation = function(current_token) {\n  if (this._output.just_added_newline()) {\n    if (this._options.keep_array_indentation &&\n      current_token.newlines &&\n      (current_token.text === '[' || is_array(this._flags.mode))) {\n      this._output.current_line.set_indent(-1);\n      this._output.current_line.push(current_token.whitespace_before);\n      this._output.space_before_token = false;\n    } else if (this._output.set_indent(this._flags.indentation_level, this._flags.alignment)) {\n      this._flags.line_indent_level = this._flags.indentation_level;\n    }\n  }\n};\n\nBeautifier.prototype.print_token = function(current_token) {\n  if (this._output.raw) {\n    this._output.add_raw_token(current_token);\n    return;\n  }\n\n  if (this._options.comma_first && current_token.previous && current_token.previous.type === TOKEN.COMMA &&\n    this._output.just_added_newline()) {\n    if (this._output.previous_line.last() === ',') {\n      var popped = this._output.previous_line.pop();\n      // if the comma was already at the start of the line,\n      // pull back onto that line and reprint the indentation\n      if (this._output.previous_line.is_empty()) {\n        this._output.previous_line.push(popped);\n        this._output.trim(true);\n        this._output.current_line.pop();\n        this._output.trim();\n      }\n\n      // add the comma in front of the next token\n      this.print_token_line_indentation(current_token);\n      this._output.add_token(',');\n      this._output.space_before_token = true;\n    }\n  }\n\n  this.print_token_line_indentation(current_token);\n  this._output.non_breaking_space = true;\n  this._output.add_token(current_token.text);\n  if (this._output.previous_token_wrapped) {\n    this._flags.multiline_frame = true;\n  }\n};\n\nBeautifier.prototype.indent = function() {\n  this._flags.indentation_level += 1;\n  this._output.set_indent(this._flags.indentation_level, this._flags.alignment);\n};\n\nBeautifier.prototype.deindent = function() {\n  if (this._flags.indentation_level > 0 &&\n    ((!this._flags.parent) || this._flags.indentation_level > this._flags.parent.indentation_level)) {\n    this._flags.indentation_level -= 1;\n    this._output.set_indent(this._flags.indentation_level, this._flags.alignment);\n  }\n};\n\nBeautifier.prototype.set_mode = function(mode) {\n  if (this._flags) {\n    this._flag_store.push(this._flags);\n    this._previous_flags = this._flags;\n  } else {\n    this._previous_flags = this.create_flags(null, mode);\n  }\n\n  this._flags = this.create_flags(this._previous_flags, mode);\n  this._output.set_indent(this._flags.indentation_level, this._flags.alignment);\n};\n\n\nBeautifier.prototype.restore_mode = function() {\n  if (this._flag_store.length > 0) {\n    this._previous_flags = this._flags;\n    this._flags = this._flag_store.pop();\n    if (this._previous_flags.mode === MODE.Statement) {\n      remove_redundant_indentation(this._output, this._previous_flags);\n    }\n    this._output.set_indent(this._flags.indentation_level, this._flags.alignment);\n  }\n};\n\nBeautifier.prototype.start_of_object_property = function() {\n  return this._flags.parent.mode === MODE.ObjectLiteral && this._flags.mode === MODE.Statement && (\n    (this._flags.last_token.text === ':' && this._flags.ternary_depth === 0) || (reserved_array(this._flags.last_token, ['get', 'set'])));\n};\n\nBeautifier.prototype.start_of_statement = function(current_token) {\n  var start = false;\n  start = start || reserved_array(this._flags.last_token, ['var', 'let', 'const']) && current_token.type === TOKEN.WORD;\n  start = start || reserved_word(this._flags.last_token, 'do');\n  start = start || (!(this._flags.parent.mode === MODE.ObjectLiteral && this._flags.mode === MODE.Statement)) && reserved_array(this._flags.last_token, newline_restricted_tokens) && !current_token.newlines;\n  start = start || reserved_word(this._flags.last_token, 'else') &&\n    !(reserved_word(current_token, 'if') && !current_token.comments_before);\n  start = start || (this._flags.last_token.type === TOKEN.END_EXPR && (this._previous_flags.mode === MODE.ForInitializer || this._previous_flags.mode === MODE.Conditional));\n  start = start || (this._flags.last_token.type === TOKEN.WORD && this._flags.mode === MODE.BlockStatement &&\n    !this._flags.in_case &&\n    !(current_token.text === '--' || current_token.text === '++') &&\n    this._last_last_text !== 'function' &&\n    current_token.type !== TOKEN.WORD && current_token.type !== TOKEN.RESERVED);\n  start = start || (this._flags.mode === MODE.ObjectLiteral && (\n    (this._flags.last_token.text === ':' && this._flags.ternary_depth === 0) || reserved_array(this._flags.last_token, ['get', 'set'])));\n\n  if (start) {\n    this.set_mode(MODE.Statement);\n    this.indent();\n\n    this.handle_whitespace_and_comments(current_token, true);\n\n    // Issue #276:\n    // If starting a new statement with [if, for, while, do], push to a new line.\n    // if (a) if (b) if(c) d(); else e(); else f();\n    if (!this.start_of_object_property()) {\n      this.allow_wrap_or_preserved_newline(current_token,\n        reserved_array(current_token, ['do', 'for', 'if', 'while']));\n    }\n    return true;\n  }\n  return false;\n};\n\nBeautifier.prototype.handle_start_expr = function(current_token) {\n  // The conditional starts the statement if appropriate.\n  if (!this.start_of_statement(current_token)) {\n    this.handle_whitespace_and_comments(current_token);\n  }\n\n  var next_mode = MODE.Expression;\n  if (current_token.text === '[') {\n\n    if (this._flags.last_token.type === TOKEN.WORD || this._flags.last_token.text === ')') {\n      // this is array index specifier, break immediately\n      // a[x], fn()[x]\n      if (reserved_array(this._flags.last_token, line_starters)) {\n        this._output.space_before_token = true;\n      }\n      this.print_token(current_token);\n      this.set_mode(next_mode);\n      this.indent();\n      if (this._options.space_in_paren) {\n        this._output.space_before_token = true;\n      }\n      return;\n    }\n\n    next_mode = MODE.ArrayLiteral;\n    if (is_array(this._flags.mode)) {\n      if (this._flags.last_token.text === '[' ||\n        (this._flags.last_token.text === ',' && (this._last_last_text === ']' || this._last_last_text === '}'))) {\n        // ], [ goes to new line\n        // }, [ goes to new line\n        if (!this._options.keep_array_indentation) {\n          this.print_newline();\n        }\n      }\n    }\n\n    if (!in_array(this._flags.last_token.type, [TOKEN.START_EXPR, TOKEN.END_EXPR, TOKEN.WORD, TOKEN.OPERATOR])) {\n      this._output.space_before_token = true;\n    }\n  } else {\n    if (this._flags.last_token.type === TOKEN.RESERVED) {\n      if (this._flags.last_token.text === 'for') {\n        this._output.space_before_token = this._options.space_before_conditional;\n        next_mode = MODE.ForInitializer;\n      } else if (in_array(this._flags.last_token.text, ['if', 'while'])) {\n        this._output.space_before_token = this._options.space_before_conditional;\n        next_mode = MODE.Conditional;\n      } else if (in_array(this._flags.last_word, ['await', 'async'])) {\n        // Should be a space between await and an IIFE, or async and an arrow function\n        this._output.space_before_token = true;\n      } else if (this._flags.last_token.text === 'import' && current_token.whitespace_before === '') {\n        this._output.space_before_token = false;\n      } else if (in_array(this._flags.last_token.text, line_starters) || this._flags.last_token.text === 'catch') {\n        this._output.space_before_token = true;\n      }\n    } else if (this._flags.last_token.type === TOKEN.EQUALS || this._flags.last_token.type === TOKEN.OPERATOR) {\n      // Support of this kind of newline preservation.\n      // a = (b &&\n      //     (c || d));\n      if (!this.start_of_object_property()) {\n        this.allow_wrap_or_preserved_newline(current_token);\n      }\n    } else if (this._flags.last_token.type === TOKEN.WORD) {\n      this._output.space_before_token = false;\n\n      // function name() vs function name ()\n      // function* name() vs function* name ()\n      // async name() vs async name ()\n      // In ES6, you can also define the method properties of an object\n      // var obj = {a: function() {}}\n      // It can be abbreviated\n      // var obj = {a() {}}\n      // var obj = { a() {}} vs var obj = { a () {}}\n      // var obj = { * a() {}} vs var obj = { * a () {}}\n      var peek_back_two = this._tokens.peek(-3);\n      if (this._options.space_after_named_function && peek_back_two) {\n        // peek starts at next character so -1 is current token\n        var peek_back_three = this._tokens.peek(-4);\n        if (reserved_array(peek_back_two, ['async', 'function']) ||\n          (peek_back_two.text === '*' && reserved_array(peek_back_three, ['async', 'function']))) {\n          this._output.space_before_token = true;\n        } else if (this._flags.mode === MODE.ObjectLiteral) {\n          if ((peek_back_two.text === '{' || peek_back_two.text === ',') ||\n            (peek_back_two.text === '*' && (peek_back_three.text === '{' || peek_back_three.text === ','))) {\n            this._output.space_before_token = true;\n          }\n        }\n      }\n    } else {\n      // Support preserving wrapped arrow function expressions\n      // a.b('c',\n      //     () => d.e\n      // )\n      this.allow_wrap_or_preserved_newline(current_token);\n    }\n\n    // function() vs function ()\n    // yield*() vs yield* ()\n    // function*() vs function* ()\n    if ((this._flags.last_token.type === TOKEN.RESERVED && (this._flags.last_word === 'function' || this._flags.last_word === 'typeof')) ||\n      (this._flags.last_token.text === '*' &&\n        (in_array(this._last_last_text, ['function', 'yield']) ||\n          (this._flags.mode === MODE.ObjectLiteral && in_array(this._last_last_text, ['{', ',']))))) {\n      this._output.space_before_token = this._options.space_after_anon_function;\n    }\n  }\n\n  if (this._flags.last_token.text === ';' || this._flags.last_token.type === TOKEN.START_BLOCK) {\n    this.print_newline();\n  } else if (this._flags.last_token.type === TOKEN.END_EXPR || this._flags.last_token.type === TOKEN.START_EXPR || this._flags.last_token.type === TOKEN.END_BLOCK || this._flags.last_token.text === '.' || this._flags.last_token.type === TOKEN.COMMA) {\n    // do nothing on (( and )( and ][ and ]( and .(\n    // TODO: Consider whether forcing this is required.  Review failing tests when removed.\n    this.allow_wrap_or_preserved_newline(current_token, current_token.newlines);\n  }\n\n  this.print_token(current_token);\n  this.set_mode(next_mode);\n  if (this._options.space_in_paren) {\n    this._output.space_before_token = true;\n  }\n\n  // In all cases, if we newline while inside an expression it should be indented.\n  this.indent();\n};\n\nBeautifier.prototype.handle_end_expr = function(current_token) {\n  // statements inside expressions are not valid syntax, but...\n  // statements must all be closed when their container closes\n  while (this._flags.mode === MODE.Statement) {\n    this.restore_mode();\n  }\n\n  this.handle_whitespace_and_comments(current_token);\n\n  if (this._flags.multiline_frame) {\n    this.allow_wrap_or_preserved_newline(current_token,\n      current_token.text === ']' && is_array(this._flags.mode) && !this._options.keep_array_indentation);\n  }\n\n  if (this._options.space_in_paren) {\n    if (this._flags.last_token.type === TOKEN.START_EXPR && !this._options.space_in_empty_paren) {\n      // () [] no inner space in empty parens like these, ever, ref #320\n      this._output.trim();\n      this._output.space_before_token = false;\n    } else {\n      this._output.space_before_token = true;\n    }\n  }\n  this.deindent();\n  this.print_token(current_token);\n  this.restore_mode();\n\n  remove_redundant_indentation(this._output, this._previous_flags);\n\n  // do {} while () // no statement required after\n  if (this._flags.do_while && this._previous_flags.mode === MODE.Conditional) {\n    this._previous_flags.mode = MODE.Expression;\n    this._flags.do_block = false;\n    this._flags.do_while = false;\n\n  }\n};\n\nBeautifier.prototype.handle_start_block = function(current_token) {\n  this.handle_whitespace_and_comments(current_token);\n\n  // Check if this is should be treated as a ObjectLiteral\n  var next_token = this._tokens.peek();\n  var second_token = this._tokens.peek(1);\n  if (this._flags.last_word === 'switch' && this._flags.last_token.type === TOKEN.END_EXPR) {\n    this.set_mode(MODE.BlockStatement);\n    this._flags.in_case_statement = true;\n  } else if (this._flags.case_body) {\n    this.set_mode(MODE.BlockStatement);\n  } else if (second_token && (\n      (in_array(second_token.text, [':', ',']) && in_array(next_token.type, [TOKEN.STRING, TOKEN.WORD, TOKEN.RESERVED])) ||\n      (in_array(next_token.text, ['get', 'set', '...']) && in_array(second_token.type, [TOKEN.WORD, TOKEN.RESERVED]))\n    )) {\n    // We don't support TypeScript,but we didn't break it for a very long time.\n    // We'll try to keep not breaking it.\n    if (!in_array(this._last_last_text, ['class', 'interface'])) {\n      this.set_mode(MODE.ObjectLiteral);\n    } else {\n      this.set_mode(MODE.BlockStatement);\n    }\n  } else if (this._flags.last_token.type === TOKEN.OPERATOR && this._flags.last_token.text === '=>') {\n    // arrow function: (param1, paramN) => { statements }\n    this.set_mode(MODE.BlockStatement);\n  } else if (in_array(this._flags.last_token.type, [TOKEN.EQUALS, TOKEN.START_EXPR, TOKEN.COMMA, TOKEN.OPERATOR]) ||\n    reserved_array(this._flags.last_token, ['return', 'throw', 'import', 'default'])\n  ) {\n    // Detecting shorthand function syntax is difficult by scanning forward,\n    //     so check the surrounding context.\n    // If the block is being returned, imported, export default, passed as arg,\n    //     assigned with = or assigned in a nested object, treat as an ObjectLiteral.\n    this.set_mode(MODE.ObjectLiteral);\n  } else {\n    this.set_mode(MODE.BlockStatement);\n  }\n\n  var empty_braces = !next_token.comments_before && next_token.text === '}';\n  var empty_anonymous_function = empty_braces && this._flags.last_word === 'function' &&\n    this._flags.last_token.type === TOKEN.END_EXPR;\n\n  if (this._options.brace_preserve_inline) // check for inline, set inline_frame if so\n  {\n    // search forward for a newline wanted inside this block\n    var index = 0;\n    var check_token = null;\n    this._flags.inline_frame = true;\n    do {\n      index += 1;\n      check_token = this._tokens.peek(index - 1);\n      if (check_token.newlines) {\n        this._flags.inline_frame = false;\n        break;\n      }\n    } while (check_token.type !== TOKEN.EOF &&\n      !(check_token.type === TOKEN.END_BLOCK && check_token.opened === current_token));\n  }\n\n  if ((this._options.brace_style === \"expand\" ||\n      (this._options.brace_style === \"none\" && current_token.newlines)) &&\n    !this._flags.inline_frame) {\n    if (this._flags.last_token.type !== TOKEN.OPERATOR &&\n      (empty_anonymous_function ||\n        this._flags.last_token.type === TOKEN.EQUALS ||\n        (reserved_array(this._flags.last_token, special_words) && this._flags.last_token.text !== 'else'))) {\n      this._output.space_before_token = true;\n    } else {\n      this.print_newline(false, true);\n    }\n  } else { // collapse || inline_frame\n    if (is_array(this._previous_flags.mode) && (this._flags.last_token.type === TOKEN.START_EXPR || this._flags.last_token.type === TOKEN.COMMA)) {\n      if (this._flags.last_token.type === TOKEN.COMMA || this._options.space_in_paren) {\n        this._output.space_before_token = true;\n      }\n\n      if (this._flags.last_token.type === TOKEN.COMMA || (this._flags.last_token.type === TOKEN.START_EXPR && this._flags.inline_frame)) {\n        this.allow_wrap_or_preserved_newline(current_token);\n        this._previous_flags.multiline_frame = this._previous_flags.multiline_frame || this._flags.multiline_frame;\n        this._flags.multiline_frame = false;\n      }\n    }\n    if (this._flags.last_token.type !== TOKEN.OPERATOR && this._flags.last_token.type !== TOKEN.START_EXPR) {\n      if (this._flags.last_token.type === TOKEN.START_BLOCK && !this._flags.inline_frame) {\n        this.print_newline();\n      } else {\n        this._output.space_before_token = true;\n      }\n    }\n  }\n  this.print_token(current_token);\n  this.indent();\n\n  // Except for specific cases, open braces are followed by a new line.\n  if (!empty_braces && !(this._options.brace_preserve_inline && this._flags.inline_frame)) {\n    this.print_newline();\n  }\n};\n\nBeautifier.prototype.handle_end_block = function(current_token) {\n  // statements must all be closed when their container closes\n  this.handle_whitespace_and_comments(current_token);\n\n  while (this._flags.mode === MODE.Statement) {\n    this.restore_mode();\n  }\n\n  var empty_braces = this._flags.last_token.type === TOKEN.START_BLOCK;\n\n  if (this._flags.inline_frame && !empty_braces) { // try inline_frame (only set if this._options.braces-preserve-inline) first\n    this._output.space_before_token = true;\n  } else if (this._options.brace_style === \"expand\") {\n    if (!empty_braces) {\n      this.print_newline();\n    }\n  } else {\n    // skip {}\n    if (!empty_braces) {\n      if (is_array(this._flags.mode) && this._options.keep_array_indentation) {\n        // we REALLY need a newline here, but newliner would skip that\n        this._options.keep_array_indentation = false;\n        this.print_newline();\n        this._options.keep_array_indentation = true;\n\n      } else {\n        this.print_newline();\n      }\n    }\n  }\n  this.restore_mode();\n  this.print_token(current_token);\n};\n\nBeautifier.prototype.handle_word = function(current_token) {\n  if (current_token.type === TOKEN.RESERVED) {\n    if (in_array(current_token.text, ['set', 'get']) && this._flags.mode !== MODE.ObjectLiteral) {\n      current_token.type = TOKEN.WORD;\n    } else if (current_token.text === 'import' && this._tokens.peek().text === '(') {\n      current_token.type = TOKEN.WORD;\n    } else if (in_array(current_token.text, ['as', 'from']) && !this._flags.import_block) {\n      current_token.type = TOKEN.WORD;\n    } else if (this._flags.mode === MODE.ObjectLiteral) {\n      var next_token = this._tokens.peek();\n      if (next_token.text === ':') {\n        current_token.type = TOKEN.WORD;\n      }\n    }\n  }\n\n  if (this.start_of_statement(current_token)) {\n    // The conditional starts the statement if appropriate.\n    if (reserved_array(this._flags.last_token, ['var', 'let', 'const']) && current_token.type === TOKEN.WORD) {\n      this._flags.declaration_statement = true;\n    }\n  } else if (current_token.newlines && !is_expression(this._flags.mode) &&\n    (this._flags.last_token.type !== TOKEN.OPERATOR || (this._flags.last_token.text === '--' || this._flags.last_token.text === '++')) &&\n    this._flags.last_token.type !== TOKEN.EQUALS &&\n    (this._options.preserve_newlines || !reserved_array(this._flags.last_token, ['var', 'let', 'const', 'set', 'get']))) {\n    this.handle_whitespace_and_comments(current_token);\n    this.print_newline();\n  } else {\n    this.handle_whitespace_and_comments(current_token);\n  }\n\n  if (this._flags.do_block && !this._flags.do_while) {\n    if (reserved_word(current_token, 'while')) {\n      // do {} ## while ()\n      this._output.space_before_token = true;\n      this.print_token(current_token);\n      this._output.space_before_token = true;\n      this._flags.do_while = true;\n      return;\n    } else {\n      // do {} should always have while as the next word.\n      // if we don't see the expected while, recover\n      this.print_newline();\n      this._flags.do_block = false;\n    }\n  }\n\n  // if may be followed by else, or not\n  // Bare/inline ifs are tricky\n  // Need to unwind the modes correctly: if (a) if (b) c(); else d(); else e();\n  if (this._flags.if_block) {\n    if (!this._flags.else_block && reserved_word(current_token, 'else')) {\n      this._flags.else_block = true;\n    } else {\n      while (this._flags.mode === MODE.Statement) {\n        this.restore_mode();\n      }\n      this._flags.if_block = false;\n      this._flags.else_block = false;\n    }\n  }\n\n  if (this._flags.in_case_statement && reserved_array(current_token, ['case', 'default'])) {\n    this.print_newline();\n    if (this._flags.last_token.type !== TOKEN.END_BLOCK && (this._flags.case_body || this._options.jslint_happy)) {\n      // switch cases following one another\n      this.deindent();\n    }\n    this._flags.case_body = false;\n\n    this.print_token(current_token);\n    this._flags.in_case = true;\n    return;\n  }\n\n  if (this._flags.last_token.type === TOKEN.COMMA || this._flags.last_token.type === TOKEN.START_EXPR || this._flags.last_token.type === TOKEN.EQUALS || this._flags.last_token.type === TOKEN.OPERATOR) {\n    if (!this.start_of_object_property()) {\n      this.allow_wrap_or_preserved_newline(current_token);\n    }\n  }\n\n  if (reserved_word(current_token, 'function')) {\n    if (in_array(this._flags.last_token.text, ['}', ';']) ||\n      (this._output.just_added_newline() && !(in_array(this._flags.last_token.text, ['(', '[', '{', ':', '=', ',']) || this._flags.last_token.type === TOKEN.OPERATOR))) {\n      // make sure there is a nice clean space of at least one blank line\n      // before a new function definition\n      if (!this._output.just_added_blankline() && !current_token.comments_before) {\n        this.print_newline();\n        this.print_newline(true);\n      }\n    }\n    if (this._flags.last_token.type === TOKEN.RESERVED || this._flags.last_token.type === TOKEN.WORD) {\n      if (reserved_array(this._flags.last_token, ['get', 'set', 'new', 'export']) ||\n        reserved_array(this._flags.last_token, newline_restricted_tokens)) {\n        this._output.space_before_token = true;\n      } else if (reserved_word(this._flags.last_token, 'default') && this._last_last_text === 'export') {\n        this._output.space_before_token = true;\n      } else if (this._flags.last_token.text === 'declare') {\n        // accomodates Typescript declare function formatting\n        this._output.space_before_token = true;\n      } else {\n        this.print_newline();\n      }\n    } else if (this._flags.last_token.type === TOKEN.OPERATOR || this._flags.last_token.text === '=') {\n      // foo = function\n      this._output.space_before_token = true;\n    } else if (!this._flags.multiline_frame && (is_expression(this._flags.mode) || is_array(this._flags.mode))) {\n      // (function\n    } else {\n      this.print_newline();\n    }\n\n    this.print_token(current_token);\n    this._flags.last_word = current_token.text;\n    return;\n  }\n\n  var prefix = 'NONE';\n\n  if (this._flags.last_token.type === TOKEN.END_BLOCK) {\n\n    if (this._previous_flags.inline_frame) {\n      prefix = 'SPACE';\n    } else if (!reserved_array(current_token, ['else', 'catch', 'finally', 'from'])) {\n      prefix = 'NEWLINE';\n    } else {\n      if (this._options.brace_style === \"expand\" ||\n        this._options.brace_style === \"end-expand\" ||\n        (this._options.brace_style === \"none\" && current_token.newlines)) {\n        prefix = 'NEWLINE';\n      } else {\n        prefix = 'SPACE';\n        this._output.space_before_token = true;\n      }\n    }\n  } else if (this._flags.last_token.type === TOKEN.SEMICOLON && this._flags.mode === MODE.BlockStatement) {\n    // TODO: Should this be for STATEMENT as well?\n    prefix = 'NEWLINE';\n  } else if (this._flags.last_token.type === TOKEN.SEMICOLON && is_expression(this._flags.mode)) {\n    prefix = 'SPACE';\n  } else if (this._flags.last_token.type === TOKEN.STRING) {\n    prefix = 'NEWLINE';\n  } else if (this._flags.last_token.type === TOKEN.RESERVED || this._flags.last_token.type === TOKEN.WORD ||\n    (this._flags.last_token.text === '*' &&\n      (in_array(this._last_last_text, ['function', 'yield']) ||\n        (this._flags.mode === MODE.ObjectLiteral && in_array(this._last_last_text, ['{', ',']))))) {\n    prefix = 'SPACE';\n  } else if (this._flags.last_token.type === TOKEN.START_BLOCK) {\n    if (this._flags.inline_frame) {\n      prefix = 'SPACE';\n    } else {\n      prefix = 'NEWLINE';\n    }\n  } else if (this._flags.last_token.type === TOKEN.END_EXPR) {\n    this._output.space_before_token = true;\n    prefix = 'NEWLINE';\n  }\n\n  if (reserved_array(current_token, line_starters) && this._flags.last_token.text !== ')') {\n    if (this._flags.inline_frame || this._flags.last_token.text === 'else' || this._flags.last_token.text === 'export') {\n      prefix = 'SPACE';\n    } else {\n      prefix = 'NEWLINE';\n    }\n\n  }\n\n  if (reserved_array(current_token, ['else', 'catch', 'finally'])) {\n    if ((!(this._flags.last_token.type === TOKEN.END_BLOCK && this._previous_flags.mode === MODE.BlockStatement) ||\n        this._options.brace_style === \"expand\" ||\n        this._options.brace_style === \"end-expand\" ||\n        (this._options.brace_style === \"none\" && current_token.newlines)) &&\n      !this._flags.inline_frame) {\n      this.print_newline();\n    } else {\n      this._output.trim(true);\n      var line = this._output.current_line;\n      // If we trimmed and there's something other than a close block before us\n      // put a newline back in.  Handles '} // comment' scenario.\n      if (line.last() !== '}') {\n        this.print_newline();\n      }\n      this._output.space_before_token = true;\n    }\n  } else if (prefix === 'NEWLINE') {\n    if (reserved_array(this._flags.last_token, special_words)) {\n      // no newline between 'return nnn'\n      this._output.space_before_token = true;\n    } else if (this._flags.last_token.text === 'declare' && reserved_array(current_token, ['var', 'let', 'const'])) {\n      // accomodates Typescript declare formatting\n      this._output.space_before_token = true;\n    } else if (this._flags.last_token.type !== TOKEN.END_EXPR) {\n      if ((this._flags.last_token.type !== TOKEN.START_EXPR || !reserved_array(current_token, ['var', 'let', 'const'])) && this._flags.last_token.text !== ':') {\n        // no need to force newline on 'var': for (var x = 0...)\n        if (reserved_word(current_token, 'if') && reserved_word(current_token.previous, 'else')) {\n          // no newline for } else if {\n          this._output.space_before_token = true;\n        } else {\n          this.print_newline();\n        }\n      }\n    } else if (reserved_array(current_token, line_starters) && this._flags.last_token.text !== ')') {\n      this.print_newline();\n    }\n  } else if (this._flags.multiline_frame && is_array(this._flags.mode) && this._flags.last_token.text === ',' && this._last_last_text === '}') {\n    this.print_newline(); // }, in lists get a newline treatment\n  } else if (prefix === 'SPACE') {\n    this._output.space_before_token = true;\n  }\n  if (current_token.previous && (current_token.previous.type === TOKEN.WORD || current_token.previous.type === TOKEN.RESERVED)) {\n    this._output.space_before_token = true;\n  }\n  this.print_token(current_token);\n  this._flags.last_word = current_token.text;\n\n  if (current_token.type === TOKEN.RESERVED) {\n    if (current_token.text === 'do') {\n      this._flags.do_block = true;\n    } else if (current_token.text === 'if') {\n      this._flags.if_block = true;\n    } else if (current_token.text === 'import') {\n      this._flags.import_block = true;\n    } else if (this._flags.import_block && reserved_word(current_token, 'from')) {\n      this._flags.import_block = false;\n    }\n  }\n};\n\nBeautifier.prototype.handle_semicolon = function(current_token) {\n  if (this.start_of_statement(current_token)) {\n    // The conditional starts the statement if appropriate.\n    // Semicolon can be the start (and end) of a statement\n    this._output.space_before_token = false;\n  } else {\n    this.handle_whitespace_and_comments(current_token);\n  }\n\n  var next_token = this._tokens.peek();\n  while (this._flags.mode === MODE.Statement &&\n    !(this._flags.if_block && reserved_word(next_token, 'else')) &&\n    !this._flags.do_block) {\n    this.restore_mode();\n  }\n\n  // hacky but effective for the moment\n  if (this._flags.import_block) {\n    this._flags.import_block = false;\n  }\n  this.print_token(current_token);\n};\n\nBeautifier.prototype.handle_string = function(current_token) {\n  if (this.start_of_statement(current_token)) {\n    // The conditional starts the statement if appropriate.\n    // One difference - strings want at least a space before\n    this._output.space_before_token = true;\n  } else {\n    this.handle_whitespace_and_comments(current_token);\n    if (this._flags.last_token.type === TOKEN.RESERVED || this._flags.last_token.type === TOKEN.WORD || this._flags.inline_frame) {\n      this._output.space_before_token = true;\n    } else if (this._flags.last_token.type === TOKEN.COMMA || this._flags.last_token.type === TOKEN.START_EXPR || this._flags.last_token.type === TOKEN.EQUALS || this._flags.last_token.type === TOKEN.OPERATOR) {\n      if (!this.start_of_object_property()) {\n        this.allow_wrap_or_preserved_newline(current_token);\n      }\n    } else {\n      this.print_newline();\n    }\n  }\n  this.print_token(current_token);\n};\n\nBeautifier.prototype.handle_equals = function(current_token) {\n  if (this.start_of_statement(current_token)) {\n    // The conditional starts the statement if appropriate.\n  } else {\n    this.handle_whitespace_and_comments(current_token);\n  }\n\n  if (this._flags.declaration_statement) {\n    // just got an '=' in a var-line, different formatting/line-breaking, etc will now be done\n    this._flags.declaration_assignment = true;\n  }\n  this._output.space_before_token = true;\n  this.print_token(current_token);\n  this._output.space_before_token = true;\n};\n\nBeautifier.prototype.handle_comma = function(current_token) {\n  this.handle_whitespace_and_comments(current_token, true);\n\n  this.print_token(current_token);\n  this._output.space_before_token = true;\n  if (this._flags.declaration_statement) {\n    if (is_expression(this._flags.parent.mode)) {\n      // do not break on comma, for(var a = 1, b = 2)\n      this._flags.declaration_assignment = false;\n    }\n\n    if (this._flags.declaration_assignment) {\n      this._flags.declaration_assignment = false;\n      this.print_newline(false, true);\n    } else if (this._options.comma_first) {\n      // for comma-first, we want to allow a newline before the comma\n      // to turn into a newline after the comma, which we will fixup later\n      this.allow_wrap_or_preserved_newline(current_token);\n    }\n  } else if (this._flags.mode === MODE.ObjectLiteral ||\n    (this._flags.mode === MODE.Statement && this._flags.parent.mode === MODE.ObjectLiteral)) {\n    if (this._flags.mode === MODE.Statement) {\n      this.restore_mode();\n    }\n\n    if (!this._flags.inline_frame) {\n      this.print_newline();\n    }\n  } else if (this._options.comma_first) {\n    // EXPR or DO_BLOCK\n    // for comma-first, we want to allow a newline before the comma\n    // to turn into a newline after the comma, which we will fixup later\n    this.allow_wrap_or_preserved_newline(current_token);\n  }\n};\n\nBeautifier.prototype.handle_operator = function(current_token) {\n  var isGeneratorAsterisk = current_token.text === '*' &&\n    (reserved_array(this._flags.last_token, ['function', 'yield']) ||\n      (in_array(this._flags.last_token.type, [TOKEN.START_BLOCK, TOKEN.COMMA, TOKEN.END_BLOCK, TOKEN.SEMICOLON]))\n    );\n  var isUnary = in_array(current_token.text, ['-', '+']) && (\n    in_array(this._flags.last_token.type, [TOKEN.START_BLOCK, TOKEN.START_EXPR, TOKEN.EQUALS, TOKEN.OPERATOR]) ||\n    in_array(this._flags.last_token.text, line_starters) ||\n    this._flags.last_token.text === ','\n  );\n\n  if (this.start_of_statement(current_token)) {\n    // The conditional starts the statement if appropriate.\n  } else {\n    var preserve_statement_flags = !isGeneratorAsterisk;\n    this.handle_whitespace_and_comments(current_token, preserve_statement_flags);\n  }\n\n  if (reserved_array(this._flags.last_token, special_words)) {\n    // \"return\" had a special handling in TK_WORD. Now we need to return the favor\n    this._output.space_before_token = true;\n    this.print_token(current_token);\n    return;\n  }\n\n  // hack for actionscript's import .*;\n  if (current_token.text === '*' && this._flags.last_token.type === TOKEN.DOT) {\n    this.print_token(current_token);\n    return;\n  }\n\n  if (current_token.text === '::') {\n    // no spaces around exotic namespacing syntax operator\n    this.print_token(current_token);\n    return;\n  }\n\n  // Allow line wrapping between operators when operator_position is\n  //   set to before or preserve\n  if (this._flags.last_token.type === TOKEN.OPERATOR && in_array(this._options.operator_position, OPERATOR_POSITION_BEFORE_OR_PRESERVE)) {\n    this.allow_wrap_or_preserved_newline(current_token);\n  }\n\n  if (current_token.text === ':' && this._flags.in_case) {\n    this.print_token(current_token);\n\n    this._flags.in_case = false;\n    this._flags.case_body = true;\n    if (this._tokens.peek().type !== TOKEN.START_BLOCK) {\n      this.indent();\n      this.print_newline();\n    } else {\n      this._output.space_before_token = true;\n    }\n    return;\n  }\n\n  var space_before = true;\n  var space_after = true;\n  var in_ternary = false;\n  if (current_token.text === ':') {\n    if (this._flags.ternary_depth === 0) {\n      // Colon is invalid javascript outside of ternary and object, but do our best to guess what was meant.\n      space_before = false;\n    } else {\n      this._flags.ternary_depth -= 1;\n      in_ternary = true;\n    }\n  } else if (current_token.text === '?') {\n    this._flags.ternary_depth += 1;\n  }\n\n  // let's handle the operator_position option prior to any conflicting logic\n  if (!isUnary && !isGeneratorAsterisk && this._options.preserve_newlines && in_array(current_token.text, positionable_operators)) {\n    var isColon = current_token.text === ':';\n    var isTernaryColon = (isColon && in_ternary);\n    var isOtherColon = (isColon && !in_ternary);\n\n    switch (this._options.operator_position) {\n      case OPERATOR_POSITION.before_newline:\n        // if the current token is : and it's not a ternary statement then we set space_before to false\n        this._output.space_before_token = !isOtherColon;\n\n        this.print_token(current_token);\n\n        if (!isColon || isTernaryColon) {\n          this.allow_wrap_or_preserved_newline(current_token);\n        }\n\n        this._output.space_before_token = true;\n        return;\n\n      case OPERATOR_POSITION.after_newline:\n        // if the current token is anything but colon, or (via deduction) it's a colon and in a ternary statement,\n        //   then print a newline.\n\n        this._output.space_before_token = true;\n\n        if (!isColon || isTernaryColon) {\n          if (this._tokens.peek().newlines) {\n            this.print_newline(false, true);\n          } else {\n            this.allow_wrap_or_preserved_newline(current_token);\n          }\n        } else {\n          this._output.space_before_token = false;\n        }\n\n        this.print_token(current_token);\n\n        this._output.space_before_token = true;\n        return;\n\n      case OPERATOR_POSITION.preserve_newline:\n        if (!isOtherColon) {\n          this.allow_wrap_or_preserved_newline(current_token);\n        }\n\n        // if we just added a newline, or the current token is : and it's not a ternary statement,\n        //   then we set space_before to false\n        space_before = !(this._output.just_added_newline() || isOtherColon);\n\n        this._output.space_before_token = space_before;\n        this.print_token(current_token);\n        this._output.space_before_token = true;\n        return;\n    }\n  }\n\n  if (isGeneratorAsterisk) {\n    this.allow_wrap_or_preserved_newline(current_token);\n    space_before = false;\n    var next_token = this._tokens.peek();\n    space_after = next_token && in_array(next_token.type, [TOKEN.WORD, TOKEN.RESERVED]);\n  } else if (current_token.text === '...') {\n    this.allow_wrap_or_preserved_newline(current_token);\n    space_before = this._flags.last_token.type === TOKEN.START_BLOCK;\n    space_after = false;\n  } else if (in_array(current_token.text, ['--', '++', '!', '~']) || isUnary) {\n    // unary operators (and binary +/- pretending to be unary) special cases\n    if (this._flags.last_token.type === TOKEN.COMMA || this._flags.last_token.type === TOKEN.START_EXPR) {\n      this.allow_wrap_or_preserved_newline(current_token);\n    }\n\n    space_before = false;\n    space_after = false;\n\n    // http://www.ecma-international.org/ecma-262/5.1/#sec-7.9.1\n    // if there is a newline between -- or ++ and anything else we should preserve it.\n    if (current_token.newlines && (current_token.text === '--' || current_token.text === '++')) {\n      this.print_newline(false, true);\n    }\n\n    if (this._flags.last_token.text === ';' && is_expression(this._flags.mode)) {\n      // for (;; ++i)\n      //        ^^^\n      space_before = true;\n    }\n\n    if (this._flags.last_token.type === TOKEN.RESERVED) {\n      space_before = true;\n    } else if (this._flags.last_token.type === TOKEN.END_EXPR) {\n      space_before = !(this._flags.last_token.text === ']' && (current_token.text === '--' || current_token.text === '++'));\n    } else if (this._flags.last_token.type === TOKEN.OPERATOR) {\n      // a++ + ++b;\n      // a - -b\n      space_before = in_array(current_token.text, ['--', '-', '++', '+']) && in_array(this._flags.last_token.text, ['--', '-', '++', '+']);\n      // + and - are not unary when preceeded by -- or ++ operator\n      // a-- + b\n      // a * +b\n      // a - -b\n      if (in_array(current_token.text, ['+', '-']) && in_array(this._flags.last_token.text, ['--', '++'])) {\n        space_after = true;\n      }\n    }\n\n\n    if (((this._flags.mode === MODE.BlockStatement && !this._flags.inline_frame) || this._flags.mode === MODE.Statement) &&\n      (this._flags.last_token.text === '{' || this._flags.last_token.text === ';')) {\n      // { foo; --i }\n      // foo(); --bar;\n      this.print_newline();\n    }\n  }\n\n  this._output.space_before_token = this._output.space_before_token || space_before;\n  this.print_token(current_token);\n  this._output.space_before_token = space_after;\n};\n\nBeautifier.prototype.handle_block_comment = function(current_token, preserve_statement_flags) {\n  if (this._output.raw) {\n    this._output.add_raw_token(current_token);\n    if (current_token.directives && current_token.directives.preserve === 'end') {\n      // If we're testing the raw output behavior, do not allow a directive to turn it off.\n      this._output.raw = this._options.test_output_raw;\n    }\n    return;\n  }\n\n  if (current_token.directives) {\n    this.print_newline(false, preserve_statement_flags);\n    this.print_token(current_token);\n    if (current_token.directives.preserve === 'start') {\n      this._output.raw = true;\n    }\n    this.print_newline(false, true);\n    return;\n  }\n\n  // inline block\n  if (!acorn.newline.test(current_token.text) && !current_token.newlines) {\n    this._output.space_before_token = true;\n    this.print_token(current_token);\n    this._output.space_before_token = true;\n    return;\n  } else {\n    this.print_block_commment(current_token, preserve_statement_flags);\n  }\n};\n\nBeautifier.prototype.print_block_commment = function(current_token, preserve_statement_flags) {\n  var lines = split_linebreaks(current_token.text);\n  var j; // iterator for this case\n  var javadoc = false;\n  var starless = false;\n  var lastIndent = current_token.whitespace_before;\n  var lastIndentLength = lastIndent.length;\n\n  // block comment starts with a new line\n  this.print_newline(false, preserve_statement_flags);\n\n  // first line always indented\n  this.print_token_line_indentation(current_token);\n  this._output.add_token(lines[0]);\n  this.print_newline(false, preserve_statement_flags);\n\n\n  if (lines.length > 1) {\n    lines = lines.slice(1);\n    javadoc = all_lines_start_with(lines, '*');\n    starless = each_line_matches_indent(lines, lastIndent);\n\n    if (javadoc) {\n      this._flags.alignment = 1;\n    }\n\n    for (j = 0; j < lines.length; j++) {\n      if (javadoc) {\n        // javadoc: reformat and re-indent\n        this.print_token_line_indentation(current_token);\n        this._output.add_token(ltrim(lines[j]));\n      } else if (starless && lines[j]) {\n        // starless: re-indent non-empty content, avoiding trim\n        this.print_token_line_indentation(current_token);\n        this._output.add_token(lines[j].substring(lastIndentLength));\n      } else {\n        // normal comments output raw\n        this._output.current_line.set_indent(-1);\n        this._output.add_token(lines[j]);\n      }\n\n      // for comments on their own line or  more than one line, make sure there's a new line after\n      this.print_newline(false, preserve_statement_flags);\n    }\n\n    this._flags.alignment = 0;\n  }\n};\n\n\nBeautifier.prototype.handle_comment = function(current_token, preserve_statement_flags) {\n  if (current_token.newlines) {\n    this.print_newline(false, preserve_statement_flags);\n  } else {\n    this._output.trim(true);\n  }\n\n  this._output.space_before_token = true;\n  this.print_token(current_token);\n  this.print_newline(false, preserve_statement_flags);\n};\n\nBeautifier.prototype.handle_dot = function(current_token) {\n  if (this.start_of_statement(current_token)) {\n    // The conditional starts the statement if appropriate.\n  } else {\n    this.handle_whitespace_and_comments(current_token, true);\n  }\n\n  if (reserved_array(this._flags.last_token, special_words)) {\n    this._output.space_before_token = false;\n  } else {\n    // allow preserved newlines before dots in general\n    // force newlines on dots after close paren when break_chained - for bar().baz()\n    this.allow_wrap_or_preserved_newline(current_token,\n      this._flags.last_token.text === ')' && this._options.break_chained_methods);\n  }\n\n  // Only unindent chained method dot if this dot starts a new line.\n  // Otherwise the automatic extra indentation removal will handle the over indent\n  if (this._options.unindent_chained_methods && this._output.just_added_newline()) {\n    this.deindent();\n  }\n\n  this.print_token(current_token);\n};\n\nBeautifier.prototype.handle_unknown = function(current_token, preserve_statement_flags) {\n  this.print_token(current_token);\n\n  if (current_token.text[current_token.text.length - 1] === '\\n') {\n    this.print_newline(false, preserve_statement_flags);\n  }\n};\n\nBeautifier.prototype.handle_eof = function(current_token) {\n  // Unwind any open statements\n  while (this._flags.mode === MODE.Statement) {\n    this.restore_mode();\n  }\n  this.handle_whitespace_and_comments(current_token);\n};\n\nmodule.exports.Beautifier = Beautifier;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nfunction OutputLine(parent) {\n  this.__parent = parent;\n  this.__character_count = 0;\n  // use indent_count as a marker for this.__lines that have preserved indentation\n  this.__indent_count = -1;\n  this.__alignment_count = 0;\n  this.__wrap_point_index = 0;\n  this.__wrap_point_character_count = 0;\n  this.__wrap_point_indent_count = -1;\n  this.__wrap_point_alignment_count = 0;\n\n  this.__items = [];\n}\n\nOutputLine.prototype.clone_empty = function() {\n  var line = new OutputLine(this.__parent);\n  line.set_indent(this.__indent_count, this.__alignment_count);\n  return line;\n};\n\nOutputLine.prototype.item = function(index) {\n  if (index < 0) {\n    return this.__items[this.__items.length + index];\n  } else {\n    return this.__items[index];\n  }\n};\n\nOutputLine.prototype.has_match = function(pattern) {\n  for (var lastCheckedOutput = this.__items.length - 1; lastCheckedOutput >= 0; lastCheckedOutput--) {\n    if (this.__items[lastCheckedOutput].match(pattern)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nOutputLine.prototype.set_indent = function(indent, alignment) {\n  if (this.is_empty()) {\n    this.__indent_count = indent || 0;\n    this.__alignment_count = alignment || 0;\n    this.__character_count = this.__parent.get_indent_size(this.__indent_count, this.__alignment_count);\n  }\n};\n\nOutputLine.prototype._set_wrap_point = function() {\n  if (this.__parent.wrap_line_length) {\n    this.__wrap_point_index = this.__items.length;\n    this.__wrap_point_character_count = this.__character_count;\n    this.__wrap_point_indent_count = this.__parent.next_line.__indent_count;\n    this.__wrap_point_alignment_count = this.__parent.next_line.__alignment_count;\n  }\n};\n\nOutputLine.prototype._should_wrap = function() {\n  return this.__wrap_point_index &&\n    this.__character_count > this.__parent.wrap_line_length &&\n    this.__wrap_point_character_count > this.__parent.next_line.__character_count;\n};\n\nOutputLine.prototype._allow_wrap = function() {\n  if (this._should_wrap()) {\n    this.__parent.add_new_line();\n    var next = this.__parent.current_line;\n    next.set_indent(this.__wrap_point_indent_count, this.__wrap_point_alignment_count);\n    next.__items = this.__items.slice(this.__wrap_point_index);\n    this.__items = this.__items.slice(0, this.__wrap_point_index);\n\n    next.__character_count += this.__character_count - this.__wrap_point_character_count;\n    this.__character_count = this.__wrap_point_character_count;\n\n    if (next.__items[0] === \" \") {\n      next.__items.splice(0, 1);\n      next.__character_count -= 1;\n    }\n    return true;\n  }\n  return false;\n};\n\nOutputLine.prototype.is_empty = function() {\n  return this.__items.length === 0;\n};\n\nOutputLine.prototype.last = function() {\n  if (!this.is_empty()) {\n    return this.__items[this.__items.length - 1];\n  } else {\n    return null;\n  }\n};\n\nOutputLine.prototype.push = function(item) {\n  this.__items.push(item);\n  var last_newline_index = item.lastIndexOf('\\n');\n  if (last_newline_index !== -1) {\n    this.__character_count = item.length - last_newline_index;\n  } else {\n    this.__character_count += item.length;\n  }\n};\n\nOutputLine.prototype.pop = function() {\n  var item = null;\n  if (!this.is_empty()) {\n    item = this.__items.pop();\n    this.__character_count -= item.length;\n  }\n  return item;\n};\n\n\nOutputLine.prototype._remove_indent = function() {\n  if (this.__indent_count > 0) {\n    this.__indent_count -= 1;\n    this.__character_count -= this.__parent.indent_size;\n  }\n};\n\nOutputLine.prototype._remove_wrap_indent = function() {\n  if (this.__wrap_point_indent_count > 0) {\n    this.__wrap_point_indent_count -= 1;\n  }\n};\nOutputLine.prototype.trim = function() {\n  while (this.last() === ' ') {\n    this.__items.pop();\n    this.__character_count -= 1;\n  }\n};\n\nOutputLine.prototype.toString = function() {\n  var result = '';\n  if (this.is_empty()) {\n    if (this.__parent.indent_empty_lines) {\n      result = this.__parent.get_indent_string(this.__indent_count);\n    }\n  } else {\n    result = this.__parent.get_indent_string(this.__indent_count, this.__alignment_count);\n    result += this.__items.join('');\n  }\n  return result;\n};\n\nfunction IndentStringCache(options, baseIndentString) {\n  this.__cache = [''];\n  this.__indent_size = options.indent_size;\n  this.__indent_string = options.indent_char;\n  if (!options.indent_with_tabs) {\n    this.__indent_string = new Array(options.indent_size + 1).join(options.indent_char);\n  }\n\n  // Set to null to continue support for auto detection of base indent\n  baseIndentString = baseIndentString || '';\n  if (options.indent_level > 0) {\n    baseIndentString = new Array(options.indent_level + 1).join(this.__indent_string);\n  }\n\n  this.__base_string = baseIndentString;\n  this.__base_string_length = baseIndentString.length;\n}\n\nIndentStringCache.prototype.get_indent_size = function(indent, column) {\n  var result = this.__base_string_length;\n  column = column || 0;\n  if (indent < 0) {\n    result = 0;\n  }\n  result += indent * this.__indent_size;\n  result += column;\n  return result;\n};\n\nIndentStringCache.prototype.get_indent_string = function(indent_level, column) {\n  var result = this.__base_string;\n  column = column || 0;\n  if (indent_level < 0) {\n    indent_level = 0;\n    result = '';\n  }\n  column += indent_level * this.__indent_size;\n  this.__ensure_cache(column);\n  result += this.__cache[column];\n  return result;\n};\n\nIndentStringCache.prototype.__ensure_cache = function(column) {\n  while (column >= this.__cache.length) {\n    this.__add_column();\n  }\n};\n\nIndentStringCache.prototype.__add_column = function() {\n  var column = this.__cache.length;\n  var indent = 0;\n  var result = '';\n  if (this.__indent_size && column >= this.__indent_size) {\n    indent = Math.floor(column / this.__indent_size);\n    column -= indent * this.__indent_size;\n    result = new Array(indent + 1).join(this.__indent_string);\n  }\n  if (column) {\n    result += new Array(column + 1).join(' ');\n  }\n\n  this.__cache.push(result);\n};\n\nfunction Output(options, baseIndentString) {\n  this.__indent_cache = new IndentStringCache(options, baseIndentString);\n  this.raw = false;\n  this._end_with_newline = options.end_with_newline;\n  this.indent_size = options.indent_size;\n  this.wrap_line_length = options.wrap_line_length;\n  this.indent_empty_lines = options.indent_empty_lines;\n  this.__lines = [];\n  this.previous_line = null;\n  this.current_line = null;\n  this.next_line = new OutputLine(this);\n  this.space_before_token = false;\n  this.non_breaking_space = false;\n  this.previous_token_wrapped = false;\n  // initialize\n  this.__add_outputline();\n}\n\nOutput.prototype.__add_outputline = function() {\n  this.previous_line = this.current_line;\n  this.current_line = this.next_line.clone_empty();\n  this.__lines.push(this.current_line);\n};\n\nOutput.prototype.get_line_number = function() {\n  return this.__lines.length;\n};\n\nOutput.prototype.get_indent_string = function(indent, column) {\n  return this.__indent_cache.get_indent_string(indent, column);\n};\n\nOutput.prototype.get_indent_size = function(indent, column) {\n  return this.__indent_cache.get_indent_size(indent, column);\n};\n\nOutput.prototype.is_empty = function() {\n  return !this.previous_line && this.current_line.is_empty();\n};\n\nOutput.prototype.add_new_line = function(force_newline) {\n  // never newline at the start of file\n  // otherwise, newline only if we didn't just add one or we're forced\n  if (this.is_empty() ||\n    (!force_newline && this.just_added_newline())) {\n    return false;\n  }\n\n  // if raw output is enabled, don't print additional newlines,\n  // but still return True as though you had\n  if (!this.raw) {\n    this.__add_outputline();\n  }\n  return true;\n};\n\nOutput.prototype.get_code = function(eol) {\n  this.trim(true);\n\n  // handle some edge cases where the last tokens\n  // has text that ends with newline(s)\n  var last_item = this.current_line.pop();\n  if (last_item) {\n    if (last_item[last_item.length - 1] === '\\n') {\n      last_item = last_item.replace(/\\n+$/g, '');\n    }\n    this.current_line.push(last_item);\n  }\n\n  if (this._end_with_newline) {\n    this.__add_outputline();\n  }\n\n  var sweet_code = this.__lines.join('\\n');\n\n  if (eol !== '\\n') {\n    sweet_code = sweet_code.replace(/[\\n]/g, eol);\n  }\n  return sweet_code;\n};\n\nOutput.prototype.set_wrap_point = function() {\n  this.current_line._set_wrap_point();\n};\n\nOutput.prototype.set_indent = function(indent, alignment) {\n  indent = indent || 0;\n  alignment = alignment || 0;\n\n  // Next line stores alignment values\n  this.next_line.set_indent(indent, alignment);\n\n  // Never indent your first output indent at the start of the file\n  if (this.__lines.length > 1) {\n    this.current_line.set_indent(indent, alignment);\n    return true;\n  }\n\n  this.current_line.set_indent();\n  return false;\n};\n\nOutput.prototype.add_raw_token = function(token) {\n  for (var x = 0; x < token.newlines; x++) {\n    this.__add_outputline();\n  }\n  this.current_line.set_indent(-1);\n  this.current_line.push(token.whitespace_before);\n  this.current_line.push(token.text);\n  this.space_before_token = false;\n  this.non_breaking_space = false;\n  this.previous_token_wrapped = false;\n};\n\nOutput.prototype.add_token = function(printable_token) {\n  this.__add_space_before_token();\n  this.current_line.push(printable_token);\n  this.space_before_token = false;\n  this.non_breaking_space = false;\n  this.previous_token_wrapped = this.current_line._allow_wrap();\n};\n\nOutput.prototype.__add_space_before_token = function() {\n  if (this.space_before_token && !this.just_added_newline()) {\n    if (!this.non_breaking_space) {\n      this.set_wrap_point();\n    }\n    this.current_line.push(' ');\n  }\n};\n\nOutput.prototype.remove_indent = function(index) {\n  var output_length = this.__lines.length;\n  while (index < output_length) {\n    this.__lines[index]._remove_indent();\n    index++;\n  }\n  this.current_line._remove_wrap_indent();\n};\n\nOutput.prototype.trim = function(eat_newlines) {\n  eat_newlines = (eat_newlines === undefined) ? false : eat_newlines;\n\n  this.current_line.trim();\n\n  while (eat_newlines && this.__lines.length > 1 &&\n    this.current_line.is_empty()) {\n    this.__lines.pop();\n    this.current_line = this.__lines[this.__lines.length - 1];\n    this.current_line.trim();\n  }\n\n  this.previous_line = this.__lines.length > 1 ?\n    this.__lines[this.__lines.length - 2] : null;\n};\n\nOutput.prototype.just_added_newline = function() {\n  return this.current_line.is_empty();\n};\n\nOutput.prototype.just_added_blankline = function() {\n  return this.is_empty() ||\n    (this.current_line.is_empty() && this.previous_line.is_empty());\n};\n\nOutput.prototype.ensure_empty_line_above = function(starts_with, ends_with) {\n  var index = this.__lines.length - 2;\n  while (index >= 0) {\n    var potentialEmptyLine = this.__lines[index];\n    if (potentialEmptyLine.is_empty()) {\n      break;\n    } else if (potentialEmptyLine.item(0).indexOf(starts_with) !== 0 &&\n      potentialEmptyLine.item(-1) !== ends_with) {\n      this.__lines.splice(index + 1, 0, new OutputLine(this));\n      this.previous_line = this.__lines[this.__lines.length - 2];\n      break;\n    }\n    index--;\n  }\n};\n\nmodule.exports.Output = Output;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nfunction Token(type, text, newlines, whitespace_before) {\n  this.type = type;\n  this.text = text;\n\n  // comments_before are\n  // comments that have a new line before them\n  // and may or may not have a newline after\n  // this is a set of comments before\n  this.comments_before = null; /* inline comment*/\n\n\n  // this.comments_after =  new TokenStream(); // no new line before and newline after\n  this.newlines = newlines || 0;\n  this.whitespace_before = whitespace_before || '';\n  this.parent = null;\n  this.next = null;\n  this.previous = null;\n  this.opened = null;\n  this.closed = null;\n  this.directives = null;\n}\n\n\nmodule.exports.Token = Token;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* jshint node: true, curly: false */\n// Parts of this section of code is taken from acorn.\n//\n// Acorn was written by Marijn Haverbeke and released under an MIT\n// license. The Unicode regexps (for identifiers and whitespace) were\n// taken from [Esprima](http://esprima.org) by Ariya Hidayat.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/marijnh/acorn.git\n\n// ## Character categories\n\n\n\n\n// acorn used char codes to squeeze the last bit of performance out\n// Beautifier is okay without that, so we're using regex\n// permit # (23), $ (36), and @ (64). @ is used in ES7 decorators.\n// 65 through 91 are uppercase letters.\n// permit _ (95).\n// 97 through 123 are lowercase letters.\nvar baseASCIIidentifierStartChars = \"\\\\x23\\\\x24\\\\x40\\\\x41-\\\\x5a\\\\x5f\\\\x61-\\\\x7a\";\n\n// inside an identifier @ is not allowed but 0-9 are.\nvar baseASCIIidentifierChars = \"\\\\x24\\\\x30-\\\\x39\\\\x41-\\\\x5a\\\\x5f\\\\x61-\\\\x7a\";\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\nvar nonASCIIidentifierStartChars = \"\\\\xaa\\\\xb5\\\\xba\\\\xc0-\\\\xd6\\\\xd8-\\\\xf6\\\\xf8-\\\\u02c1\\\\u02c6-\\\\u02d1\\\\u02e0-\\\\u02e4\\\\u02ec\\\\u02ee\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037a-\\\\u037d\\\\u0386\\\\u0388-\\\\u038a\\\\u038c\\\\u038e-\\\\u03a1\\\\u03a3-\\\\u03f5\\\\u03f7-\\\\u0481\\\\u048a-\\\\u0527\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f2\\\\u0620-\\\\u064a\\\\u066e\\\\u066f\\\\u0671-\\\\u06d3\\\\u06d5\\\\u06e5\\\\u06e6\\\\u06ee\\\\u06ef\\\\u06fa-\\\\u06fc\\\\u06ff\\\\u0710\\\\u0712-\\\\u072f\\\\u074d-\\\\u07a5\\\\u07b1\\\\u07ca-\\\\u07ea\\\\u07f4\\\\u07f5\\\\u07fa\\\\u0800-\\\\u0815\\\\u081a\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u08a0\\\\u08a2-\\\\u08ac\\\\u0904-\\\\u0939\\\\u093d\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0977\\\\u0979-\\\\u097f\\\\u0985-\\\\u098c\\\\u098f\\\\u0990\\\\u0993-\\\\u09a8\\\\u09aa-\\\\u09b0\\\\u09b2\\\\u09b6-\\\\u09b9\\\\u09bd\\\\u09ce\\\\u09dc\\\\u09dd\\\\u09df-\\\\u09e1\\\\u09f0\\\\u09f1\\\\u0a05-\\\\u0a0a\\\\u0a0f\\\\u0a10\\\\u0a13-\\\\u0a28\\\\u0a2a-\\\\u0a30\\\\u0a32\\\\u0a33\\\\u0a35\\\\u0a36\\\\u0a38\\\\u0a39\\\\u0a59-\\\\u0a5c\\\\u0a5e\\\\u0a72-\\\\u0a74\\\\u0a85-\\\\u0a8d\\\\u0a8f-\\\\u0a91\\\\u0a93-\\\\u0aa8\\\\u0aaa-\\\\u0ab0\\\\u0ab2\\\\u0ab3\\\\u0ab5-\\\\u0ab9\\\\u0abd\\\\u0ad0\\\\u0ae0\\\\u0ae1\\\\u0b05-\\\\u0b0c\\\\u0b0f\\\\u0b10\\\\u0b13-\\\\u0b28\\\\u0b2a-\\\\u0b30\\\\u0b32\\\\u0b33\\\\u0b35-\\\\u0b39\\\\u0b3d\\\\u0b5c\\\\u0b5d\\\\u0b5f-\\\\u0b61\\\\u0b71\\\\u0b83\\\\u0b85-\\\\u0b8a\\\\u0b8e-\\\\u0b90\\\\u0b92-\\\\u0b95\\\\u0b99\\\\u0b9a\\\\u0b9c\\\\u0b9e\\\\u0b9f\\\\u0ba3\\\\u0ba4\\\\u0ba8-\\\\u0baa\\\\u0bae-\\\\u0bb9\\\\u0bd0\\\\u0c05-\\\\u0c0c\\\\u0c0e-\\\\u0c10\\\\u0c12-\\\\u0c28\\\\u0c2a-\\\\u0c33\\\\u0c35-\\\\u0c39\\\\u0c3d\\\\u0c58\\\\u0c59\\\\u0c60\\\\u0c61\\\\u0c85-\\\\u0c8c\\\\u0c8e-\\\\u0c90\\\\u0c92-\\\\u0ca8\\\\u0caa-\\\\u0cb3\\\\u0cb5-\\\\u0cb9\\\\u0cbd\\\\u0cde\\\\u0ce0\\\\u0ce1\\\\u0cf1\\\\u0cf2\\\\u0d05-\\\\u0d0c\\\\u0d0e-\\\\u0d10\\\\u0d12-\\\\u0d3a\\\\u0d3d\\\\u0d4e\\\\u0d60\\\\u0d61\\\\u0d7a-\\\\u0d7f\\\\u0d85-\\\\u0d96\\\\u0d9a-\\\\u0db1\\\\u0db3-\\\\u0dbb\\\\u0dbd\\\\u0dc0-\\\\u0dc6\\\\u0e01-\\\\u0e30\\\\u0e32\\\\u0e33\\\\u0e40-\\\\u0e46\\\\u0e81\\\\u0e82\\\\u0e84\\\\u0e87\\\\u0e88\\\\u0e8a\\\\u0e8d\\\\u0e94-\\\\u0e97\\\\u0e99-\\\\u0e9f\\\\u0ea1-\\\\u0ea3\\\\u0ea5\\\\u0ea7\\\\u0eaa\\\\u0eab\\\\u0ead-\\\\u0eb0\\\\u0eb2\\\\u0eb3\\\\u0ebd\\\\u0ec0-\\\\u0ec4\\\\u0ec6\\\\u0edc-\\\\u0edf\\\\u0f00\\\\u0f40-\\\\u0f47\\\\u0f49-\\\\u0f6c\\\\u0f88-\\\\u0f8c\\\\u1000-\\\\u102a\\\\u103f\\\\u1050-\\\\u1055\\\\u105a-\\\\u105d\\\\u1061\\\\u1065\\\\u1066\\\\u106e-\\\\u1070\\\\u1075-\\\\u1081\\\\u108e\\\\u10a0-\\\\u10c5\\\\u10c7\\\\u10cd\\\\u10d0-\\\\u10fa\\\\u10fc-\\\\u1248\\\\u124a-\\\\u124d\\\\u1250-\\\\u1256\\\\u1258\\\\u125a-\\\\u125d\\\\u1260-\\\\u1288\\\\u128a-\\\\u128d\\\\u1290-\\\\u12b0\\\\u12b2-\\\\u12b5\\\\u12b8-\\\\u12be\\\\u12c0\\\\u12c2-\\\\u12c5\\\\u12c8-\\\\u12d6\\\\u12d8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135a\\\\u1380-\\\\u138f\\\\u13a0-\\\\u13f4\\\\u1401-\\\\u166c\\\\u166f-\\\\u167f\\\\u1681-\\\\u169a\\\\u16a0-\\\\u16ea\\\\u16ee-\\\\u16f0\\\\u1700-\\\\u170c\\\\u170e-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176c\\\\u176e-\\\\u1770\\\\u1780-\\\\u17b3\\\\u17d7\\\\u17dc\\\\u1820-\\\\u1877\\\\u1880-\\\\u18a8\\\\u18aa\\\\u18b0-\\\\u18f5\\\\u1900-\\\\u191c\\\\u1950-\\\\u196d\\\\u1970-\\\\u1974\\\\u1980-\\\\u19ab\\\\u19c1-\\\\u19c7\\\\u1a00-\\\\u1a16\\\\u1a20-\\\\u1a54\\\\u1aa7\\\\u1b05-\\\\u1b33\\\\u1b45-\\\\u1b4b\\\\u1b83-\\\\u1ba0\\\\u1bae\\\\u1baf\\\\u1bba-\\\\u1be5\\\\u1c00-\\\\u1c23\\\\u1c4d-\\\\u1c4f\\\\u1c5a-\\\\u1c7d\\\\u1ce9-\\\\u1cec\\\\u1cee-\\\\u1cf1\\\\u1cf5\\\\u1cf6\\\\u1d00-\\\\u1dbf\\\\u1e00-\\\\u1f15\\\\u1f18-\\\\u1f1d\\\\u1f20-\\\\u1f45\\\\u1f48-\\\\u1f4d\\\\u1f50-\\\\u1f57\\\\u1f59\\\\u1f5b\\\\u1f5d\\\\u1f5f-\\\\u1f7d\\\\u1f80-\\\\u1fb4\\\\u1fb6-\\\\u1fbc\\\\u1fbe\\\\u1fc2-\\\\u1fc4\\\\u1fc6-\\\\u1fcc\\\\u1fd0-\\\\u1fd3\\\\u1fd6-\\\\u1fdb\\\\u1fe0-\\\\u1fec\\\\u1ff2-\\\\u1ff4\\\\u1ff6-\\\\u1ffc\\\\u2071\\\\u207f\\\\u2090-\\\\u209c\\\\u2102\\\\u2107\\\\u210a-\\\\u2113\\\\u2115\\\\u2119-\\\\u211d\\\\u2124\\\\u2126\\\\u2128\\\\u212a-\\\\u212d\\\\u212f-\\\\u2139\\\\u213c-\\\\u213f\\\\u2145-\\\\u2149\\\\u214e\\\\u2160-\\\\u2188\\\\u2c00-\\\\u2c2e\\\\u2c30-\\\\u2c5e\\\\u2c60-\\\\u2ce4\\\\u2ceb-\\\\u2cee\\\\u2cf2\\\\u2cf3\\\\u2d00-\\\\u2d25\\\\u2d27\\\\u2d2d\\\\u2d30-\\\\u2d67\\\\u2d6f\\\\u2d80-\\\\u2d96\\\\u2da0-\\\\u2da6\\\\u2da8-\\\\u2dae\\\\u2db0-\\\\u2db6\\\\u2db8-\\\\u2dbe\\\\u2dc0-\\\\u2dc6\\\\u2dc8-\\\\u2dce\\\\u2dd0-\\\\u2dd6\\\\u2dd8-\\\\u2dde\\\\u2e2f\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3031-\\\\u3035\\\\u3038-\\\\u303c\\\\u3041-\\\\u3096\\\\u309d-\\\\u309f\\\\u30a1-\\\\u30fa\\\\u30fc-\\\\u30ff\\\\u3105-\\\\u312d\\\\u3131-\\\\u318e\\\\u31a0-\\\\u31ba\\\\u31f0-\\\\u31ff\\\\u3400-\\\\u4db5\\\\u4e00-\\\\u9fcc\\\\ua000-\\\\ua48c\\\\ua4d0-\\\\ua4fd\\\\ua500-\\\\ua60c\\\\ua610-\\\\ua61f\\\\ua62a\\\\ua62b\\\\ua640-\\\\ua66e\\\\ua67f-\\\\ua697\\\\ua6a0-\\\\ua6ef\\\\ua717-\\\\ua71f\\\\ua722-\\\\ua788\\\\ua78b-\\\\ua78e\\\\ua790-\\\\ua793\\\\ua7a0-\\\\ua7aa\\\\ua7f8-\\\\ua801\\\\ua803-\\\\ua805\\\\ua807-\\\\ua80a\\\\ua80c-\\\\ua822\\\\ua840-\\\\ua873\\\\ua882-\\\\ua8b3\\\\ua8f2-\\\\ua8f7\\\\ua8fb\\\\ua90a-\\\\ua925\\\\ua930-\\\\ua946\\\\ua960-\\\\ua97c\\\\ua984-\\\\ua9b2\\\\ua9cf\\\\uaa00-\\\\uaa28\\\\uaa40-\\\\uaa42\\\\uaa44-\\\\uaa4b\\\\uaa60-\\\\uaa76\\\\uaa7a\\\\uaa80-\\\\uaaaf\\\\uaab1\\\\uaab5\\\\uaab6\\\\uaab9-\\\\uaabd\\\\uaac0\\\\uaac2\\\\uaadb-\\\\uaadd\\\\uaae0-\\\\uaaea\\\\uaaf2-\\\\uaaf4\\\\uab01-\\\\uab06\\\\uab09-\\\\uab0e\\\\uab11-\\\\uab16\\\\uab20-\\\\uab26\\\\uab28-\\\\uab2e\\\\uabc0-\\\\uabe2\\\\uac00-\\\\ud7a3\\\\ud7b0-\\\\ud7c6\\\\ud7cb-\\\\ud7fb\\\\uf900-\\\\ufa6d\\\\ufa70-\\\\ufad9\\\\ufb00-\\\\ufb06\\\\ufb13-\\\\ufb17\\\\ufb1d\\\\ufb1f-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40\\\\ufb41\\\\ufb43\\\\ufb44\\\\ufb46-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc\\\\uff21-\\\\uff3a\\\\uff41-\\\\uff5a\\\\uff66-\\\\uffbe\\\\uffc2-\\\\uffc7\\\\uffca-\\\\uffcf\\\\uffd2-\\\\uffd7\\\\uffda-\\\\uffdc\";\nvar nonASCIIidentifierChars = \"\\\\u0300-\\\\u036f\\\\u0483-\\\\u0487\\\\u0591-\\\\u05bd\\\\u05bf\\\\u05c1\\\\u05c2\\\\u05c4\\\\u05c5\\\\u05c7\\\\u0610-\\\\u061a\\\\u0620-\\\\u0649\\\\u0672-\\\\u06d3\\\\u06e7-\\\\u06e8\\\\u06fb-\\\\u06fc\\\\u0730-\\\\u074a\\\\u0800-\\\\u0814\\\\u081b-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082d\\\\u0840-\\\\u0857\\\\u08e4-\\\\u08fe\\\\u0900-\\\\u0903\\\\u093a-\\\\u093c\\\\u093e-\\\\u094f\\\\u0951-\\\\u0957\\\\u0962-\\\\u0963\\\\u0966-\\\\u096f\\\\u0981-\\\\u0983\\\\u09bc\\\\u09be-\\\\u09c4\\\\u09c7\\\\u09c8\\\\u09d7\\\\u09df-\\\\u09e0\\\\u0a01-\\\\u0a03\\\\u0a3c\\\\u0a3e-\\\\u0a42\\\\u0a47\\\\u0a48\\\\u0a4b-\\\\u0a4d\\\\u0a51\\\\u0a66-\\\\u0a71\\\\u0a75\\\\u0a81-\\\\u0a83\\\\u0abc\\\\u0abe-\\\\u0ac5\\\\u0ac7-\\\\u0ac9\\\\u0acb-\\\\u0acd\\\\u0ae2-\\\\u0ae3\\\\u0ae6-\\\\u0aef\\\\u0b01-\\\\u0b03\\\\u0b3c\\\\u0b3e-\\\\u0b44\\\\u0b47\\\\u0b48\\\\u0b4b-\\\\u0b4d\\\\u0b56\\\\u0b57\\\\u0b5f-\\\\u0b60\\\\u0b66-\\\\u0b6f\\\\u0b82\\\\u0bbe-\\\\u0bc2\\\\u0bc6-\\\\u0bc8\\\\u0bca-\\\\u0bcd\\\\u0bd7\\\\u0be6-\\\\u0bef\\\\u0c01-\\\\u0c03\\\\u0c46-\\\\u0c48\\\\u0c4a-\\\\u0c4d\\\\u0c55\\\\u0c56\\\\u0c62-\\\\u0c63\\\\u0c66-\\\\u0c6f\\\\u0c82\\\\u0c83\\\\u0cbc\\\\u0cbe-\\\\u0cc4\\\\u0cc6-\\\\u0cc8\\\\u0cca-\\\\u0ccd\\\\u0cd5\\\\u0cd6\\\\u0ce2-\\\\u0ce3\\\\u0ce6-\\\\u0cef\\\\u0d02\\\\u0d03\\\\u0d46-\\\\u0d48\\\\u0d57\\\\u0d62-\\\\u0d63\\\\u0d66-\\\\u0d6f\\\\u0d82\\\\u0d83\\\\u0dca\\\\u0dcf-\\\\u0dd4\\\\u0dd6\\\\u0dd8-\\\\u0ddf\\\\u0df2\\\\u0df3\\\\u0e34-\\\\u0e3a\\\\u0e40-\\\\u0e45\\\\u0e50-\\\\u0e59\\\\u0eb4-\\\\u0eb9\\\\u0ec8-\\\\u0ecd\\\\u0ed0-\\\\u0ed9\\\\u0f18\\\\u0f19\\\\u0f20-\\\\u0f29\\\\u0f35\\\\u0f37\\\\u0f39\\\\u0f41-\\\\u0f47\\\\u0f71-\\\\u0f84\\\\u0f86-\\\\u0f87\\\\u0f8d-\\\\u0f97\\\\u0f99-\\\\u0fbc\\\\u0fc6\\\\u1000-\\\\u1029\\\\u1040-\\\\u1049\\\\u1067-\\\\u106d\\\\u1071-\\\\u1074\\\\u1082-\\\\u108d\\\\u108f-\\\\u109d\\\\u135d-\\\\u135f\\\\u170e-\\\\u1710\\\\u1720-\\\\u1730\\\\u1740-\\\\u1750\\\\u1772\\\\u1773\\\\u1780-\\\\u17b2\\\\u17dd\\\\u17e0-\\\\u17e9\\\\u180b-\\\\u180d\\\\u1810-\\\\u1819\\\\u1920-\\\\u192b\\\\u1930-\\\\u193b\\\\u1951-\\\\u196d\\\\u19b0-\\\\u19c0\\\\u19c8-\\\\u19c9\\\\u19d0-\\\\u19d9\\\\u1a00-\\\\u1a15\\\\u1a20-\\\\u1a53\\\\u1a60-\\\\u1a7c\\\\u1a7f-\\\\u1a89\\\\u1a90-\\\\u1a99\\\\u1b46-\\\\u1b4b\\\\u1b50-\\\\u1b59\\\\u1b6b-\\\\u1b73\\\\u1bb0-\\\\u1bb9\\\\u1be6-\\\\u1bf3\\\\u1c00-\\\\u1c22\\\\u1c40-\\\\u1c49\\\\u1c5b-\\\\u1c7d\\\\u1cd0-\\\\u1cd2\\\\u1d00-\\\\u1dbe\\\\u1e01-\\\\u1f15\\\\u200c\\\\u200d\\\\u203f\\\\u2040\\\\u2054\\\\u20d0-\\\\u20dc\\\\u20e1\\\\u20e5-\\\\u20f0\\\\u2d81-\\\\u2d96\\\\u2de0-\\\\u2dff\\\\u3021-\\\\u3028\\\\u3099\\\\u309a\\\\ua640-\\\\ua66d\\\\ua674-\\\\ua67d\\\\ua69f\\\\ua6f0-\\\\ua6f1\\\\ua7f8-\\\\ua800\\\\ua806\\\\ua80b\\\\ua823-\\\\ua827\\\\ua880-\\\\ua881\\\\ua8b4-\\\\ua8c4\\\\ua8d0-\\\\ua8d9\\\\ua8f3-\\\\ua8f7\\\\ua900-\\\\ua909\\\\ua926-\\\\ua92d\\\\ua930-\\\\ua945\\\\ua980-\\\\ua983\\\\ua9b3-\\\\ua9c0\\\\uaa00-\\\\uaa27\\\\uaa40-\\\\uaa41\\\\uaa4c-\\\\uaa4d\\\\uaa50-\\\\uaa59\\\\uaa7b\\\\uaae0-\\\\uaae9\\\\uaaf2-\\\\uaaf3\\\\uabc0-\\\\uabe1\\\\uabec\\\\uabed\\\\uabf0-\\\\uabf9\\\\ufb20-\\\\ufb28\\\\ufe00-\\\\ufe0f\\\\ufe20-\\\\ufe26\\\\ufe33\\\\ufe34\\\\ufe4d-\\\\ufe4f\\\\uff10-\\\\uff19\\\\uff3f\";\n//var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n//var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nvar identifierStart = \"(?:\\\\\\\\u[0-9a-fA-F]{4}|[\" + baseASCIIidentifierStartChars + nonASCIIidentifierStartChars + \"])\";\nvar identifierChars = \"(?:\\\\\\\\u[0-9a-fA-F]{4}|[\" + baseASCIIidentifierChars + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"])*\";\n\nexports.identifier = new RegExp(identifierStart + identifierChars, 'g');\nexports.identifierStart = new RegExp(identifierStart);\nexports.identifierMatch = new RegExp(\"(?:\\\\\\\\u[0-9a-fA-F]{4}|[\" + baseASCIIidentifierChars + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"])+\");\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/; // jshint ignore:line\n\n// Whether a single character denotes a newline.\n\nexports.newline = /[\\n\\r\\u2028\\u2029]/;\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\n// in javascript, these two differ\n// in python they are the same, different methods are called on them\nexports.lineBreak = new RegExp('\\r\\n|' + exports.newline.source);\nexports.allLineBreaks = new RegExp(exports.lineBreak.source, 'g');\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nvar BaseOptions = __webpack_require__(6).Options;\n\nvar validPositionValues = ['before-newline', 'after-newline', 'preserve-newline'];\n\nfunction Options(options) {\n  BaseOptions.call(this, options, 'js');\n\n  // compatibility, re\n  var raw_brace_style = this.raw_options.brace_style || null;\n  if (raw_brace_style === \"expand-strict\") { //graceful handling of deprecated option\n    this.raw_options.brace_style = \"expand\";\n  } else if (raw_brace_style === \"collapse-preserve-inline\") { //graceful handling of deprecated option\n    this.raw_options.brace_style = \"collapse,preserve-inline\";\n  } else if (this.raw_options.braces_on_own_line !== undefined) { //graceful handling of deprecated option\n    this.raw_options.brace_style = this.raw_options.braces_on_own_line ? \"expand\" : \"collapse\";\n    // } else if (!raw_brace_style) { //Nothing exists to set it\n    //   raw_brace_style = \"collapse\";\n  }\n\n  //preserve-inline in delimited string will trigger brace_preserve_inline, everything\n  //else is considered a brace_style and the last one only will have an effect\n\n  var brace_style_split = this._get_selection_list('brace_style', ['collapse', 'expand', 'end-expand', 'none', 'preserve-inline']);\n\n  this.brace_preserve_inline = false; //Defaults in case one or other was not specified in meta-option\n  this.brace_style = \"collapse\";\n\n  for (var bs = 0; bs < brace_style_split.length; bs++) {\n    if (brace_style_split[bs] === \"preserve-inline\") {\n      this.brace_preserve_inline = true;\n    } else {\n      this.brace_style = brace_style_split[bs];\n    }\n  }\n\n  this.unindent_chained_methods = this._get_boolean('unindent_chained_methods');\n  this.break_chained_methods = this._get_boolean('break_chained_methods');\n  this.space_in_paren = this._get_boolean('space_in_paren');\n  this.space_in_empty_paren = this._get_boolean('space_in_empty_paren');\n  this.jslint_happy = this._get_boolean('jslint_happy');\n  this.space_after_anon_function = this._get_boolean('space_after_anon_function');\n  this.space_after_named_function = this._get_boolean('space_after_named_function');\n  this.keep_array_indentation = this._get_boolean('keep_array_indentation');\n  this.space_before_conditional = this._get_boolean('space_before_conditional', true);\n  this.unescape_strings = this._get_boolean('unescape_strings');\n  this.e4x = this._get_boolean('e4x');\n  this.comma_first = this._get_boolean('comma_first');\n  this.operator_position = this._get_selection('operator_position', validPositionValues);\n\n  // For testing of beautify preserve:start directive\n  this.test_output_raw = this._get_boolean('test_output_raw');\n\n  // force this._options.space_after_anon_function to true if this._options.jslint_happy\n  if (this.jslint_happy) {\n    this.space_after_anon_function = true;\n  }\n\n}\nOptions.prototype = new BaseOptions();\n\n\n\nmodule.exports.Options = Options;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nfunction Options(options, merge_child_field) {\n  this.raw_options = _mergeOpts(options, merge_child_field);\n\n  // Support passing the source text back with no change\n  this.disabled = this._get_boolean('disabled');\n\n  this.eol = this._get_characters('eol', 'auto');\n  this.end_with_newline = this._get_boolean('end_with_newline');\n  this.indent_size = this._get_number('indent_size', 4);\n  this.indent_char = this._get_characters('indent_char', ' ');\n  this.indent_level = this._get_number('indent_level');\n\n  this.preserve_newlines = this._get_boolean('preserve_newlines', true);\n  this.max_preserve_newlines = this._get_number('max_preserve_newlines', 32786);\n  if (!this.preserve_newlines) {\n    this.max_preserve_newlines = 0;\n  }\n\n  this.indent_with_tabs = this._get_boolean('indent_with_tabs', this.indent_char === '\\t');\n  if (this.indent_with_tabs) {\n    this.indent_char = '\\t';\n\n    // indent_size behavior changed after 1.8.6\n    // It used to be that indent_size would be\n    // set to 1 for indent_with_tabs. That is no longer needed and\n    // actually doesn't make sense - why not use spaces? Further,\n    // that might produce unexpected behavior - tabs being used\n    // for single-column alignment. So, when indent_with_tabs is true\n    // and indent_size is 1, reset indent_size to 4.\n    if (this.indent_size === 1) {\n      this.indent_size = 4;\n    }\n  }\n\n  // Backwards compat with 1.3.x\n  this.wrap_line_length = this._get_number('wrap_line_length', this._get_number('max_char'));\n\n  this.indent_empty_lines = this._get_boolean('indent_empty_lines');\n\n  // valid templating languages ['django', 'erb', 'handlebars', 'php']\n  // For now, 'auto' = all off for javascript, all on for html (and inline javascript).\n  // other values ignored\n  this.templating = this._get_selection_list('templating', ['auto', 'none', 'django', 'erb', 'handlebars', 'php'], ['auto']);\n}\n\nOptions.prototype._get_array = function(name, default_value) {\n  var option_value = this.raw_options[name];\n  var result = default_value || [];\n  if (typeof option_value === 'object') {\n    if (option_value !== null && typeof option_value.concat === 'function') {\n      result = option_value.concat();\n    }\n  } else if (typeof option_value === 'string') {\n    result = option_value.split(/[^a-zA-Z0-9_\\/\\-]+/);\n  }\n  return result;\n};\n\nOptions.prototype._get_boolean = function(name, default_value) {\n  var option_value = this.raw_options[name];\n  var result = option_value === undefined ? !!default_value : !!option_value;\n  return result;\n};\n\nOptions.prototype._get_characters = function(name, default_value) {\n  var option_value = this.raw_options[name];\n  var result = default_value || '';\n  if (typeof option_value === 'string') {\n    result = option_value.replace(/\\\\r/, '\\r').replace(/\\\\n/, '\\n').replace(/\\\\t/, '\\t');\n  }\n  return result;\n};\n\nOptions.prototype._get_number = function(name, default_value) {\n  var option_value = this.raw_options[name];\n  default_value = parseInt(default_value, 10);\n  if (isNaN(default_value)) {\n    default_value = 0;\n  }\n  var result = parseInt(option_value, 10);\n  if (isNaN(result)) {\n    result = default_value;\n  }\n  return result;\n};\n\nOptions.prototype._get_selection = function(name, selection_list, default_value) {\n  var result = this._get_selection_list(name, selection_list, default_value);\n  if (result.length !== 1) {\n    throw new Error(\n      \"Invalid Option Value: The option '\" + name + \"' can only be one of the following values:\\n\" +\n      selection_list + \"\\nYou passed in: '\" + this.raw_options[name] + \"'\");\n  }\n\n  return result[0];\n};\n\n\nOptions.prototype._get_selection_list = function(name, selection_list, default_value) {\n  if (!selection_list || selection_list.length === 0) {\n    throw new Error(\"Selection list cannot be empty.\");\n  }\n\n  default_value = default_value || [selection_list[0]];\n  if (!this._is_valid_selection(default_value, selection_list)) {\n    throw new Error(\"Invalid Default Value!\");\n  }\n\n  var result = this._get_array(name, default_value);\n  if (!this._is_valid_selection(result, selection_list)) {\n    throw new Error(\n      \"Invalid Option Value: The option '\" + name + \"' can contain only the following values:\\n\" +\n      selection_list + \"\\nYou passed in: '\" + this.raw_options[name] + \"'\");\n  }\n\n  return result;\n};\n\nOptions.prototype._is_valid_selection = function(result, selection_list) {\n  return result.length && selection_list.length &&\n    !result.some(function(item) { return selection_list.indexOf(item) === -1; });\n};\n\n\n// merges child options up with the parent options object\n// Example: obj = {a: 1, b: {a: 2}}\n//          mergeOpts(obj, 'b')\n//\n//          Returns: {a: 2}\nfunction _mergeOpts(allOptions, childFieldName) {\n  var finalOpts = {};\n  allOptions = _normalizeOpts(allOptions);\n  var name;\n\n  for (name in allOptions) {\n    if (name !== childFieldName) {\n      finalOpts[name] = allOptions[name];\n    }\n  }\n\n  //merge in the per type settings for the childFieldName\n  if (childFieldName && allOptions[childFieldName]) {\n    for (name in allOptions[childFieldName]) {\n      finalOpts[name] = allOptions[childFieldName][name];\n    }\n  }\n  return finalOpts;\n}\n\nfunction _normalizeOpts(options) {\n  var convertedOpts = {};\n  var key;\n\n  for (key in options) {\n    var newKey = key.replace(/-/g, \"_\");\n    convertedOpts[newKey] = options[key];\n  }\n  return convertedOpts;\n}\n\nmodule.exports.Options = Options;\nmodule.exports.normalizeOpts = _normalizeOpts;\nmodule.exports.mergeOpts = _mergeOpts;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nvar InputScanner = __webpack_require__(8).InputScanner;\nvar BaseTokenizer = __webpack_require__(9).Tokenizer;\nvar BASETOKEN = __webpack_require__(9).TOKEN;\nvar Directives = __webpack_require__(13).Directives;\nvar acorn = __webpack_require__(4);\nvar Pattern = __webpack_require__(12).Pattern;\nvar TemplatablePattern = __webpack_require__(14).TemplatablePattern;\n\n\nfunction in_array(what, arr) {\n  return arr.indexOf(what) !== -1;\n}\n\n\nvar TOKEN = {\n  START_EXPR: 'TK_START_EXPR',\n  END_EXPR: 'TK_END_EXPR',\n  START_BLOCK: 'TK_START_BLOCK',\n  END_BLOCK: 'TK_END_BLOCK',\n  WORD: 'TK_WORD',\n  RESERVED: 'TK_RESERVED',\n  SEMICOLON: 'TK_SEMICOLON',\n  STRING: 'TK_STRING',\n  EQUALS: 'TK_EQUALS',\n  OPERATOR: 'TK_OPERATOR',\n  COMMA: 'TK_COMMA',\n  BLOCK_COMMENT: 'TK_BLOCK_COMMENT',\n  COMMENT: 'TK_COMMENT',\n  DOT: 'TK_DOT',\n  UNKNOWN: 'TK_UNKNOWN',\n  START: BASETOKEN.START,\n  RAW: BASETOKEN.RAW,\n  EOF: BASETOKEN.EOF\n};\n\n\nvar directives_core = new Directives(/\\/\\*/, /\\*\\//);\n\nvar number_pattern = /0[xX][0123456789abcdefABCDEF]*|0[oO][01234567]*|0[bB][01]*|\\d+n|(?:\\.\\d+|\\d+\\.?\\d*)(?:[eE][+-]?\\d+)?/;\n\nvar digit = /[0-9]/;\n\n// Dot \".\" must be distinguished from \"...\" and decimal\nvar dot_pattern = /[^\\d\\.]/;\n\nvar positionable_operators = (\n  \">>> === !== \" +\n  \"<< && >= ** != == <= >> || |> \" +\n  \"< / - + > : & % ? ^ | *\").split(' ');\n\n// IMPORTANT: this must be sorted longest to shortest or tokenizing many not work.\n// Also, you must update possitionable operators separately from punct\nvar punct =\n  \">>>= \" +\n  \"... >>= <<= === >>> !== **= \" +\n  \"=> ^= :: /= << <= == && -= >= >> != -- += ** || ++ %= &= *= |= |> \" +\n  \"= ! ? > < : / ^ - + * & % ~ |\";\n\npunct = punct.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, \"\\\\$&\");\n// ?. but not if followed by a number \npunct = '\\\\?\\\\.(?!\\\\d) ' + punct;\npunct = punct.replace(/ /g, '|');\n\nvar punct_pattern = new RegExp(punct);\n\n// words which should always start on new line.\nvar line_starters = 'continue,try,throw,return,var,let,const,if,switch,case,default,for,while,break,function,import,export'.split(',');\nvar reserved_words = line_starters.concat(['do', 'in', 'of', 'else', 'get', 'set', 'new', 'catch', 'finally', 'typeof', 'yield', 'async', 'await', 'from', 'as']);\nvar reserved_word_pattern = new RegExp('^(?:' + reserved_words.join('|') + ')$');\n\n// var template_pattern = /(?:(?:<\\?php|<\\?=)[\\s\\S]*?\\?>)|(?:<%[\\s\\S]*?%>)/g;\n\nvar in_html_comment;\n\nvar Tokenizer = function(input_string, options) {\n  BaseTokenizer.call(this, input_string, options);\n\n  this._patterns.whitespace = this._patterns.whitespace.matching(\n    /\\u00A0\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff/.source,\n    /\\u2028\\u2029/.source);\n\n  var pattern_reader = new Pattern(this._input);\n  var templatable = new TemplatablePattern(this._input)\n    .read_options(this._options);\n\n  this.__patterns = {\n    template: templatable,\n    identifier: templatable.starting_with(acorn.identifier).matching(acorn.identifierMatch),\n    number: pattern_reader.matching(number_pattern),\n    punct: pattern_reader.matching(punct_pattern),\n    // comment ends just before nearest linefeed or end of file\n    comment: pattern_reader.starting_with(/\\/\\//).until(/[\\n\\r\\u2028\\u2029]/),\n    //  /* ... */ comment ends with nearest */ or end of file\n    block_comment: pattern_reader.starting_with(/\\/\\*/).until_after(/\\*\\//),\n    html_comment_start: pattern_reader.matching(/<!--/),\n    html_comment_end: pattern_reader.matching(/-->/),\n    include: pattern_reader.starting_with(/#include/).until_after(acorn.lineBreak),\n    shebang: pattern_reader.starting_with(/#!/).until_after(acorn.lineBreak),\n    xml: pattern_reader.matching(/[\\s\\S]*?<(\\/?)([-a-zA-Z:0-9_.]+|{[\\s\\S]+?}|!\\[CDATA\\[[\\s\\S]*?\\]\\])(\\s+{[\\s\\S]+?}|\\s+[-a-zA-Z:0-9_.]+|\\s+[-a-zA-Z:0-9_.]+\\s*=\\s*('[^']*'|\"[^\"]*\"|{[\\s\\S]+?}))*\\s*(\\/?)\\s*>/),\n    single_quote: templatable.until(/['\\\\\\n\\r\\u2028\\u2029]/),\n    double_quote: templatable.until(/[\"\\\\\\n\\r\\u2028\\u2029]/),\n    template_text: templatable.until(/[`\\\\$]/),\n    template_expression: templatable.until(/[`}\\\\]/)\n  };\n\n};\nTokenizer.prototype = new BaseTokenizer();\n\nTokenizer.prototype._is_comment = function(current_token) {\n  return current_token.type === TOKEN.COMMENT || current_token.type === TOKEN.BLOCK_COMMENT || current_token.type === TOKEN.UNKNOWN;\n};\n\nTokenizer.prototype._is_opening = function(current_token) {\n  return current_token.type === TOKEN.START_BLOCK || current_token.type === TOKEN.START_EXPR;\n};\n\nTokenizer.prototype._is_closing = function(current_token, open_token) {\n  return (current_token.type === TOKEN.END_BLOCK || current_token.type === TOKEN.END_EXPR) &&\n    (open_token && (\n      (current_token.text === ']' && open_token.text === '[') ||\n      (current_token.text === ')' && open_token.text === '(') ||\n      (current_token.text === '}' && open_token.text === '{')));\n};\n\nTokenizer.prototype._reset = function() {\n  in_html_comment = false;\n};\n\nTokenizer.prototype._get_next_token = function(previous_token, open_token) { // jshint unused:false\n  var token = null;\n  this._readWhitespace();\n  var c = this._input.peek();\n\n  if (c === null) {\n    return this._create_token(TOKEN.EOF, '');\n  }\n\n  token = token || this._read_non_javascript(c);\n  token = token || this._read_string(c);\n  token = token || this._read_word(previous_token);\n  token = token || this._read_singles(c);\n  token = token || this._read_comment(c);\n  token = token || this._read_regexp(c, previous_token);\n  token = token || this._read_xml(c, previous_token);\n  token = token || this._read_punctuation();\n  token = token || this._create_token(TOKEN.UNKNOWN, this._input.next());\n\n  return token;\n};\n\nTokenizer.prototype._read_word = function(previous_token) {\n  var resulting_string;\n  resulting_string = this.__patterns.identifier.read();\n  if (resulting_string !== '') {\n    resulting_string = resulting_string.replace(acorn.allLineBreaks, '\\n');\n    if (!(previous_token.type === TOKEN.DOT ||\n        (previous_token.type === TOKEN.RESERVED && (previous_token.text === 'set' || previous_token.text === 'get'))) &&\n      reserved_word_pattern.test(resulting_string)) {\n      if (resulting_string === 'in' || resulting_string === 'of') { // hack for 'in' and 'of' operators\n        return this._create_token(TOKEN.OPERATOR, resulting_string);\n      }\n      return this._create_token(TOKEN.RESERVED, resulting_string);\n    }\n    return this._create_token(TOKEN.WORD, resulting_string);\n  }\n\n  resulting_string = this.__patterns.number.read();\n  if (resulting_string !== '') {\n    return this._create_token(TOKEN.WORD, resulting_string);\n  }\n};\n\nTokenizer.prototype._read_singles = function(c) {\n  var token = null;\n  if (c === '(' || c === '[') {\n    token = this._create_token(TOKEN.START_EXPR, c);\n  } else if (c === ')' || c === ']') {\n    token = this._create_token(TOKEN.END_EXPR, c);\n  } else if (c === '{') {\n    token = this._create_token(TOKEN.START_BLOCK, c);\n  } else if (c === '}') {\n    token = this._create_token(TOKEN.END_BLOCK, c);\n  } else if (c === ';') {\n    token = this._create_token(TOKEN.SEMICOLON, c);\n  } else if (c === '.' && dot_pattern.test(this._input.peek(1))) {\n    token = this._create_token(TOKEN.DOT, c);\n  } else if (c === ',') {\n    token = this._create_token(TOKEN.COMMA, c);\n  }\n\n  if (token) {\n    this._input.next();\n  }\n  return token;\n};\n\nTokenizer.prototype._read_punctuation = function() {\n  var resulting_string = this.__patterns.punct.read();\n\n  if (resulting_string !== '') {\n    if (resulting_string === '=') {\n      return this._create_token(TOKEN.EQUALS, resulting_string);\n    } else if (resulting_string === '?.') {\n      return this._create_token(TOKEN.DOT, resulting_string);\n    } else {\n      return this._create_token(TOKEN.OPERATOR, resulting_string);\n    }\n  }\n};\n\nTokenizer.prototype._read_non_javascript = function(c) {\n  var resulting_string = '';\n\n  if (c === '#') {\n    if (this._is_first_token()) {\n      resulting_string = this.__patterns.shebang.read();\n\n      if (resulting_string) {\n        return this._create_token(TOKEN.UNKNOWN, resulting_string.trim() + '\\n');\n      }\n    }\n\n    // handles extendscript #includes\n    resulting_string = this.__patterns.include.read();\n\n    if (resulting_string) {\n      return this._create_token(TOKEN.UNKNOWN, resulting_string.trim() + '\\n');\n    }\n\n    c = this._input.next();\n\n    // Spidermonkey-specific sharp variables for circular references. Considered obsolete.\n    var sharp = '#';\n    if (this._input.hasNext() && this._input.testChar(digit)) {\n      do {\n        c = this._input.next();\n        sharp += c;\n      } while (this._input.hasNext() && c !== '#' && c !== '=');\n      if (c === '#') {\n        //\n      } else if (this._input.peek() === '[' && this._input.peek(1) === ']') {\n        sharp += '[]';\n        this._input.next();\n        this._input.next();\n      } else if (this._input.peek() === '{' && this._input.peek(1) === '}') {\n        sharp += '{}';\n        this._input.next();\n        this._input.next();\n      }\n      return this._create_token(TOKEN.WORD, sharp);\n    }\n\n    this._input.back();\n\n  } else if (c === '<' && this._is_first_token()) {\n    resulting_string = this.__patterns.html_comment_start.read();\n    if (resulting_string) {\n      while (this._input.hasNext() && !this._input.testChar(acorn.newline)) {\n        resulting_string += this._input.next();\n      }\n      in_html_comment = true;\n      return this._create_token(TOKEN.COMMENT, resulting_string);\n    }\n  } else if (in_html_comment && c === '-') {\n    resulting_string = this.__patterns.html_comment_end.read();\n    if (resulting_string) {\n      in_html_comment = false;\n      return this._create_token(TOKEN.COMMENT, resulting_string);\n    }\n  }\n\n  return null;\n};\n\nTokenizer.prototype._read_comment = function(c) {\n  var token = null;\n  if (c === '/') {\n    var comment = '';\n    if (this._input.peek(1) === '*') {\n      // peek for comment /* ... */\n      comment = this.__patterns.block_comment.read();\n      var directives = directives_core.get_directives(comment);\n      if (directives && directives.ignore === 'start') {\n        comment += directives_core.readIgnored(this._input);\n      }\n      comment = comment.replace(acorn.allLineBreaks, '\\n');\n      token = this._create_token(TOKEN.BLOCK_COMMENT, comment);\n      token.directives = directives;\n    } else if (this._input.peek(1) === '/') {\n      // peek for comment // ...\n      comment = this.__patterns.comment.read();\n      token = this._create_token(TOKEN.COMMENT, comment);\n    }\n  }\n  return token;\n};\n\nTokenizer.prototype._read_string = function(c) {\n  if (c === '`' || c === \"'\" || c === '\"') {\n    var resulting_string = this._input.next();\n    this.has_char_escapes = false;\n\n    if (c === '`') {\n      resulting_string += this._read_string_recursive('`', true, '${');\n    } else {\n      resulting_string += this._read_string_recursive(c);\n    }\n\n    if (this.has_char_escapes && this._options.unescape_strings) {\n      resulting_string = unescape_string(resulting_string);\n    }\n\n    if (this._input.peek() === c) {\n      resulting_string += this._input.next();\n    }\n\n    resulting_string = resulting_string.replace(acorn.allLineBreaks, '\\n');\n\n    return this._create_token(TOKEN.STRING, resulting_string);\n  }\n\n  return null;\n};\n\nTokenizer.prototype._allow_regexp_or_xml = function(previous_token) {\n  // regex and xml can only appear in specific locations during parsing\n  return (previous_token.type === TOKEN.RESERVED && in_array(previous_token.text, ['return', 'case', 'throw', 'else', 'do', 'typeof', 'yield'])) ||\n    (previous_token.type === TOKEN.END_EXPR && previous_token.text === ')' &&\n      previous_token.opened.previous.type === TOKEN.RESERVED && in_array(previous_token.opened.previous.text, ['if', 'while', 'for'])) ||\n    (in_array(previous_token.type, [TOKEN.COMMENT, TOKEN.START_EXPR, TOKEN.START_BLOCK, TOKEN.START,\n      TOKEN.END_BLOCK, TOKEN.OPERATOR, TOKEN.EQUALS, TOKEN.EOF, TOKEN.SEMICOLON, TOKEN.COMMA\n    ]));\n};\n\nTokenizer.prototype._read_regexp = function(c, previous_token) {\n\n  if (c === '/' && this._allow_regexp_or_xml(previous_token)) {\n    // handle regexp\n    //\n    var resulting_string = this._input.next();\n    var esc = false;\n\n    var in_char_class = false;\n    while (this._input.hasNext() &&\n      ((esc || in_char_class || this._input.peek() !== c) &&\n        !this._input.testChar(acorn.newline))) {\n      resulting_string += this._input.peek();\n      if (!esc) {\n        esc = this._input.peek() === '\\\\';\n        if (this._input.peek() === '[') {\n          in_char_class = true;\n        } else if (this._input.peek() === ']') {\n          in_char_class = false;\n        }\n      } else {\n        esc = false;\n      }\n      this._input.next();\n    }\n\n    if (this._input.peek() === c) {\n      resulting_string += this._input.next();\n\n      // regexps may have modifiers /regexp/MOD , so fetch those, too\n      // Only [gim] are valid, but if the user puts in garbage, do what we can to take it.\n      resulting_string += this._input.read(acorn.identifier);\n    }\n    return this._create_token(TOKEN.STRING, resulting_string);\n  }\n  return null;\n};\n\nTokenizer.prototype._read_xml = function(c, previous_token) {\n\n  if (this._options.e4x && c === \"<\" && this._allow_regexp_or_xml(previous_token)) {\n    var xmlStr = '';\n    var match = this.__patterns.xml.read_match();\n    // handle e4x xml literals\n    //\n    if (match) {\n      // Trim root tag to attempt to\n      var rootTag = match[2].replace(/^{\\s+/, '{').replace(/\\s+}$/, '}');\n      var isCurlyRoot = rootTag.indexOf('{') === 0;\n      var depth = 0;\n      while (match) {\n        var isEndTag = !!match[1];\n        var tagName = match[2];\n        var isSingletonTag = (!!match[match.length - 1]) || (tagName.slice(0, 8) === \"![CDATA[\");\n        if (!isSingletonTag &&\n          (tagName === rootTag || (isCurlyRoot && tagName.replace(/^{\\s+/, '{').replace(/\\s+}$/, '}')))) {\n          if (isEndTag) {\n            --depth;\n          } else {\n            ++depth;\n          }\n        }\n        xmlStr += match[0];\n        if (depth <= 0) {\n          break;\n        }\n        match = this.__patterns.xml.read_match();\n      }\n      // if we didn't close correctly, keep unformatted.\n      if (!match) {\n        xmlStr += this._input.match(/[\\s\\S]*/g)[0];\n      }\n      xmlStr = xmlStr.replace(acorn.allLineBreaks, '\\n');\n      return this._create_token(TOKEN.STRING, xmlStr);\n    }\n  }\n\n  return null;\n};\n\nfunction unescape_string(s) {\n  // You think that a regex would work for this\n  // return s.replace(/\\\\x([0-9a-f]{2})/gi, function(match, val) {\n  //         return String.fromCharCode(parseInt(val, 16));\n  //     })\n  // However, dealing with '\\xff', '\\\\xff', '\\\\\\xff' makes this more fun.\n  var out = '',\n    escaped = 0;\n\n  var input_scan = new InputScanner(s);\n  var matched = null;\n\n  while (input_scan.hasNext()) {\n    // Keep any whitespace, non-slash characters\n    // also keep slash pairs.\n    matched = input_scan.match(/([\\s]|[^\\\\]|\\\\\\\\)+/g);\n\n    if (matched) {\n      out += matched[0];\n    }\n\n    if (input_scan.peek() === '\\\\') {\n      input_scan.next();\n      if (input_scan.peek() === 'x') {\n        matched = input_scan.match(/x([0-9A-Fa-f]{2})/g);\n      } else if (input_scan.peek() === 'u') {\n        matched = input_scan.match(/u([0-9A-Fa-f]{4})/g);\n      } else {\n        out += '\\\\';\n        if (input_scan.hasNext()) {\n          out += input_scan.next();\n        }\n        continue;\n      }\n\n      // If there's some error decoding, return the original string\n      if (!matched) {\n        return s;\n      }\n\n      escaped = parseInt(matched[1], 16);\n\n      if (escaped > 0x7e && escaped <= 0xff && matched[0].indexOf('x') === 0) {\n        // we bail out on \\x7f..\\xff,\n        // leaving whole string escaped,\n        // as it's probably completely binary\n        return s;\n      } else if (escaped >= 0x00 && escaped < 0x20) {\n        // leave 0x00...0x1f escaped\n        out += '\\\\' + matched[0];\n        continue;\n      } else if (escaped === 0x22 || escaped === 0x27 || escaped === 0x5c) {\n        // single-quote, apostrophe, backslash - escape these\n        out += '\\\\' + String.fromCharCode(escaped);\n      } else {\n        out += String.fromCharCode(escaped);\n      }\n    }\n  }\n\n  return out;\n}\n\n// handle string\n//\nTokenizer.prototype._read_string_recursive = function(delimiter, allow_unescaped_newlines, start_sub) {\n  var current_char;\n  var pattern;\n  if (delimiter === '\\'') {\n    pattern = this.__patterns.single_quote;\n  } else if (delimiter === '\"') {\n    pattern = this.__patterns.double_quote;\n  } else if (delimiter === '`') {\n    pattern = this.__patterns.template_text;\n  } else if (delimiter === '}') {\n    pattern = this.__patterns.template_expression;\n  }\n\n  var resulting_string = pattern.read();\n  var next = '';\n  while (this._input.hasNext()) {\n    next = this._input.next();\n    if (next === delimiter ||\n      (!allow_unescaped_newlines && acorn.newline.test(next))) {\n      this._input.back();\n      break;\n    } else if (next === '\\\\' && this._input.hasNext()) {\n      current_char = this._input.peek();\n\n      if (current_char === 'x' || current_char === 'u') {\n        this.has_char_escapes = true;\n      } else if (current_char === '\\r' && this._input.peek(1) === '\\n') {\n        this._input.next();\n      }\n      next += this._input.next();\n    } else if (start_sub) {\n      if (start_sub === '${' && next === '$' && this._input.peek() === '{') {\n        next += this._input.next();\n      }\n\n      if (start_sub === next) {\n        if (delimiter === '`') {\n          next += this._read_string_recursive('}', allow_unescaped_newlines, '`');\n        } else {\n          next += this._read_string_recursive('`', allow_unescaped_newlines, '${');\n        }\n        if (this._input.hasNext()) {\n          next += this._input.next();\n        }\n      }\n    }\n    next += pattern.read();\n    resulting_string += next;\n  }\n\n  return resulting_string;\n};\n\nmodule.exports.Tokenizer = Tokenizer;\nmodule.exports.TOKEN = TOKEN;\nmodule.exports.positionable_operators = positionable_operators.slice();\nmodule.exports.line_starters = line_starters.slice();\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nvar regexp_has_sticky = RegExp.prototype.hasOwnProperty('sticky');\n\nfunction InputScanner(input_string) {\n  this.__input = input_string || '';\n  this.__input_length = this.__input.length;\n  this.__position = 0;\n}\n\nInputScanner.prototype.restart = function() {\n  this.__position = 0;\n};\n\nInputScanner.prototype.back = function() {\n  if (this.__position > 0) {\n    this.__position -= 1;\n  }\n};\n\nInputScanner.prototype.hasNext = function() {\n  return this.__position < this.__input_length;\n};\n\nInputScanner.prototype.next = function() {\n  var val = null;\n  if (this.hasNext()) {\n    val = this.__input.charAt(this.__position);\n    this.__position += 1;\n  }\n  return val;\n};\n\nInputScanner.prototype.peek = function(index) {\n  var val = null;\n  index = index || 0;\n  index += this.__position;\n  if (index >= 0 && index < this.__input_length) {\n    val = this.__input.charAt(index);\n  }\n  return val;\n};\n\n// This is a JavaScript only helper function (not in python)\n// Javascript doesn't have a match method\n// and not all implementation support \"sticky\" flag.\n// If they do not support sticky then both this.match() and this.test() method\n// must get the match and check the index of the match.\n// If sticky is supported and set, this method will use it.\n// Otherwise it will check that global is set, and fall back to the slower method.\nInputScanner.prototype.__match = function(pattern, index) {\n  pattern.lastIndex = index;\n  var pattern_match = pattern.exec(this.__input);\n\n  if (pattern_match && !(regexp_has_sticky && pattern.sticky)) {\n    if (pattern_match.index !== index) {\n      pattern_match = null;\n    }\n  }\n\n  return pattern_match;\n};\n\nInputScanner.prototype.test = function(pattern, index) {\n  index = index || 0;\n  index += this.__position;\n\n  if (index >= 0 && index < this.__input_length) {\n    return !!this.__match(pattern, index);\n  } else {\n    return false;\n  }\n};\n\nInputScanner.prototype.testChar = function(pattern, index) {\n  // test one character regex match\n  var val = this.peek(index);\n  pattern.lastIndex = 0;\n  return val !== null && pattern.test(val);\n};\n\nInputScanner.prototype.match = function(pattern) {\n  var pattern_match = this.__match(pattern, this.__position);\n  if (pattern_match) {\n    this.__position += pattern_match[0].length;\n  } else {\n    pattern_match = null;\n  }\n  return pattern_match;\n};\n\nInputScanner.prototype.read = function(starting_pattern, until_pattern, until_after) {\n  var val = '';\n  var match;\n  if (starting_pattern) {\n    match = this.match(starting_pattern);\n    if (match) {\n      val += match[0];\n    }\n  }\n  if (until_pattern && (match || !starting_pattern)) {\n    val += this.readUntil(until_pattern, until_after);\n  }\n  return val;\n};\n\nInputScanner.prototype.readUntil = function(pattern, until_after) {\n  var val = '';\n  var match_index = this.__position;\n  pattern.lastIndex = this.__position;\n  var pattern_match = pattern.exec(this.__input);\n  if (pattern_match) {\n    match_index = pattern_match.index;\n    if (until_after) {\n      match_index += pattern_match[0].length;\n    }\n  } else {\n    match_index = this.__input_length;\n  }\n\n  val = this.__input.substring(this.__position, match_index);\n  this.__position = match_index;\n  return val;\n};\n\nInputScanner.prototype.readUntilAfter = function(pattern) {\n  return this.readUntil(pattern, true);\n};\n\nInputScanner.prototype.get_regexp = function(pattern, match_from) {\n  var result = null;\n  var flags = 'g';\n  if (match_from && regexp_has_sticky) {\n    flags = 'y';\n  }\n  // strings are converted to regexp\n  if (typeof pattern === \"string\" && pattern !== '') {\n    // result = new RegExp(pattern.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), flags);\n    result = new RegExp(pattern, flags);\n  } else if (pattern) {\n    result = new RegExp(pattern.source, flags);\n  }\n  return result;\n};\n\nInputScanner.prototype.get_literal_regexp = function(literal_string) {\n  return RegExp(literal_string.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'));\n};\n\n/* css beautifier legacy helpers */\nInputScanner.prototype.peekUntilAfter = function(pattern) {\n  var start = this.__position;\n  var val = this.readUntilAfter(pattern);\n  this.__position = start;\n  return val;\n};\n\nInputScanner.prototype.lookBack = function(testVal) {\n  var start = this.__position - 1;\n  return start >= testVal.length && this.__input.substring(start - testVal.length, start)\n    .toLowerCase() === testVal;\n};\n\nmodule.exports.InputScanner = InputScanner;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nvar InputScanner = __webpack_require__(8).InputScanner;\nvar Token = __webpack_require__(3).Token;\nvar TokenStream = __webpack_require__(10).TokenStream;\nvar WhitespacePattern = __webpack_require__(11).WhitespacePattern;\n\nvar TOKEN = {\n  START: 'TK_START',\n  RAW: 'TK_RAW',\n  EOF: 'TK_EOF'\n};\n\nvar Tokenizer = function(input_string, options) {\n  this._input = new InputScanner(input_string);\n  this._options = options || {};\n  this.__tokens = null;\n\n  this._patterns = {};\n  this._patterns.whitespace = new WhitespacePattern(this._input);\n};\n\nTokenizer.prototype.tokenize = function() {\n  this._input.restart();\n  this.__tokens = new TokenStream();\n\n  this._reset();\n\n  var current;\n  var previous = new Token(TOKEN.START, '');\n  var open_token = null;\n  var open_stack = [];\n  var comments = new TokenStream();\n\n  while (previous.type !== TOKEN.EOF) {\n    current = this._get_next_token(previous, open_token);\n    while (this._is_comment(current)) {\n      comments.add(current);\n      current = this._get_next_token(previous, open_token);\n    }\n\n    if (!comments.isEmpty()) {\n      current.comments_before = comments;\n      comments = new TokenStream();\n    }\n\n    current.parent = open_token;\n\n    if (this._is_opening(current)) {\n      open_stack.push(open_token);\n      open_token = current;\n    } else if (open_token && this._is_closing(current, open_token)) {\n      current.opened = open_token;\n      open_token.closed = current;\n      open_token = open_stack.pop();\n      current.parent = open_token;\n    }\n\n    current.previous = previous;\n    previous.next = current;\n\n    this.__tokens.add(current);\n    previous = current;\n  }\n\n  return this.__tokens;\n};\n\n\nTokenizer.prototype._is_first_token = function() {\n  return this.__tokens.isEmpty();\n};\n\nTokenizer.prototype._reset = function() {};\n\nTokenizer.prototype._get_next_token = function(previous_token, open_token) { // jshint unused:false\n  this._readWhitespace();\n  var resulting_string = this._input.read(/.+/g);\n  if (resulting_string) {\n    return this._create_token(TOKEN.RAW, resulting_string);\n  } else {\n    return this._create_token(TOKEN.EOF, '');\n  }\n};\n\nTokenizer.prototype._is_comment = function(current_token) { // jshint unused:false\n  return false;\n};\n\nTokenizer.prototype._is_opening = function(current_token) { // jshint unused:false\n  return false;\n};\n\nTokenizer.prototype._is_closing = function(current_token, open_token) { // jshint unused:false\n  return false;\n};\n\nTokenizer.prototype._create_token = function(type, text) {\n  var token = new Token(type, text,\n    this._patterns.whitespace.newline_count,\n    this._patterns.whitespace.whitespace_before_token);\n  return token;\n};\n\nTokenizer.prototype._readWhitespace = function() {\n  return this._patterns.whitespace.read();\n};\n\n\n\nmodule.exports.Tokenizer = Tokenizer;\nmodule.exports.TOKEN = TOKEN;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nfunction TokenStream(parent_token) {\n  // private\n  this.__tokens = [];\n  this.__tokens_length = this.__tokens.length;\n  this.__position = 0;\n  this.__parent_token = parent_token;\n}\n\nTokenStream.prototype.restart = function() {\n  this.__position = 0;\n};\n\nTokenStream.prototype.isEmpty = function() {\n  return this.__tokens_length === 0;\n};\n\nTokenStream.prototype.hasNext = function() {\n  return this.__position < this.__tokens_length;\n};\n\nTokenStream.prototype.next = function() {\n  var val = null;\n  if (this.hasNext()) {\n    val = this.__tokens[this.__position];\n    this.__position += 1;\n  }\n  return val;\n};\n\nTokenStream.prototype.peek = function(index) {\n  var val = null;\n  index = index || 0;\n  index += this.__position;\n  if (index >= 0 && index < this.__tokens_length) {\n    val = this.__tokens[index];\n  }\n  return val;\n};\n\nTokenStream.prototype.add = function(token) {\n  if (this.__parent_token) {\n    token.parent = this.__parent_token;\n  }\n  this.__tokens.push(token);\n  this.__tokens_length += 1;\n};\n\nmodule.exports.TokenStream = TokenStream;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nvar Pattern = __webpack_require__(12).Pattern;\n\nfunction WhitespacePattern(input_scanner, parent) {\n  Pattern.call(this, input_scanner, parent);\n  if (parent) {\n    this._line_regexp = this._input.get_regexp(parent._line_regexp);\n  } else {\n    this.__set_whitespace_patterns('', '');\n  }\n\n  this.newline_count = 0;\n  this.whitespace_before_token = '';\n}\nWhitespacePattern.prototype = new Pattern();\n\nWhitespacePattern.prototype.__set_whitespace_patterns = function(whitespace_chars, newline_chars) {\n  whitespace_chars += '\\\\t ';\n  newline_chars += '\\\\n\\\\r';\n\n  this._match_pattern = this._input.get_regexp(\n    '[' + whitespace_chars + newline_chars + ']+', true);\n  this._newline_regexp = this._input.get_regexp(\n    '\\\\r\\\\n|[' + newline_chars + ']');\n};\n\nWhitespacePattern.prototype.read = function() {\n  this.newline_count = 0;\n  this.whitespace_before_token = '';\n\n  var resulting_string = this._input.read(this._match_pattern);\n  if (resulting_string === ' ') {\n    this.whitespace_before_token = ' ';\n  } else if (resulting_string) {\n    var matches = this.__split(this._newline_regexp, resulting_string);\n    this.newline_count = matches.length - 1;\n    this.whitespace_before_token = matches[this.newline_count];\n  }\n\n  return resulting_string;\n};\n\nWhitespacePattern.prototype.matching = function(whitespace_chars, newline_chars) {\n  var result = this._create();\n  result.__set_whitespace_patterns(whitespace_chars, newline_chars);\n  result._update();\n  return result;\n};\n\nWhitespacePattern.prototype._create = function() {\n  return new WhitespacePattern(this._input, this);\n};\n\nWhitespacePattern.prototype.__split = function(regexp, input_string) {\n  regexp.lastIndex = 0;\n  var start_index = 0;\n  var result = [];\n  var next_match = regexp.exec(input_string);\n  while (next_match) {\n    result.push(input_string.substring(start_index, next_match.index));\n    start_index = next_match.index + next_match[0].length;\n    next_match = regexp.exec(input_string);\n  }\n\n  if (start_index < input_string.length) {\n    result.push(input_string.substring(start_index, input_string.length));\n  } else {\n    result.push('');\n  }\n\n  return result;\n};\n\n\n\nmodule.exports.WhitespacePattern = WhitespacePattern;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nfunction Pattern(input_scanner, parent) {\n  this._input = input_scanner;\n  this._starting_pattern = null;\n  this._match_pattern = null;\n  this._until_pattern = null;\n  this._until_after = false;\n\n  if (parent) {\n    this._starting_pattern = this._input.get_regexp(parent._starting_pattern, true);\n    this._match_pattern = this._input.get_regexp(parent._match_pattern, true);\n    this._until_pattern = this._input.get_regexp(parent._until_pattern);\n    this._until_after = parent._until_after;\n  }\n}\n\nPattern.prototype.read = function() {\n  var result = this._input.read(this._starting_pattern);\n  if (!this._starting_pattern || result) {\n    result += this._input.read(this._match_pattern, this._until_pattern, this._until_after);\n  }\n  return result;\n};\n\nPattern.prototype.read_match = function() {\n  return this._input.match(this._match_pattern);\n};\n\nPattern.prototype.until_after = function(pattern) {\n  var result = this._create();\n  result._until_after = true;\n  result._until_pattern = this._input.get_regexp(pattern);\n  result._update();\n  return result;\n};\n\nPattern.prototype.until = function(pattern) {\n  var result = this._create();\n  result._until_after = false;\n  result._until_pattern = this._input.get_regexp(pattern);\n  result._update();\n  return result;\n};\n\nPattern.prototype.starting_with = function(pattern) {\n  var result = this._create();\n  result._starting_pattern = this._input.get_regexp(pattern, true);\n  result._update();\n  return result;\n};\n\nPattern.prototype.matching = function(pattern) {\n  var result = this._create();\n  result._match_pattern = this._input.get_regexp(pattern, true);\n  result._update();\n  return result;\n};\n\nPattern.prototype._create = function() {\n  return new Pattern(this._input, this);\n};\n\nPattern.prototype._update = function() {};\n\nmodule.exports.Pattern = Pattern;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nfunction Directives(start_block_pattern, end_block_pattern) {\n  start_block_pattern = typeof start_block_pattern === 'string' ? start_block_pattern : start_block_pattern.source;\n  end_block_pattern = typeof end_block_pattern === 'string' ? end_block_pattern : end_block_pattern.source;\n  this.__directives_block_pattern = new RegExp(start_block_pattern + / beautify( \\w+[:]\\w+)+ /.source + end_block_pattern, 'g');\n  this.__directive_pattern = / (\\w+)[:](\\w+)/g;\n\n  this.__directives_end_ignore_pattern = new RegExp(start_block_pattern + /\\sbeautify\\signore:end\\s/.source + end_block_pattern, 'g');\n}\n\nDirectives.prototype.get_directives = function(text) {\n  if (!text.match(this.__directives_block_pattern)) {\n    return null;\n  }\n\n  var directives = {};\n  this.__directive_pattern.lastIndex = 0;\n  var directive_match = this.__directive_pattern.exec(text);\n\n  while (directive_match) {\n    directives[directive_match[1]] = directive_match[2];\n    directive_match = this.__directive_pattern.exec(text);\n  }\n\n  return directives;\n};\n\nDirectives.prototype.readIgnored = function(input) {\n  return input.readUntilAfter(this.__directives_end_ignore_pattern);\n};\n\n\nmodule.exports.Directives = Directives;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nvar Pattern = __webpack_require__(12).Pattern;\n\n\nvar template_names = {\n  django: false,\n  erb: false,\n  handlebars: false,\n  php: false\n};\n\n// This lets templates appear anywhere we would do a readUntil\n// The cost is higher but it is pay to play.\nfunction TemplatablePattern(input_scanner, parent) {\n  Pattern.call(this, input_scanner, parent);\n  this.__template_pattern = null;\n  this._disabled = Object.assign({}, template_names);\n  this._excluded = Object.assign({}, template_names);\n\n  if (parent) {\n    this.__template_pattern = this._input.get_regexp(parent.__template_pattern);\n    this._excluded = Object.assign(this._excluded, parent._excluded);\n    this._disabled = Object.assign(this._disabled, parent._disabled);\n  }\n  var pattern = new Pattern(input_scanner);\n  this.__patterns = {\n    handlebars_comment: pattern.starting_with(/{{!--/).until_after(/--}}/),\n    handlebars_unescaped: pattern.starting_with(/{{{/).until_after(/}}}/),\n    handlebars: pattern.starting_with(/{{/).until_after(/}}/),\n    php: pattern.starting_with(/<\\?(?:[=]|php)/).until_after(/\\?>/),\n    erb: pattern.starting_with(/<%[^%]/).until_after(/[^%]%>/),\n    // django coflicts with handlebars a bit.\n    django: pattern.starting_with(/{%/).until_after(/%}/),\n    django_value: pattern.starting_with(/{{/).until_after(/}}/),\n    django_comment: pattern.starting_with(/{#/).until_after(/#}/)\n  };\n}\nTemplatablePattern.prototype = new Pattern();\n\nTemplatablePattern.prototype._create = function() {\n  return new TemplatablePattern(this._input, this);\n};\n\nTemplatablePattern.prototype._update = function() {\n  this.__set_templated_pattern();\n};\n\nTemplatablePattern.prototype.disable = function(language) {\n  var result = this._create();\n  result._disabled[language] = true;\n  result._update();\n  return result;\n};\n\nTemplatablePattern.prototype.read_options = function(options) {\n  var result = this._create();\n  for (var language in template_names) {\n    result._disabled[language] = options.templating.indexOf(language) === -1;\n  }\n  result._update();\n  return result;\n};\n\nTemplatablePattern.prototype.exclude = function(language) {\n  var result = this._create();\n  result._excluded[language] = true;\n  result._update();\n  return result;\n};\n\nTemplatablePattern.prototype.read = function() {\n  var result = '';\n  if (this._match_pattern) {\n    result = this._input.read(this._starting_pattern);\n  } else {\n    result = this._input.read(this._starting_pattern, this.__template_pattern);\n  }\n  var next = this._read_template();\n  while (next) {\n    if (this._match_pattern) {\n      next += this._input.read(this._match_pattern);\n    } else {\n      next += this._input.readUntil(this.__template_pattern);\n    }\n    result += next;\n    next = this._read_template();\n  }\n\n  if (this._until_after) {\n    result += this._input.readUntilAfter(this._until_pattern);\n  }\n  return result;\n};\n\nTemplatablePattern.prototype.__set_templated_pattern = function() {\n  var items = [];\n\n  if (!this._disabled.php) {\n    items.push(this.__patterns.php._starting_pattern.source);\n  }\n  if (!this._disabled.handlebars) {\n    items.push(this.__patterns.handlebars._starting_pattern.source);\n  }\n  if (!this._disabled.erb) {\n    items.push(this.__patterns.erb._starting_pattern.source);\n  }\n  if (!this._disabled.django) {\n    items.push(this.__patterns.django._starting_pattern.source);\n    items.push(this.__patterns.django_value._starting_pattern.source);\n    items.push(this.__patterns.django_comment._starting_pattern.source);\n  }\n\n  if (this._until_pattern) {\n    items.push(this._until_pattern.source);\n  }\n  this.__template_pattern = this._input.get_regexp('(?:' + items.join('|') + ')');\n};\n\nTemplatablePattern.prototype._read_template = function() {\n  var resulting_string = '';\n  var c = this._input.peek();\n  if (c === '<') {\n    var peek1 = this._input.peek(1);\n    //if we're in a comment, do something special\n    // We treat all comments as literals, even more than preformatted tags\n    // we just look for the appropriate close tag\n    if (!this._disabled.php && !this._excluded.php && peek1 === '?') {\n      resulting_string = resulting_string ||\n        this.__patterns.php.read();\n    }\n    if (!this._disabled.erb && !this._excluded.erb && peek1 === '%') {\n      resulting_string = resulting_string ||\n        this.__patterns.erb.read();\n    }\n  } else if (c === '{') {\n    if (!this._disabled.handlebars && !this._excluded.handlebars) {\n      resulting_string = resulting_string ||\n        this.__patterns.handlebars_comment.read();\n      resulting_string = resulting_string ||\n        this.__patterns.handlebars_unescaped.read();\n      resulting_string = resulting_string ||\n        this.__patterns.handlebars.read();\n    }\n    if (!this._disabled.django) {\n      // django coflicts with handlebars a bit.\n      if (!this._excluded.django && !this._excluded.handlebars) {\n        resulting_string = resulting_string ||\n          this.__patterns.django_value.read();\n      }\n      if (!this._excluded.django) {\n        resulting_string = resulting_string ||\n          this.__patterns.django_comment.read();\n        resulting_string = resulting_string ||\n          this.__patterns.django.read();\n      }\n    }\n  }\n  return resulting_string;\n};\n\n\nmodule.exports.TemplatablePattern = TemplatablePattern;\n\n\n/***/ })\n/******/ ]);\nvar js_beautify = legacy_beautify_js;\n/* Footer */\nif (typeof define === \"function\" && define.amd) {\n    // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n    define([], function() {\n        return { js_beautify: js_beautify };\n    });\n} else if (typeof exports !== \"undefined\") {\n    // Add support for CommonJS. Just put this file somewhere on your require.paths\n    // and you will be able to `var js_beautify = require(\"beautify\").js_beautify`.\n    exports.js_beautify = js_beautify;\n} else if (typeof window !== \"undefined\") {\n    // If we're running a web page and don't have either of the above, add our one global\n    window.js_beautify = js_beautify;\n} else if (typeof global !== \"undefined\") {\n    // If we don't even have window, try global.\n    global.js_beautify = js_beautify;\n}\n\n}());\n\n"]},"metadata":{},"sourceType":"script"}