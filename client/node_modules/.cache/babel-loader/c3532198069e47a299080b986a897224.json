{"ast":null,"code":"// SPDX-License-Identifier: Apache-2.0\nexport default class Auth{/**\n\t * Authenticate a user. Save a token string in Local Storage\n\t *\n\t * @param {string} token\n\t */static authenticateUser(token){localStorage.setItem('token',token);}/**\n\t * Check if a user is authenticated - check if a token is saved in Local Storage\n\t *\n\t * @returns {boolean}\n\t */static isUserAuthenticated(){return localStorage.getItem('token')!==null;}/**\n\t * Deauthenticate a user. Remove a token from Local Storage.\n\t *\n\t */static deauthenticateUser(){localStorage.removeItem('token');}/**\n\t * Get a token value.\n\t *\n\t * @returns {string}\n\t */static getToken(){return localStorage.getItem('token');}}","map":{"version":3,"sources":["/home/shivam/blockchain-explorer/client/src/state/Auth.js"],"names":["Auth","authenticateUser","token","localStorage","setItem","isUserAuthenticated","getItem","deauthenticateUser","removeItem","getToken"],"mappings":"AAAA;AACA,cAAe,MAAMA,CAAAA,IAAK,CACzB;;;;IAKA,MAAOC,CAAAA,gBAAP,CAAwBC,KAAxB,CAA+B,CAC9BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BF,KAA9B,EACA,CAED;;;;IAKA,MAAOG,CAAAA,mBAAP,EAA6B,CAC5B,MAAOF,CAAAA,YAAY,CAACG,OAAb,CAAqB,OAArB,IAAkC,IAAzC,CACA,CAED;;;IAIA,MAAOC,CAAAA,kBAAP,EAA4B,CAC3BJ,YAAY,CAACK,UAAb,CAAwB,OAAxB,EACA,CAED;;;;IAMA,MAAOC,CAAAA,QAAP,EAAkB,CACjB,MAAON,CAAAA,YAAY,CAACG,OAAb,CAAqB,OAArB,CAAP,CACA,CAnCwB","sourcesContent":["// SPDX-License-Identifier: Apache-2.0\nexport default class Auth {\n\t/**\n\t * Authenticate a user. Save a token string in Local Storage\n\t *\n\t * @param {string} token\n\t */\n\tstatic authenticateUser(token) {\n\t\tlocalStorage.setItem('token', token);\n\t}\n\n\t/**\n\t * Check if a user is authenticated - check if a token is saved in Local Storage\n\t *\n\t * @returns {boolean}\n\t */\n\tstatic isUserAuthenticated() {\n\t\treturn localStorage.getItem('token') !== null;\n\t}\n\n\t/**\n\t * Deauthenticate a user. Remove a token from Local Storage.\n\t *\n\t */\n\tstatic deauthenticateUser() {\n\t\tlocalStorage.removeItem('token');\n\t}\n\n\t/**\n\t * Get a token value.\n\t *\n\t * @returns {string}\n\t */\n\n\tstatic getToken() {\n\t\treturn localStorage.getItem('token');\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}