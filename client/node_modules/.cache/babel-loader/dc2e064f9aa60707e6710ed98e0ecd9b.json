{"ast":null,"code":"/**\n *    SPDX-License-Identifier: Apache-2.0\n */import{combineReducers}from'redux';import types from'./types';/* Reducers for Dashboard Charts */const initialState={};const blockPerHourReducer=(state=initialState,action)=>{switch(action.type){case types.BLOCK_CHART_HOUR:{return{rows:action.payload.blockPerHour.rows,loaded:true,errors:action.errors};}default:{return state;}}};const errorMessageReducer=(state=initialState,action)=>{switch(action.type){case types.ERROR_MESSAGE:{return{error:action.payload};}default:{return state;}}};const blockPerMinReducer=(state=initialState,action)=>{switch(action.type){case types.BLOCK_CHART_MIN:{return{rows:action.payload.blockPerMin.rows,loaded:true,errors:action.errors};}default:{return state;}}};const channelListReducer=(state=initialState,action)=>{switch(action.type){case types.CHANNEL_LIST:{return{list:action.payload.channels,loaded:true,errors:action.errors};}default:{return state;}}};const channelReducer=(state=initialState,action)=>{switch(action.type){case types.CHANNEL:{return action.payload.channel;}case types.CHANGE_CHANNEL:{return action.payload.channel;}default:{return state;}}};const dashStatsReducer=(state=initialState,action)=>{switch(action.type){case types.DASHBOARD_STATS:{return action.payload;}default:{return state;}}};const blockActivityReducer=(state=initialState,action)=>{switch(action.type){case types.BLOCK_ACTIVITY:{return{rows:action.payload.row,loaded:true,errors:action.errors};}default:{return state;}}};const notificationReducer=(state=initialState,action)=>{switch(action.type){case types.NOTIFICATION_LOAD:{return action.payload.notification;}default:{return state;}}};const peerStatusReducer=(state=initialState,action)=>{switch(action.type){case types.PEER_STATUS:{return{list:action.payload.peers,loaded:true,errors:action.errors};}default:{return state;}}};const transactionByOrgReducer=(state=initialState,action)=>{switch(action.type){case types.TRANSACTION_CHART_ORG:{return{rows:action.payload.rows,loaded:true,errors:action.errors};}default:{return state;}}};const transactionPerHourReducer=(state=initialState,action)=>{switch(action.type){case types.TRANSACTION_CHART_HOUR:{return{rows:action.payload.transactionPerHour.rows,loaded:true,errors:action.errors};}default:{return state;}}};const transactionPerMinReducer=(state=initialState,action)=>{switch(action.type){case types.TRANSACTION_CHART_MIN:{return{rows:action.payload.transactionPerMin.rows,loaded:true,errors:action.errors};}default:{return state;}}};const reducer=combineReducers({blockPerHour:blockPerHourReducer,blockPerMin:blockPerMinReducer,channel:channelReducer,channelList:channelListReducer,dashStats:dashStatsReducer,notification:notificationReducer,peerStatus:peerStatusReducer,transactionByOrg:transactionByOrgReducer,transactionPerHour:transactionPerHourReducer,transactionPerMin:transactionPerMinReducer,errorMessage:errorMessageReducer,blockActivity:blockActivityReducer});export default reducer;","map":{"version":3,"sources":["/home/shivam/blockchain-explorer/client/src/state/redux/charts/reducers.js"],"names":["combineReducers","types","initialState","blockPerHourReducer","state","action","type","BLOCK_CHART_HOUR","rows","payload","blockPerHour","loaded","errors","errorMessageReducer","ERROR_MESSAGE","error","blockPerMinReducer","BLOCK_CHART_MIN","blockPerMin","channelListReducer","CHANNEL_LIST","list","channels","channelReducer","CHANNEL","channel","CHANGE_CHANNEL","dashStatsReducer","DASHBOARD_STATS","blockActivityReducer","BLOCK_ACTIVITY","row","notificationReducer","NOTIFICATION_LOAD","notification","peerStatusReducer","PEER_STATUS","peers","transactionByOrgReducer","TRANSACTION_CHART_ORG","transactionPerHourReducer","TRANSACTION_CHART_HOUR","transactionPerHour","transactionPerMinReducer","TRANSACTION_CHART_MIN","transactionPerMin","reducer","channelList","dashStats","peerStatus","transactionByOrg","errorMessage","blockActivity"],"mappings":"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","sourcesContent":["/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport { combineReducers } from 'redux';\nimport types from './types';\n\n/* Reducers for Dashboard Charts */\nconst initialState = {};\n\nconst blockPerHourReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.BLOCK_CHART_HOUR: {\n      return {\n        rows: action.payload.blockPerHour.rows,\n        loaded: true,\n        errors: action.errors,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\nconst errorMessageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.ERROR_MESSAGE: {\n      return {\n        error: action.payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst blockPerMinReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.BLOCK_CHART_MIN: {\n      return {\n        rows: action.payload.blockPerMin.rows,\n        loaded: true,\n        errors: action.errors,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst channelListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.CHANNEL_LIST: {\n      return {\n        list: action.payload.channels,\n        loaded: true,\n        errors: action.errors,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst channelReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.CHANNEL: {\n      return action.payload.channel;\n    }\n    case types.CHANGE_CHANNEL: {\n      return action.payload.channel;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst dashStatsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.DASHBOARD_STATS: {\n      return action.payload;\n    }\n    default: {\n      return state;\n    }\n  }\n};\nconst blockActivityReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.BLOCK_ACTIVITY: {\n      return {\n        rows: action.payload.row,\n        loaded: true,\n        errors: action.errors,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\nconst notificationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.NOTIFICATION_LOAD: {\n      return action.payload.notification;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst peerStatusReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.PEER_STATUS: {\n      return {\n        list: action.payload.peers,\n        loaded: true,\n        errors: action.errors,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst transactionByOrgReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.TRANSACTION_CHART_ORG: {\n      return {\n        rows: action.payload.rows,\n        loaded: true,\n        errors: action.errors,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst transactionPerHourReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.TRANSACTION_CHART_HOUR: {\n      return {\n        rows: action.payload.transactionPerHour.rows,\n        loaded: true,\n        errors: action.errors,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst transactionPerMinReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.TRANSACTION_CHART_MIN: {\n      return {\n        rows: action.payload.transactionPerMin.rows,\n        loaded: true,\n        errors: action.errors,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst reducer = combineReducers({\n  blockPerHour: blockPerHourReducer,\n  blockPerMin: blockPerMinReducer,\n  channel: channelReducer,\n  channelList: channelListReducer,\n  dashStats: dashStatsReducer,\n  notification: notificationReducer,\n  peerStatus: peerStatusReducer,\n  transactionByOrg: transactionByOrgReducer,\n  transactionPerHour: transactionPerHourReducer,\n  transactionPerMin: transactionPerMinReducer,\n  errorMessage: errorMessageReducer,\n  blockActivity: blockActivityReducer,\n});\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}