{"ast":null,"code":"import _objectSpread from\"/home/shivam/blockchain-explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/**\n *    SPDX-License-Identifier: Apache-2.0\n */import React from'react';import compose from'recompose/compose';import{withStyles}from'@material-ui/core/styles';import{connect}from'react-redux';import{HashRouter as Router,Route,Switch}from'react-router-dom';import BlocksView from'./View/BlocksView';import NetworkView from'./View/NetworkView';import TransactionsView from'./View/TransactionsView';import ChaincodeView from'./View/ChaincodeView';import DashboardView from'./View/DashboardView';import ChannelsView from'./View/ChannelsView';import{chartSelectors}from'../state/redux/charts';import{tableOperations,tableSelectors}from'../state/redux/tables';import{blockListType,chaincodeListType,channelsType,currentChannelType,dashStatsType,getTransactionType,peerListType,peerStatusType,transactionType,transactionByOrgType,transactionListType}from'./types';import PageNotFound from'./View/PageNotFound';import Private from'./Route';const currentChannelSelector=chartSelectors.currentChannelSelector,blockActivitySelector=chartSelectors.blockActivitySelector,channelListSelector=chartSelectors.channelListSelector,dashStatsSelector=chartSelectors.dashStatsSelector,peerStatusSelector=chartSelectors.peerStatusSelector,transactionByOrgSelector=chartSelectors.transactionByOrgSelector;const blockListSelector=tableSelectors.blockListSelector,chaincodeListSelector=tableSelectors.chaincodeListSelector,channelsSelector=tableSelectors.channelsSelector,peerListSelector=tableSelectors.peerListSelector,transactionSelector=tableSelectors.transactionSelector,transactionListSelector=tableSelectors.transactionListSelector,blockListSearchSelector=tableSelectors.blockListSearchSelector,transactionListSearchSelector=tableSelectors.transactionListSearchSelector;const styles=theme=>{const type=theme.palette.type;const dark=type==='dark';return{main:{color:dark?'#ffffff':undefined}};};export const Main=props=>{const classes=props.classes,blockList=props.blockList,blockActivity=props.blockActivity,chaincodeList=props.chaincodeList,channels=props.channels,currentChannel=props.currentChannel,dashStats=props.dashStats,getTransaction=props.getTransaction,peerList=props.peerList,peerStatus=props.peerStatus,transaction=props.transaction,transactionByOrg=props.transactionByOrg,transactionList=props.transactionList,blockListSearch=props.blockListSearch,transactionListSearch=props.transactionListSearch,getBlockListSearch=props.getBlockListSearch,getTransactionListSearch=props.getTransactionListSearch;const blocksViewProps={blockList,blockListSearch,getBlockListSearch,transactionByOrg,currentChannel,getTransaction,transaction};const chaincodeViewProps={chaincodeList};const channelsViewProps={channels};const dashboardViewProps={blockList,dashStats,peerStatus,transactionByOrg,blockActivity};const networkViewProps={peerList};const transactionsViewProps={currentChannel,transaction,transactionList,getTransaction,transactionByOrg,transactionListSearch,getTransactionListSearch};return/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(\"div\",{className:classes.main},/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Private,{exact:true,path:\"/\",render:routeprops=>/*#__PURE__*/React.createElement(DashboardView,_objectSpread(_objectSpread({},dashboardViewProps),routeprops))}),/*#__PURE__*/React.createElement(Private,{exact:true,path:\"/blocks\",render:routeprops=>/*#__PURE__*/React.createElement(BlocksView,_objectSpread(_objectSpread({},blocksViewProps),routeprops))}),/*#__PURE__*/React.createElement(Private,{exact:true,path:\"/chaincodes\",render:routeprops=>/*#__PURE__*/React.createElement(ChaincodeView,_objectSpread(_objectSpread({},chaincodeViewProps),routeprops))}),/*#__PURE__*/React.createElement(Private,{exact:true,path:\"/channels\",render:routeprops=>/*#__PURE__*/React.createElement(ChannelsView,_objectSpread(_objectSpread({},channelsViewProps),routeprops))}),/*#__PURE__*/React.createElement(Private,{exact:true,path:\"/network\",render:routeprops=>/*#__PURE__*/React.createElement(NetworkView,_objectSpread(_objectSpread({},networkViewProps),routeprops))}),/*#__PURE__*/React.createElement(Private,{exact:true,path:\"/transactions\",render:routeprops=>/*#__PURE__*/React.createElement(TransactionsView,_objectSpread(_objectSpread({},transactionsViewProps),routeprops))}),/*#__PURE__*/React.createElement(Route,{exact:true,render:routeprops=>/*#__PURE__*/React.createElement(PageNotFound,routeprops)}))));};export default compose(withStyles(styles),connect(state=>({blockList:blockListSelector(state),chaincodeList:chaincodeListSelector(state),channelList:channelListSelector(state),channels:channelsSelector(state),currentChannel:currentChannelSelector(state),dashStats:dashStatsSelector(state),peerList:peerListSelector(state),peerStatus:peerStatusSelector(state),transaction:transactionSelector(state),transactionByOrg:transactionByOrgSelector(state),transactionList:transactionListSelector(state),blockListSearch:blockListSearchSelector(state),transactionListSearch:transactionListSearchSelector(state),blockActivity:blockActivitySelector(state)}),{getTransaction:tableOperations.transaction,getBlockListSearch:tableOperations.blockListSearch,getTransactionListSearch:tableOperations.transactionListSearch}))(Main);","map":{"version":3,"sources":["/home/shivam/blockchain-explorer/client/src/components/Main.js"],"names":["React","compose","withStyles","connect","HashRouter","Router","Route","Switch","BlocksView","NetworkView","TransactionsView","ChaincodeView","DashboardView","ChannelsView","chartSelectors","tableOperations","tableSelectors","blockListType","chaincodeListType","channelsType","currentChannelType","dashStatsType","getTransactionType","peerListType","peerStatusType","transactionType","transactionByOrgType","transactionListType","PageNotFound","Private","currentChannelSelector","blockActivitySelector","channelListSelector","dashStatsSelector","peerStatusSelector","transactionByOrgSelector","blockListSelector","chaincodeListSelector","channelsSelector","peerListSelector","transactionSelector","transactionListSelector","blockListSearchSelector","transactionListSearchSelector","styles","theme","type","palette","dark","main","color","undefined","Main","props","classes","blockList","blockActivity","chaincodeList","channels","currentChannel","dashStats","getTransaction","peerList","peerStatus","transaction","transactionByOrg","transactionList","blockListSearch","transactionListSearch","getBlockListSearch","getTransactionListSearch","blocksViewProps","chaincodeViewProps","channelsViewProps","dashboardViewProps","networkViewProps","transactionsViewProps","routeprops","state","channelList"],"mappings":"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","sourcesContent":["/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React from 'react';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport BlocksView from './View/BlocksView';\nimport NetworkView from './View/NetworkView';\nimport TransactionsView from './View/TransactionsView';\nimport ChaincodeView from './View/ChaincodeView';\nimport DashboardView from './View/DashboardView';\nimport ChannelsView from './View/ChannelsView';\nimport { chartSelectors } from '../state/redux/charts';\nimport { tableOperations, tableSelectors } from '../state/redux/tables';\nimport {\n\tblockListType,\n\tchaincodeListType,\n\tchannelsType,\n\tcurrentChannelType,\n\tdashStatsType,\n\tgetTransactionType,\n\tpeerListType,\n\tpeerStatusType,\n\ttransactionType,\n\ttransactionByOrgType,\n\ttransactionListType\n} from './types';\nimport PageNotFound from './View/PageNotFound';\n\nimport Private from './Route';\n\nconst {\n\tcurrentChannelSelector,\n\tblockActivitySelector,\n\tchannelListSelector,\n\tdashStatsSelector,\n\tpeerStatusSelector,\n\ttransactionByOrgSelector\n} = chartSelectors;\n\nconst {\n\tblockListSelector,\n\tchaincodeListSelector,\n\tchannelsSelector,\n\tpeerListSelector,\n\ttransactionSelector,\n\ttransactionListSelector,\n\tblockListSearchSelector,\n\ttransactionListSearchSelector\n} = tableSelectors;\n\nconst styles = theme => {\n\tconst { type } = theme.palette;\n\tconst dark = type === 'dark';\n\treturn {\n\t\tmain: {\n\t\t\tcolor: dark ? '#ffffff' : undefined\n\t\t}\n\t};\n};\n\nexport const Main = props => {\n\tconst {\n\t\tclasses,\n\t\tblockList,\n\t\tblockActivity,\n\t\tchaincodeList,\n\t\tchannels,\n\t\tcurrentChannel,\n\t\tdashStats,\n\t\tgetTransaction,\n\t\tpeerList,\n\t\tpeerStatus,\n\t\ttransaction,\n\t\ttransactionByOrg,\n\t\ttransactionList,\n\t\tblockListSearch,\n\t\ttransactionListSearch,\n\t\tgetBlockListSearch,\n\t\tgetTransactionListSearch\n\t} = props;\n\n\tconst blocksViewProps = {\n\t\tblockList,\n\t\tblockListSearch,\n\t\tgetBlockListSearch,\n\t\ttransactionByOrg,\n\t\tcurrentChannel,\n\t\tgetTransaction,\n\t\ttransaction\n\t};\n\tconst chaincodeViewProps = {\n\t\tchaincodeList\n\t};\n\n\tconst channelsViewProps = {\n\t\tchannels\n\t};\n\n\tconst dashboardViewProps = {\n\t\tblockList,\n\t\tdashStats,\n\t\tpeerStatus,\n\t\ttransactionByOrg,\n\t\tblockActivity\n\t};\n\n\tconst networkViewProps = {\n\t\tpeerList\n\t};\n\n\tconst transactionsViewProps = {\n\t\tcurrentChannel,\n\t\ttransaction,\n\t\ttransactionList,\n\t\tgetTransaction,\n\t\ttransactionByOrg,\n\t\ttransactionListSearch,\n\t\tgetTransactionListSearch\n\t};\n\n\treturn (\n\t\t<Router>\n\t\t\t<div className={classes.main}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<DashboardView {...{ ...dashboardViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/blocks\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<BlocksView {...{ ...blocksViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/chaincodes\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<ChaincodeView {...{ ...chaincodeViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/channels\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<ChannelsView {...{ ...channelsViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/network\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<NetworkView {...{ ...networkViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/transactions\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<TransactionsView {...{ ...transactionsViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact render={routeprops => <PageNotFound {...routeprops} />} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n};\n\nMain.propTypes = {\n\tblockList: blockListType.isRequired,\n\tchaincodeList: chaincodeListType.isRequired,\n\tchannels: channelsType.isRequired,\n\tcurrentChannel: currentChannelType.isRequired,\n\tdashStats: dashStatsType.isRequired,\n\tgetTransaction: getTransactionType.isRequired,\n\tpeerList: peerListType.isRequired,\n\tpeerStatus: peerStatusType.isRequired,\n\ttransaction: transactionType.isRequired,\n\ttransactionByOrg: transactionByOrgType.isRequired,\n\ttransactionList: transactionListType.isRequired\n};\n\nexport default compose(\n\twithStyles(styles),\n\tconnect(\n\t\tstate => ({\n\t\t\tblockList: blockListSelector(state),\n\t\t\tchaincodeList: chaincodeListSelector(state),\n\t\t\tchannelList: channelListSelector(state),\n\t\t\tchannels: channelsSelector(state),\n\t\t\tcurrentChannel: currentChannelSelector(state),\n\t\t\tdashStats: dashStatsSelector(state),\n\t\t\tpeerList: peerListSelector(state),\n\t\t\tpeerStatus: peerStatusSelector(state),\n\t\t\ttransaction: transactionSelector(state),\n\t\t\ttransactionByOrg: transactionByOrgSelector(state),\n\t\t\ttransactionList: transactionListSelector(state),\n\t\t\tblockListSearch: blockListSearchSelector(state),\n\t\t\ttransactionListSearch: transactionListSearchSelector(state),\n\t\t\tblockActivity: blockActivitySelector(state)\n\t\t}),\n\t\t{\n\t\t\tgetTransaction: tableOperations.transaction,\n\t\t\tgetBlockListSearch: tableOperations.blockListSearch,\n\t\t\tgetTransactionListSearch: tableOperations.transactionListSearch\n\t\t}\n\t)\n)(Main);\n"]},"metadata":{},"sourceType":"module"}